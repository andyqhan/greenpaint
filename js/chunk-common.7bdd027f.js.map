{"version":3,"sources":["webpack:///./src/acrossLiteToJson.js","webpack:///./src/components/grid.vue?b0ad","webpack:///./src/App.vue","webpack:///./src/components/greenpaint.vue","webpack:///./src/components/grid.vue","webpack:///./src/components/square.vue","webpack:///./src/components/square.vue?21a4","webpack:///./src/components/grid.vue?e31f","webpack:///./src/components/clueContainer.vue","webpack:///./src/components/singleClue.vue","webpack:///./src/components/singleClue.vue?e99b","webpack:///./src/components/clueContainer.vue?40ea","webpack:///./src/components/toolbar.vue","webpack:///./src/components/stopwatch.vue","webpack:///./src/components/stopwatch.vue?3d4e","webpack:///./src/components/settings.vue","webpack:///./src/components/settingsInput.vue","webpack:///./src/components/settingsInput.vue?8afa","webpack:///./src/components/settings.vue?d81e","webpack:///./src/components/toolbar.vue?b6b1","webpack:///./src/components/greenpaint.vue?d440","webpack:///./src/App.vue?dfb6","webpack:///./src/main.js","webpack:///./src/components/toolbar.vue?2936","webpack:///./src/components/greenpaint.vue?f75b","webpack:///./src/components/settings.vue?264c","webpack:///./src/components/stopwatch.vue?8d81","webpack:///./src/components/square.vue?8241"],"names":["convertToJson","arrayBuffer","bytes","Uint8Array","console","log","puz","PuzReader","toJson","buf","this","ix","result","t","c","push","String","fromCodePoint","join","posObj","nameArr","i","length","gext","grbs","rtbl","ltim","rusr","specialRegionOrder","specialRegionIndices","w","h","startCircles","pos","j","startRtbl","tblArr","tblEntries","split","slice","tblObj","pair","trim","pairArr","startGrbs","out","thisCode","json","scrambled","readShort","Size","Cols","Rows","grid","findSpecialRegions","circles","findCircles","toLowerCase","HasCircles","rebusTable","findRebusTable","rebus","findRebus","singleLetterAns","rebusIndex","codes","rebusCode","IsRebus","Codes","newGrid","r","row","Row","Grid","Title","readString","Author","Copyright","across","down","label","inc","Num","Clue","Across","Down","error","module","exports","for","href","loaded","puzzledata","puzzleData","loading","uploadWait","id","type","accept","processFile","class","style","appStyle","toolbarCSS","ref","currentPoint","checkEar","$refs","revealSquare","revealWord","revealGrid","clearGrid","activateRebus","settingsObject","$event","setPuzzle","removeKeyEventListener","addKeyEventListener","isFinishedShow","activeClueCSS","activeClue","squareFocusToAppEar","gridFullEar","gridObject","puzzle","cluesAcross","cluesDown","rebusObj","key","gridKey","gridSizeObj","clueContStyle","primaryClueFocusToAppEar","clueFocus","clues","direction","clueClickToAppEar","acrossClueContKey","downClueContKey","bylineStyle","name","modalStyle","gridFullMessage","cssGridVars","staticGrid","row_index","cssRowVars","cell","cell_index","clickHandler","rebusEnter","rebusBlur","correctLetter","isBlock","isCircled","isRebus","isWordStartAcross","isWordStartDown","acrossNum","downNum","currentLetter","dynamicGrid","currentDirection","x","y","isPoint","isPrimarySelect","isSecondarySelect","isCorrect","isIncorrect","isRebusActive","isLeft","isRight","isTop","isBot","computedFontSize","d","tabindex","classObject","squareStyle","selectSquare","keyHandler","cluenumStyle","cluenum","cx","cy","stroke","selectedTheme","fgAlt","stroke-width","stroke-opacity","fill-opacity","currentLetterStyle","rebusInput","$emit","props","Number","Boolean","Object","emits","data","created","$watch","focusRebus","immediate","deep","computed","block","circled","primarySelect","secondarySelect","fontSize","color","fg","blue","borderColor","red","styleObj","darkBlue","base2","green","methods","event","letter","toUpperCase","$nextTick","focus","render","__scopeId","components","square","Array","previousSelectAcross","previousSelectDown","previousPoint","currentSquaresFilled","createDynamicGrid","watch","isGridFull","val","gridFullCheck","Math","max","squareCount","createRebusObj","codeList","codeObj","codeIn","outputGrid","currentWordNum","thisRowArray","char","thisCell","isNaN","toString","parseInt","count","iY","iX","firstSquareCoor","clearPrevious","ai","di","focusEar","eventX","eventY","primaryDirection","whileX","whileY","squareFocusEvent","focusFromClueClick","num","movePointNaive","targetY","targetX","movePointSmart","switchDirection","targetX2","switchDirectionAndFocus","clearSquareLetter","moveForwardCurrentDirection","moveBackwardCurrentDirection","getAcrossWordStart","currentAcrossNum","getAcrossWordEnd","getNextAcrossNum","clueIndex","getNextAcrossWord","getPreviousAcrossNum","getPreviousAcrossWord","prevAcrossNum","lastRow","moveAcrossWord","targetWordStart","targetEmpty","getNextEmptyAcross","getPreviousEmptyAcross","getDownWordStart","currentDownNum","getDownWordEnd","isDownWordEnd","getNextDownNum","getNextDownWord","currentDownStart","getPreviousDownNum","getPreviousDownWord","prevDownNum","moveDownWord","getNextEmptyDown","getPreviousEmptyDown","prevAcrossStart","prevAcrossEnd","found","nextDown","prevDownStart","prevDownEnd","moveNextEmpty","nextEmpty","moveAfterInsert","acrossWordStart","thisAcrossNum","downWordStart","thisDownNum","moveStartWord","target","moveEndWord","clearCheckSquare","checkSquare","checkWord","wordStart","wordEnd","checkGrid","clearWordLetters","preventDefault","bindFunctionObject","moveRightSquare","moveLeftSquare","moveUpSquare","moveDownSquare","deleteSquare","moveRightWord","moveLeftWord","deleteWord","test","window","addEventListener","removeEventListener","mounted","clue","primaryClueFocusEar","clueObject","whichFocus","clueClickEar","clueKey","clueNum","primaryFocusDirection","primary","primaryFocusNum","secondaryFocusDirection","secondary","secondaryFocusNum","composed","backgroundColor","padding","borderRadius","singleClue","clueEvent","updated","$el","scrollIntoView","checkMouse","checkActive","styleToolbar","revealMouse","revealActive","clearMouse","clearActive","clearStopwatch","rebusMouse","timeMouse","showSettings","settingsMouse","hideSettings","isSettingsShow","toggleStopwatch","formattedTime","timerInterval","isStopwatchActive","countedTime","minutes","floor","seconds","startTimer","setInterval","incrementTimer","stopStopwatch","startStopwatch","resetStopwatch","getFormattedTime","settingsContStyle","headerStyle","selectTheme","value","bind","removeBind","removeBindStyle","concat","emitSettings","applyButtonStyle","keyString","enterKeyString","bindArray","validateKeyString","isValidSingleKeyString","legalSingles","legalMods","includes","multiKeyString","settingsInput","uploadJson","parseBind","bindString","parseBindList","bindList","testString","thisString","Function","createBindFunctionObject","getThemeObject","theme","doom_zenburn","doom_wilmersdorf","doom_vibrant","doom_spacegrey","doom_solarized","doom_solarized_dark","doom_snazzy","doom_rouge","doom_peacock","doom_palenight","doom_outrun_electric","doom_opera","doom_opera_light","doom_one","doom_one_light","doom_old_hope","doom_oceanic_next","doom_nord","doom_nord_light","doom_moonlight","doom_monokai_pro","doom_molokai","doom_miramare","doom_material","doom_manegram","doom_laserwave","doom_horizon","doom_henna","doom_fairy_floss","doom_ephemeral","doom_dracula","doom_dark_plus","doom_city_lights","doom_challenger_dark","doom_acario_light","doom_acario_dark","doom_iosvkem","createSettingsObject","upload","bindItem","removeIndex","indexOf","splice","base1","stopwatch","settings","bg","cl","clueContainer","toolbar","gridColumn","bgAlt","scope","greenpaint","getPuzzleData","puzzlepath","document","getElementById","text","fetch","response","ok","Error","status","blob","input","files","processPuz","processJson","file","fileReader","FileReader","parent","readAsText","onload","e","JSON","parse","readAsArrayBuffer","createApp","App","mount"],"mappings":"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","file":"js/chunk-common.7bdd027f.js","sourcesContent":["function convertToJson(arrayBuffer) {\n    const bytes = new Uint8Array(arrayBuffer);\n    console.log(bytes);\n    let puz = new PuzReader(bytes).toJson();\n    return puz;\n}\n\nclass PuzReader {\n    // The skeleton of this class is from Phil's (GPL) files.js: https://github.com/keiranking/Phil/blob/master/files.js\n    // However, I added circle support and rebus support, with help from AcrossLiteToText's source code and some\n    // documentation on this horrible binary format from here: https://code.google.com/archive/p/puz/wikis/FileFormat.wiki\n    constructor(buf) {\n        this.buf = buf;\n    }\n\n    readShort(ix) {\n        return this.buf[ix] | (this.buf[ix + 1] << 8);\n    }\n\n    readString() {\n        let result = [];\n        let t = true;\n        while (t) {\n            let c = this.buf[this.ix++];\n            if (c == 0) break;\n            result.push(String.fromCodePoint(c));\n        }\n        return result.join('');\n    }\n\n    // readStringFrom(start) {\n    //     let result = [];\n    //     let i = start;\n    //     let c = this.buf[i];\n    //     let circleCount = 0;\n    //     while (i < this.buf.length) {\n    //         result.push(String.fromCodePoint(c));\n    //         if (c == 0x80 || c == 0xC0) {\n    //             circleCount++;\n    //             console.log(`Found 0x80 or 0xC0 at ${c}`);\n    //         }\n    //         console.log(c);\n    //         i++;\n    //         c = this.buf[i];\n    //     }\n    //     console.log(result.length);\n    //     console.log(circleCount);\n    //     return result.join('');\n    // }\n\n    findSpecialRegions() {\n        // return the position of GEXT, GRBS, RTBL\n        let posObj = {};\n        let nameArr = [];\n        for (let i = 0; i < this.buf.length - (0x34 + 4); i++) {\n            if (!posObj.gext && String.fromCodePoint(this.buf[0x34 + i]) == 'G' && String.fromCodePoint(this.buf[0x34 + i + 1]) == 'E' && String.fromCodePoint(this.buf[0x34 + i + 2]) == 'X' && String.fromCodePoint(this.buf[0x34 + i + 3]) == 'T') {\n                posObj.gext = i;\n                nameArr.push('gext');\n            }\n            if (!posObj.grbs && String.fromCodePoint(this.buf[0x34 + i]) == 'G' && String.fromCodePoint(this.buf[0x34 + i + 1]) == 'R' && String.fromCodePoint(this.buf[0x34 + i + 2]) == 'B' && String.fromCodePoint(this.buf[0x34 + i + 3]) == 'S') {\n                posObj.grbs = i;\n                nameArr.push('grbs');\n            }\n            if (!posObj.rtbl && String.fromCodePoint(this.buf[0x34 + i]) == 'R' && String.fromCodePoint(this.buf[0x34 + i + 1]) == 'T' && String.fromCodePoint(this.buf[0x34 + i + 2]) == 'B' && String.fromCodePoint(this.buf[0x34 + i + 3]) == 'L') {\n                posObj.rtbl = i;\n                nameArr.push('rtbl');\n            }\n            if (!posObj.ltim && String.fromCodePoint(this.buf[0x34 + i]) == 'L' && String.fromCodePoint(this.buf[0x34 + i + 1]) == 'T' && String.fromCodePoint(this.buf[0x34 + i + 2]) == 'I' && String.fromCodePoint(this.buf[0x34 + i + 3]) == 'M') {\n                posObj.ltim = i;\n                nameArr.push('ltim');\n            }\n            if (!posObj.rusr && String.fromCodePoint(this.buf[0x34 + i]) == 'R' && String.fromCodePoint(this.buf[0x34 + i + 1]) == 'U' && String.fromCodePoint(this.buf[0x34 + i + 2]) == 'S' && String.fromCodePoint(this.buf[0x34 + i + 3]) == 'R') {\n                posObj.rusr = i;\n                nameArr.push('rusr');\n            }\n        }\n        // indexArr and nameArr are in the order that the regions were found\n        this.specialRegionOrder = nameArr;\n        this.specialRegionIndices = posObj;\n        return; \n    }\n\n    findCircles() {\n        // Return the positions of the circled squares\n        let w = this.buf[0x2c];\n        let h = this.buf[0x2d];\n        if (this.specialRegionIndices.gext) {\n            let startCircles = 0x34 + this.specialRegionIndices.gext + 8;\n            let pos = [];\n            // console.log(`startCircles: ${startCircles}; buf length: ${this.buf.length}`);\n            for (let j = startCircles; j<this.buf.length; j++) {\n                if (this.buf[j] == 0x80 || this.buf[j] == 0xC0) {\n                    // the google code archive docs say that only 0x80 is circle, but acrosslite to\n                    // text also uses 0xC0. Without 0xC0, we don't get circles in filled .puz files\n                    pos.push(j - startCircles);\n                }\n                if (j - startCircles === w*h) {\n                    // this break might be too eager; i'm not sure how long GEXT is supposed to be (hopefully w*h)\n                    break;\n                }\n            }\n            return pos;\n        }\n        // console.log('No circles found');\n        return;\n    }\n\n    findRebusTable() {\n        // return an object containing the keys and values of rtbl\n        if (this.specialRegionIndices.rtbl) {\n            let startRtbl = 0x34 + this.specialRegionIndices.rtbl + 8;\n            let tblArr = []; \n            for (let i = startRtbl; i<this.buf.length; i++) {\n                if (this.buf[i] == 0) break;  // end of rtbl section probably\n                tblArr.push(String.fromCodePoint(this.buf[i]));\n            }\n            // convert the array to a string, and then to an object\n            // TODO very inefficient lol\n            let tblEntries = tblArr.join('')\n                                   .split(';')  // separated by ;\n                                   .slice(0, -1);  // remove last empty element (always ends with ;)\n            let tblObj = {};\n            for (let j = 0; j<tblEntries.length; j++) {\n                let pair = tblEntries[j].trim();  // if key is one digit there's whitespace\n                let pairArr = pair.split(':');\n                tblObj[pairArr[0]] = pairArr[1];  // pairArr[0] is a string containing a number\n            }\n            // console.log(tblObj);\n            return tblObj;\n        }\n        return;\n    }\n\n    findRebus() {\n        // return object with keys the index of the letter that needs to be\n        // changed to a number and values the number to change it to\n        let w = this.buf[0x2c];\n        let h = this.buf[0x2d];\n        if (this.specialRegionIndices.grbs) {\n            let startGrbs = 0x34 + this.specialRegionIndices.grbs + 8;\n            let out = {};\n            for (let i = startGrbs; i<this.buf.length; i++) {\n                if (this.buf[i] == 0) continue;  // 0 means no rebus\n                if (i - startGrbs >= w*h) break;  // google code archive says grbs doesn't track blocks but it does?\n                let thisCode = this.buf[i] - 1;\n                out[`${i-startGrbs}`] = thisCode;\n            }\n            // console.log(out);\n            return out;\n        }\n        return;\n    }\n\n    toJson() {\n        let json = {};\n        let w = this.buf[0x2c];\n        let h = this.buf[0x2d];\n        let scrambled = this.readShort(0x32);\n        if (scrambled & 0x0004) {\n            console.error(\"Can't read scrambled puzzle\");\n            return;\n        }\n        json.Size = {Cols: w, Rows: h};\n\n        let grid = [];\n        for (let i = 0; i < w * h; i++) {\n            grid.push(String.fromCodePoint(this.buf[0x34 + i]));\n        }\n        this.findSpecialRegions();\n\n        // add circled squares to grid\n        let circles = this.findCircles();\n        if (circles && circles.length !== 0) {\n            for (let c = 0; c < circles.length; c++) {\n                grid[circles[c]] = grid[circles[c]].toLowerCase();\n            }\n            json.HasCircles = true;\n        } else {\n            json.HasCircles = false;\n        }\n\n        let rebusTable = this.findRebusTable();\n        let rebus = this.findRebus();\n        if (rebus && rebusTable) {\n            // add rebus to grid\n            let singleLetterAns = {};  // keeps track of original letters in the rebus. keys are the rebus code; values the original letter\n            for (let rebusIndex in rebus) {\n                // change letters to numbers\n                singleLetterAns[`${rebus[rebusIndex]}`] = grid[rebusIndex];\n                grid[rebusIndex] = `${rebus[rebusIndex]}`;\n            }\n            // add rebus to json\n            let codes = '';\n            for (let rebusCode in rebusTable) {\n                codes += `${rebusCode}:${rebusTable[rebusCode]}:${singleLetterAns[rebusCode]}`;\n            }\n            json.IsRebus = { Codes: codes, IsRebus: true };\n        }\n\n        let newGrid = [];\n        for (let r = 0; r < h; r++) {\n            let row = grid.slice(r*w, (r*w)+w).join('');\n            newGrid.push({ Row: row });\n        }\n        json.Grid = newGrid;\n        this.ix = 0x34 + 2 * w * h;\n        json.Title = this.readString();\n        json.Author = this.readString();\n        json.Copyright = this.readString();\n        var across = [];\n        var down = [];\n        var label = 1;\n        for (let i = 0; i < w * h; i++) {\n            if (grid[i] == '.') continue;\n            var inc = 0;\n            if (i % w == 0 || grid[i - 1] == '.') {\n                across.push({ Num: label, Clue: this.readString() });\n                inc = 1;\n            }\n            if (i < w || grid[i - w] == '.') {\n                down.push({ Num: label, Clue: this.readString() });\n                inc = 1;\n            }\n            label += inc;\n        }\n        json.Across = across;\n        json.Down = down;\n        return json;\n    }\n}\n\nmodule.exports = convertToJson;\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./grid.vue?vue&type=style&index=0&id=7db67ed5&scoped=true&lang=css\"","<template>\n    <div v-if=\"loaded\">\n        <greenpaint :puzzledata=\"this.puzzleData\"/>\n    </div>\n    <div v-if=\"loading\">\n        loading puzzle data...\n    </div>\n    <div v-if=\"uploadWait\">\n        <label for=\"upload-input\">\n            Load a JSON from <a href=\"https://github.com/jahorne/AcrossLiteToText\">AcrossLiteToText</a>, or a puz binary file:\n        </label>\n        <br>\n        <input id=\"upload-input\" type=\"file\" accept=\".puz,.json\" @change=\"processFile\">\n    </div>\n</template>\n\n<script>\n import greenpaint from './components/greenpaint.vue';\n import convertToJson from './acrossLiteToJson.js';\n  export default {\n     name: 'App',\n     data() {\n         return {\n             puzzleData: Object,\n             loaded: false,\n             loading: true,\n             uploadWait: false\n         }\n     },\n     components: {\n         greenpaint\n     },\n     methods: {\n         async getPuzzleData() {\n             // TODO test for if it's a puz or json and do the correct action\n             let puzzlepath = document.getElementById('puzzlepath').text.slice(1, -1);\n             let response = await fetch(puzzlepath);\n             if (!response.ok) {\n                 throw new Error(`Error getting puzzle data: ${response.status}`);\n             }\n             let puzzleData;\n             if (puzzlepath.slice(-3) === \"puz\") {\n                 console.log(\"processing as puz\");\n                 let blob = await response.blob();\n                 let arrayBuffer = await blob.arrayBuffer();\n                 puzzleData = convertToJson(arrayBuffer);\n             } else if (puzzlepath.slice(-4) === \"json\") {\n                 console.log(\"processing as json\");\n                 puzzleData = await response.json();\n             }\n             return puzzleData;\n         },\n\n         processFile() {\n             let input = document.getElementById('upload-input');\n             if (!input.files[0]) {\n                 console.error(\"No file selected\");\n                 return;\n             } else if (input.files[0].name.slice(-3) === \"puz\") {\n                 this.processPuz(input.files[0]);\n             } else if (input.files[0].name.slice(-4) === \"json\") {\n                 this.processJson(input.files[0]);\n             } else {\n                 return;\n             }\n         },\n\n         processJson(file) {\n             let fileReader = new FileReader();\n             //let puzzleObj;\n             let parent = this;\n             fileReader.readAsText(file);\n             fileReader.onload = function(e) {\n                 parent.puzzleData = JSON.parse(e.target.result);\n                 parent.uploadWait = false;\n                 parent.loaded = true;\n                 return;\n             }\n         },\n\n         processPuz(file) {\n             let fileReader = new FileReader();\n             let parent = this;\n             fileReader.readAsArrayBuffer(file);\n             fileReader.onload = function(e) {\n                 let json = convertToJson(e.target.result);\n                 if (json) {\n                     // in an if block cause if convert fails it returns null\n                     parent.puzzleData = json;\n                     parent.uploadWait = false;\n                     parent.loaded = true;\n                 }\n                 return;\n             }\n         }\n     },\n      async created() {\n          if (document.getElementById('puzzlepath')) {\n              // if there's a tag with the puzzlepath\n              this.puzzleData = await this.getPuzzleData();\n              if (this.puzzleData) {\n                  this.loading = false;\n                  this.loaded = true;\n              }\n          } else {\n              // open greenpaint in upload json mode. to enable this behavior,\n              // don't add an element with id=\"puzzlepath\" in the DOM\n              this.loading = false;\n              this.uploadWait = true;\n          }\n      }\n  }\n</script>\n","<template>\n    <div class=\"app-container\" :style=\"appStyle\">\n        <div class=\"toolbar\" :style=\"toolbarCSS\">\n            <toolbar ref=\"toolbar\"\n                     :currentPoint=\"currentPoint\"\n                     @check-square=\"checkEar('square')\"\n                     @check-word=\"checkEar('word')\"\n                     @check-grid=\"checkEar('grid')\"\n                     @reveal-square=\"this.$refs.grid.revealSquare()\"\n                     @reveal-word=\"this.$refs.grid.revealWord()\"\n                     @reveal-grid=\"this.$refs.grid.revealGrid()\"\n                     @clear-grid=\"this.$refs.grid.clearGrid()\"\n                     @rebus=\"this.$refs.grid.activateRebus()\"\n                     @settings-to-app=\"settingsObject = $event\"\n                     @puzzle-send-to-app=\"setPuzzle($event)\"\n                     @settings-shown=\"this.$refs.grid.removeKeyEventListener()\"\n                     @settings-hidden=\"this.$refs.grid.addKeyEventListener()\"\n                     :isFinishedShow=\"isFinishedShow\"\n                     :settingsObject=\"settingsObject\"\n            ></toolbar>\n        </div>\n        <div class=\"activeClue\" :style=\"activeClueCSS\">\n            <p>{{ activeClue }}</p>\n        </div>\n        <div class=\"mainGrid\">\n            <grid\n                @square-focus-to-app=\"squareFocusToAppEar($event)\"\n                @grid-full=\"gridFullEar($event)\"\n                :gridObject=\"puzzle.Grid\"\n                :settingsObject=\"settingsObject\"\n                :cluesAcross=\"puzzle.Across\"\n                :cluesDown=\"puzzle.Down\"\n                :rebusObj=\"puzzle.IsRebus\"\n                ref=\"grid\"\n                :key=\"gridKey\"\n                :gridSizeObj=\"puzzle.Size\"\n            ></grid>\n        </div>\n        <p class=\"direction-label\" :style=\"clueContStyle\">Across</p>\n        <div class=\"cluesAcross clue-container\" :style=\"clueContStyle\">\n            <clueContainer\n                @primary-clue-focus-to-app=\"primaryClueFocusToAppEar($event)\"\n                :clueFocus=\"clueFocus\"\n                :clues=\"puzzle.Across\"\n                :direction=\"'A'\"\n                :settingsObject=\"settingsObject\"\n                @clue-click-to-app=\"clueClickToAppEar($event)\"\n                :key=\"acrossClueContKey\"\n            ></clueContainer>\n        </div>\n        <p class=\"direction-label\" :style=\"clueContStyle\">Down</p>\n        <div class=\"cluesDown clue-container\" :style=\"clueContStyle\">\n            <clueContainer\n                @primary-clue-focus-to-app=\"primaryClueFocusToAppEar($event)\"\n                :clueFocus=\"clueFocus\"\n                :clues=\"puzzle.Down\"\n                :direction=\"'D'\"\n                :settingsObject=\"settingsObject\"\n                @clue-click-to-app=\"clueClickToAppEar($event)\"\n                :key=\"downClueContKey\"\n            ></clueContainer>\n        </div>\n        <div class=\"bylineCont\" :style=\"bylineStyle\">\n            <span class=\"puz-title\">\n                {{ puzzle.Title }}\n            </span>\n            <span class=\"puz-author\">\n                {{ puzzle.Author }}\n            </span>\n            <span class=\"puz-copyright\">\n                {{ puzzle.Copyright  }}\n            </span>\n        </div>\n        <div class=\"overlay-cont\">\n            <transition name=\"modal\">\n                <div v-if=\"isFinishedShow\">\n                    <div class=\"overlay\" @click.self=\"isFinishedShow = false;\">\n                        <div class=\"modal\" :style=\"modalStyle\">\n                            <p> {{ gridFullMessage }} </p>\n                        </div>\n                    </div>\n                </div>\n            </transition>\n        </div>\n    </div>\n</template>\n\n<script>\n import grid from './grid.vue'\n import clueContainer from './clueContainer.vue'\n import toolbar from './toolbar.vue'\n \n export default {\n     name: 'greenpaint',\n     components: {\n         grid,\n         clueContainer,\n         toolbar,\n     },\n     \n     props: ['puzzledata'],\n     \n     data() {\n         return {\n             puzzle: this.puzzledata,\n             //publicPath: process.env.BASE_URL,\n             gridKey: 0,\n             acrossClueContKey: 47,\n             downClueContKey: 48,\n\n             clueFocus: {primary: '1A', secondary: '1D'},\n             activeClue: '',\n             currentPoint: {y: 0, x: 0},\n             gridFullMessage: '',\n             isFinishedShow: false,\n             settingsObject: {\n                 selectedTheme: {\n                     \"bg\": \"#fafafa\",\n                     \"bgAlt\": \"#f0f0f0\",\n                     \"base0\": \"#f0f0f0\",\n                     \"base1\": \"#e7e7e7\",\n                     \"base2\": \"#dfdfdf\",\n                     \"base3\": \"#c6c7c7\",\n                     \"base4\": \"#9ca0a4\",\n                     \"base5\": \"#383a42\",\n                     \"base6\": \"#202328\",\n                     \"base7\": \"#1c1f24\",\n                     \"base8\": \"#1b2229\",\n                     \"fg\": \"#383a42\",\n                     \"fgAlt\": \"#c6c7c7\",\n                     \"red\": \"#e45649\",\n                     \"orange\": \"#da8548\",\n                     \"green\": \"#50a14f\",\n                     \"teal\": \"#4db5bd\",\n                     \"yellow\": \"#986801\",\n                     \"blue\": \"#4078f2\",\n                     \"darkBlue\": \"#a0bcf8\",\n                     \"magenta\": \"#a626a4\",\n                     \"violet\": \"#b751b6\",\n                     \"cyan\": \"#0184bc\",\n                     \"darkCyan\": \"#005478\"\n                 }\n             }\n         };\n     },\n     computed: {\n         toolbarCSS() {\n             return {\n                 'grid-column-start': 1,\n                 'grid-column-end': 4,\n             }\n         },\n         \n         activeClueCSS() {\n             return {\n                 gridColumn: 1,\n                 backgroundColor: this.settingsObject.selectedTheme.green,\n                 color: this.settingsObject.selectedTheme.bgAlt,\n             }\n         },\n\n         appStyle() {\n             return {\n                 backgroundColor: this.settingsObject.selectedTheme.bg\n             }\n         },\n\n         clueContStyle() {\n             return {\n                 backgroundColor: this.settingsObject.selectedTheme.bgAlt,\n                 color: this.settingsObject.selectedTheme.fg,\n             }\n         },\n\n         modalStyle() {\n             return {\n                 color: this.settingsObject.selectedTheme.fg,\n                 backgroundColor: this.settingsObject.selectedTheme.bg\n             }\n         },\n\n         bylineStyle() {\n             return {\n                 color: this.settingsObject.selectedTheme.fg,\n             }\n         }\n     },\n     \n     methods: {\n         squareFocusToAppEar(event) {\n             // console.log(event)\n             if (event.primaryDirection === 'across') {\n                 this.clueFocus = {\n                     primary: event.squareFocusEvent.acrossNum.toString() + 'A',\n                     secondary: event.squareFocusEvent.downNum.toString() + 'D'\n                 }\n             } else if (event.primaryDirection === 'down') {\n                 this.clueFocus = {\n                     primary: event.squareFocusEvent.downNum.toString() + 'D',\n                     secondary: event.squareFocusEvent.acrossNum.toString() + 'A',\n                 }\n             }\n             this.currentPoint = event.currentPoint;\n         },\n         \n         primaryClueFocusToAppEar(clueEvent) {\n             //console.log('primaryClueFocusToAppEar')\n             this.activeClue = clueEvent.composed\n         },\n         \n         checkEar(scope) {\n             // this is to try to avoid the warnings but they're still there\n             // idk if it's the right way to do it though lol\n             switch(scope) {\n                 case \"square\":\n                     this.$refs.grid.checkSquare();\n                     break;\n                 case \"word\":\n                     this.$refs.grid.checkWord();\n                     break;\n                 case \"grid\":\n                     this.$refs.grid.checkGrid();\n                     break;\n             }\n         },\n\n         gridFullEar(event) {\n             this.isFinishedShow = true;\n             this.$refs.toolbar.$refs.stopwatch.stopStopwatch();\n             if (event === \"correct\") {\n                 this.gridFullMessage = `Congratulations! 🎉 You solved the puzzle in ${this.$refs.toolbar.$refs.stopwatch.getFormattedTime()}!`\n             } else if (event === \"incorrect\") {\n                 this.gridFullMessage = \"You've completed the puzzle, but one or more letters are incorrect 😟\"\n             }\n         },\n\n         clueClickToAppEar(event) {\n             this.$refs.grid.focusFromClueClick(event);\n         }\n     },\n }\n</script>\n\n<style>\n #app {\n     font-family: sans-serif;\n     -webkit-font-smoothing: antialiased;\n     -moz-osx-font-smoothing: grayscale;\n     text-align: left;\n     /* color: #2c3e50; */\n }\n .app-container {\n     display: grid;\n     grid-template-columns: 2fr 0.5fr 0.5fr;\n     grid-template-rows: 1fr 1fr 10fr;\n     column-gap: 1em;\n     max-width: 870px;\n     max-height: 600px;\n     justify-items: start;\n     padding: 1em;\n     border-radius: 5px;\n     box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n }\n .grid {\n     border: 3pt solid;\n }\n .toolbar {\n     grid-row: 1;\n     align-self: center;\n     float: left;\n     width: 100%;\n }\n .activeClue {\n     grid-column: 1;\n     grid-row: 2;\n     align-self: center;\n     width: stretch;\n     padding-left: 1em;\n     padding-right: 1em;\n     border-radius: 5px;\n }\n .mainGrid {\n     grid-row: 3;\n     grid-column: 1;\n     min-width: 30em;\n     padding-top: 1em;\n }\n .cluesAcross {\n     grid-row: 3;\n     grid-column: 2;\n }\n .cluesDown {\n     grid-row: 3;\n     grid-column: 3;\n }\n .direction-label {\n     padding: 0.4em;\n     width: 10em;\n     border-radius: 5px;\n     grid-row: 2;\n }\n .clue-container {\n     padding: 0;\n     height: 99%;\n     padding-top: 0.4em;\n     padding-left: 0.4em;\n     padding-right: 0.4em;\n     border-radius: 5px;\n     overflow: scroll;\n     font-size: 14px;\n     cursor: pointer;\n     z-index: 2;\n }\n .modal {\n     width: 300px;\n     margin: 0px auto;\n     padding: 20px;\n     text-align: center;\n     border-radius: 5px;\n     box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n     transition: all 0.2s ease-in;\n }\n .fadeIn-enter {\n     opacity: 0;\n }\n\n .fadeIn-leave-active {\n     opacity: 0;\n     transition: all 0.2s step-end;\n }\n\n .fadeIn-enter .modal,\n .fadeIn-leave-active.modal {\n     transform: scale(1.1);\n }\n .overlay-cont {\n     position: absolute;\n }\n .overlay {\n     position: absolute;\n     border-radius: 5px;\n     width: 870px;\n     height: 600px;\n     display: flex;\n     justify-content: center;\n     align-items: center;\n     background: #00000094;\n     z-index: 999;\n     transition: opacity 0.2s ease;\n }\n .bylineCont {\n     grid-column: 1 / 4;\n     display: inline-block;\n     width: 870px;\n }\n .bylineCont > span {\n     font-size: 12px;\n     padding-top: 0.15em;\n     padding-left: 0.1em;\n     padding-right: 0.1em;\n     display: inline-block;\n }\n .puz-title {\n     float: left;\n     margin-right: 2em;\n }\n .puz-author {\n     float: left;\n }\n .puz-copyright {\n     float: right;\n }\n</style>\n","<template>\n    <div class=\"gridContainer\" :style=\"cssGridVars\">\n        <div class=\"row\" v-for=\"(row, row_index) in staticGrid\" :key=\"row_index\" :style=\"cssRowVars\">\n            <square v-for=\"(cell, cell_index) in row\"\n                    @square-focus=\"clickHandler($event)\"\n                    @rebus-enter=\"rebusEnter($event)\"\n                    @rebus-blur=\"rebusBlur($event)\"\n                    :key=\"[row_index, cell_index]\"\n                    :correctLetter=\"cell.correctLetter\"\n                    :isBlock=\"cell.isBlock\"\n                    :isCircled=\"cell.isCircled\"\n                    :isRebus=\"cell.isRebus\"\n                    :isWordStartAcross=\"cell.isWordStartAcross\"\n                    :isWordStartDown=\"cell.isWordStartDown\"\n                    :acrossNum=\"cell.acrossNum\"\n                    :downNum=\"cell.downNum\"\n                    :currentLetter=\"dynamicGrid[row_index][cell_index].currentLetter\"\n                    :currentDirection=\"currentDirection\"\n                    :x=\"cell.x\"\n                    :y=\"cell.y\"\n                    :isPoint=\"dynamicGrid[row_index][cell_index].isPoint\"\n                    :isPrimarySelect=\"dynamicGrid[row_index][cell_index].isPrimarySelect\"\n                    :isSecondarySelect=\"dynamicGrid[row_index][cell_index].isSecondarySelect\"\n                    :isCorrect=\"dynamicGrid[row_index][cell_index].isCorrect\"\n                    :isIncorrect=\"dynamicGrid[row_index][cell_index].isIncorrect\"\n                    :isRebusActive=\"dynamicGrid[row_index][cell_index].isRebusActive\"\n                    :settingsObject=\"settingsObject\"\n                    :isLeft=\"cell.isLeft\"\n                    :isRight=\"cell.isRight\"\n                    :isTop=\"cell.isTop\"\n                    :isBot=\"cell.isBot\"\n                    :computedFontSize=\"computedFontSize\"\n                    ></square>\n        </div>\n    </div>\n</template>\n\n<script>\n import square from './square.vue'\n \n export default {\n     name: 'grid',\n     components: {\n         square\n     },\n     props: {\n         gridObject: Array,\n         cluesDown: Array,\n         cluesAcross: Array,\n         rebusObj: Object,\n         settingsObject: Object,\n         gridSizeObj: Object,\n     },\n     emits: [\n         'square-focus-to-app',\n         'squareFocusToApp',\n         'gridFull',\n         'grid-full'\n     ],\n     \n     data() {\n         return {\n             currentDirection: \"across\",\n             dynamicGrid: [],\n             // these two are arrays of the indices of the previously selected words. the car\n             // is the row or column; the cdr is the columns or rows\n             previousSelectAcross: [],\n             previousSelectDown: [],\n             previousPoint: {},\n\n             currentPoint: {y: 0, x: 0},\n             currentSquaresFilled: 0,\n         }\n     },\n     \n     created() {\n         // need to wait until methods load, which is why this is in created()\n         this.dynamicGrid = this.createDynamicGrid();\n     },\n\n     watch: {\n         isGridFull(val) {\n             if (val) {\n                 this.gridFullCheck();\n             }\n             return;\n         }\n     },\n     \n     computed: {\n         computedFontSize() {\n             return {\n                 currentLetter: `${300 / this.gridSizeObj.Cols}px`,\n                 cluenum: `${Math.max(150 / this.gridSizeObj.Cols), 9}px`\n             };\n         },\n         \n         isGridFull() {\n             //console.log(`${this.currentSquaresFilled} / ${this.squareCount} filled`);\n             return this.currentSquaresFilled === this.squareCount;\n         },\n         \n         cssGridVars() {\n             return {\n                 //'grid-template-columns': 'repeat(' + this.gridObject.length + ', 1fr)',\n                 \"height\": \"30em\",\n                 'grid-template-rows': 'repeat(' + this.gridObject[0].length + ', 1fr)',\n                 'grid-auto-rows': `${100 / this.gridObject.length}%`,\n             }\n         },\n         \n         cssRowVars() {\n             return {\n                 'display': \"grid\",\n                 'grid-template-columns': 'repeat(' + this.gridObject.length + ', 1fr)',\n             }\n         },\n\n         createRebusObj() {\n             let codeList = this.rebusObj.Codes.split(';');\n             let codeObj = {};\n             for (let codeIn = 0; codeIn < codeList.length; codeIn++) {\n                 let thisCode = codeList[codeIn].split(':');\n                 codeObj[thisCode[0]] = thisCode[1];\n             }\n             return codeObj;\n         },\n         \n         staticGrid() {\n             // gridObject is actually an array lol\n             // for each cell in the grid, create on object with keys:\n             // isBlock: it's a block / black square\n             // isCircled: it's circled\n             // isRebus: it's a rebus\n             // isWordStartAcross: it's the start of an across word\n             // isWordStartDown: it's the start of a down word\n             // acrossNum: the clue number of this cell's across word\n             // downNum: the clue number of this cell's down word\n             let gridObject = this.gridObject\n             var outputGrid = []\n             var currentWordNum = 0\n             for (let row in gridObject) {\n                 let thisRowArray = gridObject[row][\"Row\"].split('')\n                 outputGrid.push([])\n                 for (let char in thisRowArray) {\n                     var thisCell = {}\n                     if (thisRowArray[char] === '.') {\n                         thisCell['isBlock'] = thisRowArray[char] === '.'\n                     } else {\n                         // why the hell are char and row strings??\n                         thisCell['x'] = Number(char)\n                         thisCell['y'] = Number(row)\n\n                         if (isNaN(thisRowArray[char])) {\n                             // if it's not a number (that is, not a rebus)\n                             thisCell['correctLetter'] = thisRowArray[char];\n                         } else {\n                             // else, it's a rebus. ask createRebusObj for the rebus corresponding to\n                             // the (numerical) code in thisRowArray\n                             thisCell['correctLetter'] = this.createRebusObj[thisRowArray[char].toString()];\n                         }\n                         thisCell['isCircled'] = thisRowArray[char] !== thisRowArray[char].toUpperCase();\n                         thisCell['isRebus'] = !isNaN(parseInt(thisRowArray[char]), 10)\n                         thisCell['isBlock'] = false\n                         \n                         // char === 0 is when we're on the left edge of the grid\n                         // the other condition is if the previous cell was a block\n                         thisCell['isWordStartAcross'] = char == 0 || thisRowArray[char-1] === '.'\n\n                         // row == 0 is when we're on the top edge of the grid\n                         // TODO figure out why it wants == instead of ===\n                         // the other condition is if the cell above was a block\n                         thisCell['isWordStartDown'] = row == 0 || outputGrid[row-1][char]['isBlock']\n                         \n                         if (thisCell['isWordStartAcross'] || thisCell['isWordStartDown']) {\n                             currentWordNum++\n                         }\n                         if (thisCell['isWordStartAcross']) {\n                             // if this is the start of an across word, then currentWordNum is correct\n                             thisCell['acrossNum'] = currentWordNum\n                         } else {\n                             // otherwise acrossNum is the same as the one before\n                             thisCell['acrossNum'] = outputGrid[row][char-1]['acrossNum']\n                         }\n                         \n                         if (thisCell['isWordStartDown']) {\n                             // if this is the start of a down word, then currentWordNum is correct\n                             thisCell['downNum'] = currentWordNum\n                         } else {\n                             // otherwise downNum is the same as the one above\n                             thisCell['downNum'] = outputGrid[row-1][char]['downNum']\n                         }\n\n                         // get position of this cell for border css\n                         if (char == 0) {\n                             thisCell['isLeft'] = true;\n                         } else if (char == thisRowArray.length-1) {\n                             thisCell['isRight'] = true;\n                         }\n                         if (row == 0) {\n                             thisCell['isTop'] = true;\n                         } else if (row == gridObject.length-1) {\n                             thisCell['isBot'] = true;\n                         }\n                     }\n                     outputGrid[row].push(thisCell);\n                 }\n             }\n             return outputGrid\n         },\n\n         squareCount() {\n             let count = 0;\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.staticGrid[iY][iX].isBlock === true) {\n                         continue;\n                     } else {\n                         count += 1;\n                     }\n                 }\n             }\n             return count\n         },\n\n         firstSquareCoor() {\n             // return the x-coord of the first non-block square on the first row\n             // i'm hardcoding in that the 0th row is the first non-block row, but i\n             // think this is a safe assumption\n             let iX = 0;\n             while (this.staticGrid[0][iX].isBlock === true) {\n                 iX++;\n             }\n             return {y: 0, x: iX}\n         }\n     },\n     methods: {\n         createDynamicGrid() {\n             // i wonder if it's a problem that this is reading static data (rather than a param)\n             var outputGrid = []\n             for (let row in this.staticGrid) {\n                 outputGrid.push([])\n                 for (let char in this.staticGrid[row]) {\n                     var thisCell = {}\n                     thisCell['isBlock'] = this.staticGrid[row][char]['isBlock'] === true\n                     if (thisCell['isBlock'] != true) {\n                         thisCell['x'] = this.staticGrid[row][char]['x']\n                         thisCell['y'] = this.staticGrid[row][char]['y']\n                         \n                         thisCell['isPrimarySelect'] = false;\n                         thisCell['isSecondarySelect'] = false;\n                         thisCell['isPoint'] = false;\n                         \n                         thisCell['currentLetter'] = '';\n                         thisCell['isCorrect'] = false;\n                         thisCell['isIncorrect'] = false;\n                         thisCell['isRebusActive'] = false;\n                     }\n                     outputGrid[row].push(thisCell)\n                 }\n             }\n             return outputGrid\n         },\n\n         clearPrevious() {\n             // clear previous across\n             for (let ai = 1; ai < this.previousSelectAcross.length; ai++) {\n                 this.dynamicGrid[this.previousSelectAcross[0]][this.previousSelectAcross[ai]]['isPrimarySelect'] = false;\n                 this.dynamicGrid[this.previousSelectAcross[0]][this.previousSelectAcross[ai]]['isSecondarySelect'] = false;\n                 this.dynamicGrid[this.previousSelectAcross[0]][this.previousSelectAcross[ai]]['isRebusActive'] = false;\n             }\n             for (let di = 1; di < this.previousSelectDown.length; di++) {\n                 this.dynamicGrid[this.previousSelectDown[di]][this.previousSelectDown[0]]['isPrimarySelect'] = false;\n                 this.dynamicGrid[this.previousSelectDown[di]][this.previousSelectDown[0]]['isSecondarySelect'] = false;\n                 this.dynamicGrid[this.previousSelectDown[di]][this.previousSelectDown[0]]['isRebusActive'] = false;\n             }\n             // clear previous point\n             this.dynamicGrid[this.previousSelectAcross[0]][this.previousSelectDown[0]]['isPoint'] = false;\n             \n             // reset\n             this.previousSelectAcross = [];\n             this.previousSelectDown = [];\n         },\n\n         activateRebus() {\n             this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].currentLetter = ''\n             if (this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].isRebusActive) {\n                 this.addKeyEventListener();\n             } else {\n                 this.removeKeyEventListener();\n             }\n             this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].isRebusActive = !this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].isRebusActive;\n         },\n\n         rebusEnter(event) {\n             this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].currentLetter = event.toUpperCase();\n             this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].isRebusActive = false;\n             this.addKeyEventListener();\n         },\n\n         rebusBlur(event) {\n             this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].currentLetter = event.toUpperCase();\n             this.addKeyEventListener();\n         },\n         \n         focusEar(event) {\n             // set previous point (multiple lines to prevent variable shadowing)\n             this.previousPoint.x = this.currentPoint.x;\n             this.previousPoint.y = this.currentPoint.y;\n             if (this.previousSelectAcross.length != 0 && this.previousSelectDown.length != 0) {\n                 // clear the previous selection's css if there was a previous selection\n                 this.clearPrevious();\n             }\n\n             let eventX = event.x\n             let eventY = event.y\n             let primaryDirection = \"\"\n             if (!event.direction) {\n                 // the direction param is not passed if it's a mouse click\n                 if (this.currentDirection === \"across\") {\n                     primaryDirection = \"across\"\n                     //var secondaryDirection = \"down\"\n                 } else if (this.currentDirection === \"down\") {\n                     primaryDirection = \"down\"\n                     //var secondaryDirection = \"across\"\n                 }\n             } else {\n                 // the direction param is passed if it's a keyboard movement\n                 primaryDirection = event.direction\n             }\n\n             // initialize with the constant cars\n             // TODO make previousSelect objects, so the code is more readable\n             // and i'm not just refering to indices\n             this.previousSelectAcross.push(eventY)  \n             this.previousSelectDown.push(eventX)\n\n             var whileX = eventX;\n             // search backward for across\n             while (this.dynamicGrid[eventY][whileX] && this.dynamicGrid[eventY][whileX]['isBlock'] != true) {\n                 if (primaryDirection === \"across\") {\n                     this.dynamicGrid[eventY][whileX]['isPrimarySelect'] = true\n                 } else {\n                     this.dynamicGrid[eventY][whileX]['isSecondarySelect'] = true\n                 }\n                 this.previousSelectAcross.push(whileX)\n                 whileX--\n             }\n             // plus one so we don't search the same block twice\n             whileX = eventX;\n             // search forward for across\n             while (this.dynamicGrid[eventY][whileX] && this.dynamicGrid[eventY][whileX]['isBlock'] != true) {\n                 if (primaryDirection === \"across\") {\n                     this.dynamicGrid[eventY][whileX]['isPrimarySelect'] = true\n                 } else {\n                     this.dynamicGrid[eventY][whileX]['isSecondarySelect'] = true\n                 }\n                 this.previousSelectAcross.push(whileX)\n                 whileX++\n             }\n             \n             var whileY = eventY;\n             // search backwards for down\n             while (this.dynamicGrid[whileY] && this.dynamicGrid[whileY][eventX]['isBlock'] != true) {\n                 if (primaryDirection === \"down\") {\n                     this.dynamicGrid[whileY][eventX]['isPrimarySelect'] = true\n                 } else {\n                     this.dynamicGrid[whileY][eventX]['isSecondarySelect'] = true\n                 }\n                 this.previousSelectDown.push(whileY)\n                 whileY--\n             }\n             whileY = eventY;\n             // search forward for down\n             while (this.dynamicGrid[whileY] && this.dynamicGrid[whileY][eventX]['isBlock'] != true) {\n                 if (primaryDirection === \"down\") {\n                     this.dynamicGrid[whileY][eventX]['isPrimarySelect'] = true\n                 } else {\n                     this.dynamicGrid[whileY][eventX]['isSecondarySelect'] = true\n                 }\n                 this.previousSelectDown.push(whileY)\n                 whileY++\n             }\n             \n             // set point\n             this.dynamicGrid[eventY][eventX]['isPoint'] = true;\n             this.currentPoint.y = eventY;\n             this.currentPoint.x = eventX;\n\n             // pass up to app.vue\n             this.$emit('square-focus-to-app', {\n                 squareFocusEvent: event,\n                 primaryDirection: primaryDirection,\n                 currentPoint: this.currentPoint,\n             })\n         },\n\n         focusFromClueClick(event) {\n             // event is in the form of an object:\n             // {num: (clue number), direction: (clue direction)}\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.staticGrid[iY][iX].isBlock === true) {\n                         continue\n                     } else {\n                         if (event.direction === \"A\") {\n                             if (this.staticGrid[iY][iX].isWordStartAcross === true && this.staticGrid[iY][iX].acrossNum === event.num) {\n                                 this.focusEar({\n                                     y: iY,\n                                     x: iX,\n                                     direction: \"across\",\n                                     acrossNum: this.staticGrid[iY][iX]['acrossNum'],\n                                     downNum: this.staticGrid[iY][iX]['downNum']\n                                 });\n                                 this.currentDirection = \"across\";\n                                 return\n                             }\n                         } else if (event.direction === \"D\") {\n                             if (this.staticGrid[iY][iX].isWordStartDown === true && this.staticGrid[iY][iX].downNum === event.num) {\n                                 this.focusEar({\n                                     y: iY,\n                                     x: iX,\n                                     direction: \"down\",\n                                     acrossNum: this.staticGrid[iY][iX]['acrossNum'],\n                                     downNum: this.staticGrid[iY][iX]['downNum']\n                                 });\n                                 this.currentDirection = \"down\";\n                                 return\n                             }\n                         }\n                     }\n                 }\n             }\n         },\n\n         movePointNaive(targetY, targetX) {\n             // try to avoid calling this function\n             this.focusEar({y: targetY, x: targetX});\n         },\n\n         movePointSmart(direction) {\n             // direction is a string \"up\", \"down\", \"left\", \"right\"\n             switch(direction.toLowerCase()) {\n                 case \"up\":\n                     if (this.currentDirection === \"across\") {\n                         this.switchDirection();\n                     }\n                     if (this.currentPoint.y === 0) {\n                         // do nothing at the top of the grid\n                         break;\n                     } else if (this.dynamicGrid[this.currentPoint.y-1][this.currentPoint.x]['isBlock'] === true) {\n                         // look for the closest block that's not a block\n                         let targetY = this.currentPoint.y-1;\n                         while (targetY !== -1 && this.dynamicGrid[targetY][this.currentPoint.x]['isBlock'] === true) {\n                             targetY--;\n                         }\n                         if (targetY !== -1) {\n                             // if target is -1, there's no non-block above point\n                             this.focusEar({\n                                 y: targetY,\n                                 x: this.currentPoint.x,\n                                 direction: this.currentDirection,\n                                 acrossNum: this.staticGrid[targetY][this.currentPoint.x]['acrossNum'],\n                                 downNum: this.staticGrid[targetY][this.currentPoint.x]['downNum']\n                             });\n                         }\n                     } else {\n                         this.focusEar({\n                             y: this.currentPoint.y-1,\n                             x: this.currentPoint.x,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[this.currentPoint.y-1][this.currentPoint.x]['acrossNum'],\n                             downNum: this.staticGrid[this.currentPoint.y-1][this.currentPoint.x]['downNum']\n                         });\n                     }\n                     break;\n                 case \"down\":\n                     if (this.currentDirection === \"across\") {\n                         this.switchDirection();\n                     }\n                     if (this.currentPoint.y === this.dynamicGrid.length) {\n                         // do nothing at the top of the grid\n                         break;\n                     } else if (this.dynamicGrid[this.currentPoint.y+1][this.currentPoint.x]['isBlock'] === true) {\n                         // look for the closest block that's not a block\n                         let targetY = this.currentPoint.y+1;\n                         while (targetY <= this.dynamicGrid.length-1 && this.dynamicGrid[targetY][this.currentPoint.x]['isBlock'] === true) {\n                             targetY++;\n                         }\n                         if (targetY <= this.dynamicGrid.length-1) {\n                             this.focusEar({\n                                 y: targetY,\n                                 x: this.currentPoint.x,\n                                 direction: this.currentDirection,\n                                 acrossNum: this.staticGrid[targetY][this.currentPoint.x]['acrossNum'],\n                                 downNum: this.staticGrid[targetY][this.currentPoint.x]['downNum']\n                             });\n                         }\n                     } else {\n                         this.focusEar({\n                             y: this.currentPoint.y+1,\n                             x: this.currentPoint.x,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[this.currentPoint.y+1][this.currentPoint.x]['acrossNum'],\n                             downNum: this.staticGrid[this.currentPoint.y+1][this.currentPoint.x]['downNum']\n                         });\n                     }\n                     break;\n                 case \"left\":\n                     if (this.currentDirection === \"down\") {\n                         this.switchDirection()\n                     }\n                     if (this.currentPoint.x === 0 && this.currentPoint.y === 0) {\n                         // do nothing at top left corner\n                         break;\n                     } else if (this.currentPoint.x === 0 && this.currentPoint.y !== 0) {\n                         // wrap around if we're at the left edge\n                         let targetX = this.dynamicGrid[0].length-1;\n                         while (this.dynamicGrid[this.currentPoint.y-1][targetX]['isBlock'] === true) {\n                             targetX--;\n                         }\n                         this.focusEar({\n                             y: this.currentPoint.y-1,\n                             x: targetX,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[this.currentPoint.y-1][targetX]['acrossNum'],\n                             downNum: this.staticGrid[this.currentPoint.y-1][targetX]['downNum']\n                         })\n                     } else if (this.dynamicGrid[this.currentPoint.y][this.currentPoint.x-1]['isBlock'] === true) {\n                         // look for the closest square that's not a block\n                         let targetX = this.currentPoint.x-1;\n                         while (targetX !== -1 && this.dynamicGrid[this.currentPoint.y][targetX]['isBlock'] === true) {\n                             targetX--;\n                         }\n                         if (targetX === -1) {\n                             // case when the left edge is a block\n                             // TODO this is a dirty hack refactor this code to be more efficient\n                             // can't simply use moveAcrossWord('left') because then it skips to the beginning of the word\n                             let targetX2 = this.dynamicGrid[0].length-1;\n                             while (this.dynamicGrid[this.currentPoint.y-1][targetX2]['isBlock'] === true) {\n                                 targetX2--;\n                             }\n                             this.focusEar({\n                                 y: this.currentPoint.y-1,\n                                 x: targetX2,\n                                 direction: this.currentDirection,\n                                 acrossNum: this.staticGrid[this.currentPoint.y-1][targetX2]['acrossNum'],\n                                 downNum: this.staticGrid[this.currentPoint.y-1][targetX2]['downNum']\n                             })\n                         } else if (targetX !== -1) {\n                             this.focusEar({\n                                 y: this.currentPoint.y,\n                                 x: targetX,\n                                 direction: this.currentDirection,\n                                 acrossNum: this.staticGrid[this.currentPoint.y][targetX]['acrossNum'],\n                                 downNum: this.staticGrid[this.currentPoint.y][targetX]['downNum'],\n                             });\n                         }\n                     } else {\n                         this.focusEar({\n                             y: this.currentPoint.y,\n                             x: this.currentPoint.x-1,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x-1]['acrossNum'],\n                             downNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x-1]['downNum'],\n                         });\n                     }\n                     break;\n                 case \"right\":\n                     if (this.currentDirection === \"down\") {\n                         this.switchDirection()\n                     }\n                     if (this.currentPoint.x === this.dynamicGrid[0].length-1 && this.currentPoint.y === this.dynamicGrid.length-1) {\n                         // do nothing at the bottom right corner\n                         break;\n                     } else if (this.currentPoint.x === this.dynamicGrid[0].length-1 && this.currentPoint.y !== this.dynamicGrid.length-1) {\n                         // wrap around if we're at the right edge\n                         let targetX = 0;\n                         while (this.dynamicGrid[this.currentPoint.y+1][targetX]['isBlock'] === true) {\n                             targetX++;\n                         }\n                         this.focusEar({\n                             y: this.currentPoint.y+1,\n                             x: targetX,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[this.currentPoint.y+1][targetX]['acrossNum'],\n                             downNum: this.staticGrid[this.currentPoint.y+1][targetX]['downNum']\n                         })\n                     } else if (this.dynamicGrid[this.currentPoint.y][this.currentPoint.x+1]['isBlock'] === true) {\n                         // look for the closest square that's not a block\n                         let targetX = this.currentPoint.x+1;\n                         while (targetX <= this.dynamicGrid[0].length-1 && this.dynamicGrid[this.currentPoint.y][targetX]['isBlock'] === true) {\n                             targetX++;\n                         }\n                         if (targetX > this.dynamicGrid[0].length-1) {\n                             // case when the right edge is a block\n                             // TODO this is a dirty hack refactor this code to be more efficient\n                             let targetX2 = 0;\n                             while (this.dynamicGrid[this.currentPoint.y+1][targetX2]['isBlock'] === true) {\n                                 targetX2++;\n                             }\n                             this.focusEar({\n                                 y: this.currentPoint.y+1,\n                                 x: targetX2,\n                                 direction: this.currentDirection,\n                                 acrossNum: this.staticGrid[this.currentPoint.y+1][targetX2]['acrossNum'],\n                                 downNum: this.staticGrid[this.currentPoint.y+1][targetX2]['downNum']\n                             })\n                         } else if (targetX <= this.dynamicGrid[0].length-1) {\n                             this.focusEar({\n                                 y: this.currentPoint.y,\n                                 x: targetX,\n                                 direction: this.currentDirection,\n                                 acrossNum: this.staticGrid[this.currentPoint.y][targetX]['acrossNum'],\n                                 downNum: this.staticGrid[this.currentPoint.y][targetX]['downNum'],\n                             });\n                         }\n                     } else {\n                         this.focusEar({\n                             y: this.currentPoint.y,\n                             x: this.currentPoint.x+1,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x+1]['acrossNum'],\n                             downNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x+1]['downNum'],\n                         });\n                     }\n                     break;\n             }\n         },\n\n         switchDirection() {\n             if (this.currentDirection === \"across\") {\n                 this.currentDirection = \"down\"\n             } else if (this.currentDirection === \"down\") {\n                 this.currentDirection = \"across\"\n             }\n         },\n\n         switchDirectionAndFocus() {\n             this.switchDirection();\n             this.focusEar({\n                 y: this.currentPoint.y,\n                 x: this.currentPoint.x,\n                 direction: this.currentDirection,\n                 acrossNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x]['acrossNum'],\n                 downNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x]['downNum']\n             })\n         },\n\n         clearSquareLetter(y, x) {\n             if (this.dynamicGrid[y][x]['currentLetter'] !== \"\") {\n                 this.dynamicGrid[y][x]['currentLetter'] = \"\";\n                 this.currentSquaresFilled -= 1;\n             }\n         },\n\n         moveForwardCurrentDirection() {\n             // TODO gotta skip any squares that are already filled\n             if (this.currentDirection === \"across\") {\n                     this.movePointSmart(\"right\");\n                 } else if (this.currentDirection === \"down\") {\n                     this.movePointSmart(\"down\");\n                 }\n         },\n\n         moveBackwardCurrentDirection() {\n             if (this.currentDirection === \"across\") {\n                 this.movePointSmart(\"left\");\n             } else if (this.currentDirection === \"down\") {\n                 this.movePointSmart(\"up\");\n             }\n         },\n\n         // TODO maybe wrap around to the start of the grid\n         // TODO also i think i've hardcoded in that the [0,0] square is not a block... oops\n         getAcrossWordStart(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let currentAcrossNum = this.staticGrid[y][x]['acrossNum'];\n             let targetX = x;\n             while (targetX > 0 && this.staticGrid[y][targetX]['acrossNum'] === currentAcrossNum) {\n                 // iterate till we get the start of across word\n                 targetX--;\n             }\n             if (this.staticGrid[y][targetX]['isBlock'] === true) {\n                 return {y: y, x: targetX+1}\n             } else {\n                 return {y: y, x: targetX}\n             }\n         },\n         \n         getAcrossWordEnd(y, x) {\n             let currentAcrossNum = this.staticGrid[y][x]['acrossNum'];\n             let targetX = x;\n             while (targetX < this.staticGrid[y].length && this.staticGrid[y][targetX]['acrossNum'] === currentAcrossNum) {\n                 targetX++;\n             }\n             if (targetX >= this.staticGrid[y].length || this.staticGrid[y][targetX]['isBlock'] === true) {\n                 return {y: y, x: targetX-1}\n             } else {\n                 return {y: y, x: targetX}\n             }\n         },\n\n         getNextAcrossNum() {\n             let currentAcrossNum = this.staticGrid[this.currentPoint.y][this.currentPoint.x]['acrossNum'];\n             if (currentAcrossNum === this.cluesAcross[this.cluesAcross.length-1].Num) {\n                 return null\n             }\n             // TODO binary search to make this faster?\n             // or a cache?\n             for (let clueIndex = 0; clueIndex < this.cluesAcross.length; clueIndex++) {\n                 if (this.cluesAcross[clueIndex].Num === currentAcrossNum) {\n                     return this.cluesAcross[clueIndex+1].Num;\n                 }\n             }\n         },\n\n         getNextAcrossWord() {\n             let x = this.currentPoint.x;\n             for (let y = this.currentPoint.y; y < this.staticGrid.length; y++) {\n                 for (x; x < this.staticGrid[y].length; x++) {\n                     if (this.staticGrid[y][x]['acrossNum'] === this.getNextAcrossNum()) {\n                         return this.getAcrossWordStart(y, x);\n                     }\n                 }\n                 x = 0;\n             }\n\n             // return the very first word if we can't find one above\n             for (let iX = 0; iX < this.staticGrid[0].length; iX++) {\n                 if (this.staticGrid[0][x]['acrossNum'] === 1) {\n                     return this.getAcrossWordStart(0, iX)\n                 }\n             }\n             return null\n         },\n\n         getPreviousAcrossNum(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let currentAcrossNum = this.staticGrid[y][x]['acrossNum'];\n             if (currentAcrossNum === 1) {\n                 return this.cluesAcross[this.cluesAcross.length-1].Num;\n             }\n             for (let clueIndex = 0; clueIndex < this.cluesAcross.length; clueIndex++) {\n                 if (this.cluesAcross[clueIndex].Num === currentAcrossNum) {\n                     return this.cluesAcross[clueIndex-1].Num;\n                 }\n             }\n         },\n\n         getPreviousAcrossWord(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let prevAcrossNum = this.getPreviousAcrossNum(y, x);\n             for (y; y >= 0; y--) {\n                 for (x; x >= 0; x--) {\n                     if (this.staticGrid[y][x]['acrossNum'] === prevAcrossNum) {\n                         return this.getAcrossWordStart(y, x)\n                     }\n                 }\n                 x = this.staticGrid[y].length-1;\n             }\n\n             // return the last word if we can't find one above\n             let lastRow = this.staticGrid.length-1\n             for (let iX = this.staticGrid[lastRow].length-1; iX >= 0; iX--) {\n                 if (this.staticGrid[lastRow][iX].isBlock !== true) {\n                     return this.getAcrossWordStart(lastRow, iX);\n                 }\n             }\n             console.log(\"getPreviousAcrossWord: returning null\");\n             return null\n         },\n\n         moveAcrossWord(direction) {\n             let targetWordStart;\n             let targetEmpty;\n             if (direction === \"right\") {\n                 targetWordStart = this.getNextAcrossWord();\n                 if (this.isGridFull) {\n                     // if grid is full, just go to the start of next word\n                     targetEmpty = targetWordStart;\n                 } else {\n                     // else, be smart about emptiness\n                     targetEmpty = this.getNextEmptyAcross(targetWordStart.y, targetWordStart.x);\n                 }\n             } else if (direction === \"left\") {\n                 if (this.isGridFull) {\n                     targetEmpty = this.getPreviousAcrossWord();\n                 } else {\n                     targetEmpty = this.getPreviousEmptyAcross();\n                 }\n             }\n             if (!targetEmpty) {\n                 console.log(\"moveAcrossWord: no targetEmpty!\")\n                 return\n             }\n             this.focusEar({\n                 y: targetEmpty.y,\n                 x: targetEmpty.x,\n                 direction: this.currentDirection,\n                 acrossNum: this.staticGrid[targetEmpty.y][targetEmpty.x]['acrossNum'],\n                 downNum: this.staticGrid[targetEmpty.y][targetEmpty.x]['downNum']\n             })\n         },\n\n         getDownWordStart(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let currentDownNum = this.staticGrid[y][x]['downNum'];\n             let targetY = y;\n             while (targetY > 0 && this.staticGrid[targetY][x]['downNum'] === currentDownNum) {\n                 // iterate till we get the next down word\n                 targetY--;\n             }\n             if (this.staticGrid[targetY][x]['isBlock'] === true) {\n                 return {y: targetY+1, x: x}\n             } else {\n                 return {y: targetY, x: x}                 \n             }\n         },\n\n         getDownWordEnd(y, x) {\n             let currentDownNum = this.staticGrid[y][x]['downNum'];\n             let targetY = y;\n             while (targetY < this.staticGrid.length && this.staticGrid[targetY][x]['downNum'] === currentDownNum) {\n                 // iterate till we get the next down word\n                 targetY++;\n             }\n             if (targetY >= this.staticGrid.length || this.staticGrid[targetY][x]['isBlock'] === true) {\n                 return {y: targetY-1, x: x}\n             } else {\n                 return {y: targetY, x: x}\n             }\n         },\n\n         isDownWordEnd(y, x) {\n             // utility function that returns a boolean saying if the square at y, x is an end\n             // of a down word\n             return (y === this.getDownWordEnd(y, x).y) && (x === this.getDownWordEnd(y, x).x);\n         },\n\n         getNextDownNum(y=this.currentPoint.y, x=this.currentPoint.y) {\n             // returns the next down word's clue number\n             let currentDownNum = this.staticGrid[y][x]['downNum'];\n             if (currentDownNum === this.cluesDown[this.cluesDown.length-1].Num) {\n                 // exit when we're at the last\n                 return null\n             }\n             for (let clueIndex = 0; clueIndex < this.cluesDown.length; clueIndex++) {\n                 if (this.cluesDown[clueIndex].Num === currentDownNum) {\n                     return this.cluesDown[clueIndex+1].Num;\n                 }\n             }\n         },\n\n         getNextDownWord(y=this.currentPoint.y, x=this.currentPoint.x) {\n             // return coordinates of the next down word, wrapping around to the first\n             let currentDownStart = this.getDownWordStart(y, x);\n             let cx = currentDownStart.x;\n             let cy = currentDownStart.y;\n             for (cy; cy < this.staticGrid.length; cy++) {\n                 for (cx; cx < this.staticGrid[cy].length; cx++) {\n                     if (this.staticGrid[cy][cx]['downNum'] === this.getNextDownNum(y, x)) {\n                         return this.getDownWordStart(cy, cx);\n                     }\n                 }\n                 cx = 0;\n             }\n             // if we're at the last word, then return the first square's coordinates\n             // i could probably do an early-exit by checking the current down num\n             // with the last down num\n             return this.firstSquareCoor\n         },\n\n         getPreviousDownNum(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let currentDownNum = this.staticGrid[y][x]['downNum'];\n             if (currentDownNum === 1) {\n                 // return last when we're at the first\n                 return this.cluesDown[this.cluesDown.length-1].Num;\n             }\n             for (let clueIndex = 0; clueIndex < this.cluesDown.length; clueIndex++) {\n                 if (this.cluesDown[clueIndex].Num === currentDownNum) {\n                     return this.cluesDown[clueIndex-1].Num;\n                 }\n             }\n         },\n\n         getPreviousDownWord(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let prevDownNum = this.getPreviousDownNum(y, x);\n             for (y; y >= 0; y--) {\n                 for (x; x >= 0; x--) {\n                     if (this.staticGrid[y][x]['downNum'] === prevDownNum) {\n                         return this.getDownWordStart(y, x)\n                     }\n                 }\n                 x = this.staticGrid[y].length-1;\n             }\n\n             // return last word if we can't find one above\n             let lastRow = this.staticGrid.length-1;\n             for (let iX = this.staticGrid[lastRow].length-1; iX >= 0; iX--) {\n                 if (this.staticGrid[lastRow][iX].downNum === prevDownNum) {\n                     return this.getDownWordStart(lastRow, iX);\n                 }\n             }\n             return null\n         },\n\n         moveDownWord(direction) {\n             let targetWordStart;\n             let targetEmpty;\n             if (direction === \"right\") {\n                 targetWordStart = this.getNextDownWord();\n                 if (this.isGridFull) {\n                     targetEmpty = targetWordStart;\n                 } else {\n                     targetEmpty = this.getNextEmptyDown(targetWordStart.y, targetWordStart.x);\n                 }\n             } else if (direction === \"left\") {\n                 if (this.isGridFull) {\n                     targetEmpty = this.getPreviousDownWord();\n                 } else {\n                     targetEmpty = this.getPreviousEmptyDown();\n                 }\n             }\n             if (!targetEmpty) {\n                 console.log(\"moveDownWord: no targetEmpty!\");\n                 return;\n             }\n             this.focusEar({\n                 y: targetEmpty.y,\n                 x: targetEmpty.x,\n                 direction: this.currentDirection,\n                 acrossNum: this.staticGrid[targetEmpty.y][targetEmpty.x]['acrossNum'],\n                 downNum: this.staticGrid[targetEmpty.y][targetEmpty.x]['downNum']\n             })\n         },\n\n         getNextEmptyAcross(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let iX = x;\n             for (let iY = y; iY < this.staticGrid.length; iY++) {\n                 for (iX; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.dynamicGrid[iY][iX].isBlock !== true && this.dynamicGrid[iY][iX].currentLetter === \"\") {\n                         return {y: iY, x: iX}\n                     }\n                 }\n                 iX = 0;\n             }\n             // if there's no empty square starting from point, look for it before point\n             // the reason we're not doing a recursive call is because i'm afraid of infinite loop\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.dynamicGrid[iY][iX].isBlock !== true && this.dynamicGrid[iY][iX].currentLetter === \"\") {\n                         return {y: iY, x: iX}\n                     }\n                 }\n             }\n             // if we can't find one still\n             console.log(\"getNextEmptyAcross: can't find empty square\");\n             return null\n         },\n\n         getPreviousEmptyAcross(y=this.currentPoint.y, x=this.currentPoint.x) {\n             // for moveAcrossWord. get the start of the previous word, search forward in that\n             // word for an empty square. if there's none, repeat with the word before that.\n             let prevAcrossStart = this.getPreviousAcrossWord(y, x);\n             let prevAcrossEnd = this.getAcrossWordEnd(prevAcrossStart.y, prevAcrossStart.x);\n             let iX;\n             let found = false;\n             while (!found) {\n                 // TODO there's gonna be an infinite loop if the grid is full. mabye return\n                 // early if the grid is full?\n                 for (iX = prevAcrossStart.x; iX <= prevAcrossEnd.x; iX++) {\n                     if (this.dynamicGrid[prevAcrossStart.y][iX].isBlock !== true && this.dynamicGrid[prevAcrossStart.y][iX].currentLetter === \"\") {\n                         found = true;\n                         return {y: prevAcrossStart.y, x: iX};\n                     }\n                 }\n                 iX -= 1;\n                 prevAcrossStart = this.getPreviousAcrossWord(prevAcrossStart.y, iX);\n                 prevAcrossEnd = this.getAcrossWordEnd(prevAcrossStart.y, prevAcrossStart.x);\n             }\n             console.log(\"getPreviousEmptyAcross: can't find previous empty square\");\n             return null\n         },\n\n         getNextEmptyDown(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let iX = x;\n             let iY = y;\n             //let alreadySearchedFull = false;\n             if (this.currentSquaresFilled === this.squareCount) {\n                 console.log(\"getNextEmptyDown: grid full!\")\n                 return;\n             }\n             while (this.dynamicGrid[iY][iX].isBlock === true || this.dynamicGrid[iY][iX].currentLetter !== \"\") {\n                 if (this.isDownWordEnd(iY, iX)) {\n                     // if this is the end of the word, start over from the beginning of the next word\n                     let nextDown = this.getNextDownWord(iY, iX);\n                     if (nextDown) {\n                         iX = nextDown.x;\n                         iY = nextDown.y;\n                     }\n                 } else if (!this.isDownWordEnd(iY, iX)) {\n                     iY += 1;\n                 }\n             }\n             return {y: iY, x: iX}\n         },\n\n         getPreviousEmptyDown(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let prevDownStart = this.getPreviousDownWord(y, x);\n             let prevDownEnd = this.getDownWordEnd(prevDownStart.y, prevDownStart.x);\n             let iY;\n             let found = false;\n             while (!found) {\n                 for (iY = prevDownStart.y; iY <= prevDownEnd.y; iY++) {\n                     if (this.dynamicGrid[iY][prevDownStart.x].isBlock !== true && this.dynamicGrid[iY][prevDownStart.x].currentLetter === \"\") {\n                         found = true;\n                         return {y: iY, x: prevDownStart.x};\n                     }\n                 }\n                 iY -= 1;\n                 prevDownStart = this.getPreviousDownWord(iY, prevDownStart.x);\n                 prevDownEnd = this.getDownWordEnd(prevDownStart.y, prevDownStart.x);\n             }\n             console.log(\"getPreviousEmptyDown: can't find previous empty square\");\n             return null\n         },\n\n         moveNextEmpty() {\n             let nextEmpty;\n             if (this.currentDirection === \"across\") {\n                 nextEmpty = this.getNextEmptyAcross();\n             } else if (this.currentDirection === \"down\") {\n                 nextEmpty = this.getNextEmptyDown();\n             }\n             if (!nextEmpty) {\n                 console.log(\"moveNextEmpty: no next empty\")\n                 return;\n             }\n             this.focusEar({\n                 y: nextEmpty.y,\n                 x: nextEmpty.x,\n                 direction: this.currentDirection,\n                 acrossNum: this.staticGrid[nextEmpty.y][nextEmpty.x]['acrossNum'],\n                 downNum: this.staticGrid[nextEmpty.y][nextEmpty.x]['downNum']\n             });\n         },\n\n         moveAfterInsert() {\n             if (this.currentDirection === \"across\") {\n                 let acrossWordStart = this.getAcrossWordStart();\n                 let thisAcrossNum = this.staticGrid[this.currentPoint.y][this.currentPoint.x].acrossNum;\n                 for (let iX = this.currentPoint.x; iX < this.staticGrid[this.currentPoint.y].length; iX++) {\n                     if (this.dynamicGrid[this.currentPoint.y][iX].currentLetter === \"\") {\n                         this.focusEar({\n                             y: this.currentPoint.y,\n                             x: iX,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[this.currentPoint.y][iX].acrossNum,\n                             downNum: this.staticGrid[this.currentPoint.y][iX].downNum\n                         });\n                         return;\n                     }\n                     if (this.staticGrid[this.currentPoint.y][iX].acrossNum !== thisAcrossNum) {\n                         // the rest of the word is full\n                         break;\n                     }\n                 }\n                 for (let iX = acrossWordStart.x; iX < this.currentPoint.x; iX++) {\n                     // search starting from the start of the word\n                     if (this.dynamicGrid[this.currentPoint.y][iX].currentLetter === \"\") {\n                         this.focusEar({\n                             y: this.currentPoint.y,\n                             x: iX,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[this.currentPoint.y][iX].acrossNum,\n                             downNum: this.staticGrid[this.currentPoint.y][iX].downNum\n                         });\n                         return;\n                     }\n                 }\n                 // finally, the whole word is full --- move next empty\n                 this.moveNextEmpty();\n             } else if (this.currentDirection === \"down\") {\n                 let downWordStart = this.getDownWordStart();\n                 let thisDownNum = this.staticGrid[this.currentPoint.y][this.currentPoint.x].downNum;\n                 for (let iY = this.currentPoint.y; iY < this.staticGrid.length; iY++) {\n                     if (this.dynamicGrid[iY][this.currentPoint.x].currentLetter === \"\") {\n                         this.focusEar({\n                             y: iY,\n                             x: this.currentPoint.x,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[iY][this.currentPoint.x].acrossNum,\n                             downNum: this.staticGrid[iY][this.currentPoint.x].downNum\n                         });\n                         return;\n                     }\n                     if (this.staticGrid[iY][this.currentPoint.x].downNum !== thisDownNum) {\n                         break;\n                     }\n                 }\n                 for (let iY = downWordStart.y; iY < this.currentPoint.y; iY++) {\n                     if (this.dynamicGrid[iY][this.currentPoint.x].currentLetter === \"\") {\n                         this.focusEar({\n                             y: iY,\n                             x: this.currentPoint.x,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[iY][this.currentPoint.x].acrossNum,\n                             downNum: this.staticGrid[iY][this.currentPoint.x].downNum\n                         });\n                         return;\n                     }\n                 }\n                 this.moveNextEmpty()\n             }\n         },\n\n         moveStartWord(direction) {\n             // move to the start of this word\n             // direction is either \"across\" or \"down\"\n             let target;\n             if (direction === \"across\") {\n                 target = this.getAcrossWordStart(this.currentPoint.y, this.currentPoint.x);\n             } else if (direction === \"down\") {\n                 target = this.getDownWordStart(this.currentPoint.y, this.currentPoint.x);\n             }\n\n             if (target.x === this.currentPoint.x && target.y === this.currentPoint.y) {\n                 // we're already at the end of the word; simulate backtab behavior\n                 if (this.currentDirection === \"across\") {\n                     this.moveAcrossWord(\"left\");\n                     return\n                 } else if (this.currentDirection === \"down\") {\n                     this.moveDownWord(\"left\");\n                     return\n                 }\n             }\n             \n             this.focusEar({\n                 y: target.y,\n                 x: target.x,\n                 direction: this.currentDirection,\n                 acrossNum: this.staticGrid[target.y][target.x]['acrossNum'],\n                 downNum: this.staticGrid[target.y][target.x]['downNum']\n             });\n         },\n\n         moveEndWord(direction) {\n             // move to the end of this word\n             // direction is either \"across\" or \"down\"\n             let target;\n             if (direction === \"across\") {\n                 target = this.getAcrossWordEnd(this.currentPoint.y, this.currentPoint.x);\n             } else if (direction === \"down\") {\n                 target = this.getDownWordEnd(this.currentPoint.y, this.currentPoint.x);\n             }\n             \n             if (target.x === this.currentPoint.x && target.y === this.currentPoint.y) {\n                 // we're already at the end of the word; simulate tab behavior\n                 if (this.currentDirection === \"across\") {\n                     this.moveAcrossWord(\"right\");\n                     return\n                 } else if (this.currentDirection === \"down\") {\n                     this.moveDownWord(\"right\");\n                     return\n                 }\n             }\n             \n             this.focusEar({\n                 y: target.y,\n                 x: target.x,\n                 direction: this.currentDirection,\n                 acrossNum: this.staticGrid[target.y][target.x]['acrossNum'],\n                 downNum: this.staticGrid[target.y][target.x]['downNum']\n             })\n         },\n\n         clearCheckSquare(y, x) {\n             this.dynamicGrid[y][x]['isIncorrect'] = false;\n             this.dynamicGrid[y][x]['isCorrect'] = false;\n         },\n         \n         checkSquare(y=this.currentPoint.y, x=this.currentPoint.x) {\n             if (this.dynamicGrid[y][x]['currentLetter'] === this.staticGrid[y][x]['correctLetter'].toUpperCase()) {\n                 this.dynamicGrid[y][x]['isIncorrect'] = false;\n                 this.dynamicGrid[y][x]['isCorrect'] = true;\n             } else {\n                 this.dynamicGrid[y][x]['isIncorrect'] = true;\n                 this.dynamicGrid[y][x]['isCorrect'] = false;\n             }\n         },\n\n         checkWord(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let wordStart;\n             let wordEnd;\n             if (this.currentDirection === \"across\") {\n                 wordStart = this.getAcrossWordStart(y, x).x;\n                 wordEnd = this.getAcrossWordEnd(y, x).x;\n                 for (let iX = wordStart; iX <= wordEnd; iX++) {\n                     this.checkSquare(y, iX);\n                 }\n             } else if (this.currentDirection === \"down\") {\n                 wordStart = this.getDownWordStart(y, x).y;\n                 wordEnd = this.getDownWordEnd(y, x).y;\n                 for (let iY = wordStart; iY <= wordEnd; iY++) {\n                     this.checkSquare(iY, x);\n                 }\n             }\n         },\n\n         checkGrid() {\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.staticGrid[iY][iX].isBlock === true) {\n                         continue;\n                     } else {\n                         this.checkSquare(iY, iX);\n                     }\n                 }\n             }\n         },\n\n         revealSquare(y=this.currentPoint.y, x=this.currentPoint.x) {\n             if (this.dynamicGrid[y][x]['currentLetter'] === \"\") {\n                 this.currentSquaresFilled += 1;\n             }\n             this.dynamicGrid[y][x]['currentLetter'] = this.staticGrid[y][x]['correctLetter'].toUpperCase();\n             this.dynamicGrid[y][x]['isIncorrect'] = false;\n             this.dynamicGrid[y][x]['isCorrect'] = true;\n         },\n\n         revealWord(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let wordStart;\n             let wordEnd;\n             if (this.currentDirection === \"across\") {\n                 wordStart = this.getAcrossWordStart(y, x).x;\n                 wordEnd = this.getAcrossWordEnd(y, x).x;\n                 for (let iX = wordStart; iX <= wordEnd; iX++) {\n                     this.revealSquare(y, iX);\n                 }\n             } else if (this.currentDirection === \"down\") {\n                 wordStart = this.getDownWordStart(y, x).y;\n                 wordEnd = this.getDownWordEnd(y, x).y;\n                 for (let iY = wordStart; iY <= wordEnd; iY++) {\n                     this.revealSquare(iY, x);\n                 }\n             }\n         },\n\n         revealGrid() {\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.staticGrid[iY][iX].isBlock === true) {\n                         continue;\n                     } else {\n                         this.revealSquare(iY, iX);\n                     }\n                 }\n             }\n         },\n\n         clearWordLetters(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let wordEnd;\n             if (this.currentDirection === \"across\") {\n                 wordEnd = this.getAcrossWordEnd(y, x).x;\n                 for (let iX = x; iX <= wordEnd; iX++) {\n                     this.clearSquareLetter(y, iX);\n                 }\n             } else if (this.currentDirection === \"down\") {\n                 wordEnd = this.getDownWordEnd(y, x).y;\n                 for (let iY = y; iY <= wordEnd; iY++) {\n                     this.clearSquareLetter(iY, x);\n                 }\n             }\n         },\n\n         clearGrid() {\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     this.clearCheckSquare(iY, iX);\n                     this.clearSquareLetter(iY, iX);\n                 }\n             }\n         },\n\n         clickHandler(event) {\n             if (event.x === this.currentPoint.x && event.y === this.currentPoint.y) {\n                 // if user clicks on the the point\n                 if (this.dynamicGrid[event.y][event.x].isRebusActive) {\n                     // if it's a rebus, do nothing\n                     return;\n                 } else {\n                     // else, switch direction\n                     this.switchDirectionAndFocus()\n                 }\n             } else {\n                 this.focusEar(event)\n             }\n         },\n\n         keyHandler(event) {\n             // TODO possibly don't prevent default if the event is meta\n             // to preserve cmd-r and cmd-f\n             event.preventDefault()\n             if (this.settingsObject.bindFunctionObject.moveRightSquare(event)) {\n                 if (this.currentDirection === \"down\") {\n                     this.switchDirectionAndFocus();\n                 } else {\n                     this.movePointSmart(\"right\");\n                 }\n             } else if (this.settingsObject.bindFunctionObject.moveLeftSquare(event)) {\n                 if (this.currentDirection === \"down\") {\n                     this.switchDirectionAndFocus();\n                 } else {\n                     this.movePointSmart(\"left\");\n                 }\n             } else if (this.settingsObject.bindFunctionObject.moveUpSquare(event)) {\n                 if (this.currentDirection === \"across\") {\n                     this.switchDirectionAndFocus();\n                 } else {\n                     this.movePointSmart(\"up\");\n                 }\n             } else if (this.settingsObject.bindFunctionObject.moveDownSquare(event)) {\n                 if (this.currentDirection === \"across\") {\n                     this.switchDirectionAndFocus();\n                 } else {\n                     this.movePointSmart(\"down\");\n                 }\n             } else if (this.settingsObject.bindFunctionObject.deleteSquare(event)) {\n                 if (this.dynamicGrid[this.currentPoint.y][this.currentPoint.x]['isCorrect']) {\n                     // don't delete the letter if we know it's correct\n                 } else {\n                     this.clearSquareLetter(this.currentPoint.y, this.currentPoint.x);\n                     this.clearCheckSquare(this.currentPoint.y, this.currentPoint.x);\n                 }\n                 this.moveBackwardCurrentDirection();\n             } else if (this.settingsObject.bindFunctionObject.moveRightWord(event)) {\n                 if (this.currentDirection === \"across\") {\n                     this.moveAcrossWord(\"right\");\n                 } else if (this.currentDirection === \"down\") {\n                     this.moveDownWord(\"right\");\n                 }\n             } else if (this.settingsObject.bindFunctionObject.moveLeftWord(event)) {\n                 if (this.currentDirection === \"across\") {\n                     this.moveAcrossWord(\"left\");\n                 } else if (this.currentDirection === \"down\") {\n                     this.moveDownWord(\"left\");\n                 }\n             } else if (this.settingsObject.bindFunctionObject.moveStartWord(event)) {\n                 this.moveStartWord(this.currentDirection);\n             } else if (this.settingsObject.bindFunctionObject.moveEndWord(event)) {\n                 this.moveEndWord(this.currentDirection);\n             } else if (this.settingsObject.bindFunctionObject.deleteWord(event)) {\n                 this.clearWordLetters(this.currentPoint.y, this.currentPoint.x);\n             } else if (this.settingsObject.bindFunctionObject.switchDirection(event)) {\n                 this.switchDirectionAndFocus()\n             } else if (/^\\w/.test(event.key) && event.key.length === 1) {\n                 // it's a letter to insert into grid\n                 this.clearCheckSquare(this.currentPoint.y, this.currentPoint.x);\n                 if (!this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].isRebusActive) {\n                     if (this.dynamicGrid[this.currentPoint.y][this.currentPoint.x]['currentLetter'] === \"\") {\n                         this.currentSquaresFilled += 1;\n                     }\n                     this.dynamicGrid[this.currentPoint.y][this.currentPoint.x]['currentLetter'] = event.key.toUpperCase();\n                     this.moveAfterInsert();\n                 }\n             }\n         },\n\n         gridFullCheck() {\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.dynamicGrid[iY][iX].isBlock) {\n                         continue;\n                     } else if (this.dynamicGrid[iY][iX]['currentLetter'] !== this.staticGrid[iY][iX]['correctLetter'].toUpperCase()) {\n                         this.$emit('grid-full', \"incorrect\"); \n                         return;\n                     }\n                 }\n             }\n             this.$emit('grid-full', \"correct\");\n             return \n         },\n\n         addKeyEventListener() {\n             window.addEventListener('keydown', this.keyHandler);\n         },\n\n         removeKeyEventListener() {\n             window.removeEventListener('keydown', this.keyHandler);\n         },\n     },\n     mounted() {\n         window.addEventListener('keydown', this.keyHandler);\n         this.focusEar({\n             y: 0,\n             x: this.firstSquareCoor.x,\n             direction: this.currentDirection,\n             acrossNum: this.staticGrid[0][this.firstSquareCoor.x]['acrossNum'],\n             downNum: this.staticGrid[0][this.firstSquareCoor.x]['downNum'],\n         })\n     }\n }\n</script>\n\n<style scoped>\n .gridContainer {\n     display: grid;\n }\n</style>\n","<template>\n    <span :tabindex=\"isBlock ? null : -1\" \n          class=\"square\" :class=\"classObject\"\n          :style=\"squareStyle\"\n          @click=\"selectSquare\" \n          @keydown=\"keyHandler\"\n          ref=\"square\"\n    >\n        <span class=\"cluenum-square\"\n              :style=\"cluenumStyle\"\n        >{{ cluenum }}</span>\n        <svg class=\"svg\">\n            <circle v-if=\"isCircled && !isWordStartAcross && !isWordStartDown\"\n                    cx=\"0.95em\"\n                    cy=\"0.95em\"\n                    r=\"13px\"\n                    :stroke=\"settingsObject.selectedTheme.fgAlt\"\n                    stroke-width=\"1px\"\n                    stroke-opacity=\"0.9\"\n                    fill-opacity=\"0\"/>\n            <g v-if=\"isCircled && (isWordStartAcross || isWordStartDown)\"\n               :stroke=\"settingsObject.selectedTheme.fgAlt\"\n               stroke-width=\"1px\"\n               stroke-opacity=\"0.9\"\n               fill-opacity=\"0\">\n                <path d=\"\n                         M 14 2.5\n                         A 13 13 0 1 1 2 15\"/>\n            </g>\n        </svg>\n        <div class=\"current-letter\"\n              :style=\"currentLetterStyle\"\n        > {{ currentLetter }} </div>\n        <span v-show=\"isRebusActive\" class=\"square rebusContainer\" ref=\"rebusCont\">\n            <input v-model=\"rebusInput\"\n                   class=\"rebus-input\"\n                   style=\"text-transform: uppercase;\"\n                   :style=\"squareStyle\"\n                   @keydown.enter=\"this.$emit('rebus-enter', rebusInput)\"\n                   @focusout=\"this.$emit('rebus-blur', rebusInput)\"\n                   type=\"text\"\n                   ref=\"rebus\"\n            />\n        </span>\n    </span>\n</template>\n\n<script>\n export default {\n     name: 'square',\n     props: {\n         // static\n         x: Number,\n         y: Number,\n         correctLetter: String,\n         isBlock: Boolean,\n         isCircled: Boolean,\n         isRebus: Boolean,\n         isWordStartAcross: Boolean,\n         isWordStartDown: Boolean,\n         acrossNum: Number,\n         downNum: Number,\n         isLeft: Boolean,\n         isRight: Boolean,\n         isTop: Boolean,\n         isBot: Boolean,\n\n         // dynamic\n         currentLetter: String,\n         currentDirection: String,\n         isSecondarySelect: Boolean,\n         isPrimarySelect: Boolean,\n         isPoint: Boolean,\n         isCorrect: Boolean,\n         isIncorrect: Boolean,\n         isRebusActive: Boolean,\n\n         settingsObject: Object,\n         computedFontSize: Object,\n     },\n     \n     emits: ['square-focus', 'rebus-enter', 'rebus-blur'],\n     \n     data() {\n         return {\n             rebusInput: '',\n         };\n     },\n\n     created() {\n         this.$watch('isRebusActive', this.focusRebus, {\n             immediate: true,\n             deep: true\n         })\n     },\n     \n     computed: {\n         \n         classObject() {\n             return {\n                 block: this.isBlock,\n                 circled: this.isCircled,\n                 rebus: this.isRebus,\n                 \n                 primarySelect: this.isPrimarySelect,\n                 secondarySelect: this.isSecondarySelect,\n                 isPoint: this.isPoint,\n                 isCorrect: this.isCorrect,\n                 isIncorrect: this.isIncorrect,\n                 isRebus: this.isRebusActive,\n             }\n         },\n         \n         cluenum() {\n             if (this.isWordStartAcross === true) {\n                 return this.acrossNum;\n             } else if (this.isWordStartDown === true) {\n                 return this.downNum;\n             } else {\n                 return null;\n             }\n         },\n\n         cluenumStyle() {\n             return {\n                 fontSize: this.computedFontSize.cluenum,\n                 color: this.settingsObject.selectedTheme.fg\n             }\n         },\n\n         currentLetterStyle() {\n             if (this.isCorrect) {\n                 return {\n                     color: this.settingsObject.selectedTheme.blue,\n                     borderColor: this.settingsObject.selectedTheme.fg,\n                     fontSize: this.computedFontSize.currentLetter,\n                 }\n             }\n             if (this.isIncorrect) {\n                 return {\n                     color: this.settingsObject.selectedTheme.red,\n                     borderColor: this.settingsObject.selectedTheme.fg,\n                     fontSize: this.computedFontSize.currentLetter,\n                 }\n             } else {\n                 return {\n                     color: this.settingsObject.selectedTheme.fg,\n                     fontSize: this.computedFontSize.currentLetter,\n                 }\n             }\n         },\n\n         squareStyle() {\n             let styleObj = {}\n             styleObj['color'] = this.settingsObject.selectedTheme.fg;\n             \n             if (this.isBlock) {\n                 styleObj['background-color'] = this.settingsObject.selectedTheme.fg;\n             }\n             if (this.isPrimarySelect) {\n                 styleObj['background-color'] = this.settingsObject.selectedTheme.darkBlue;\n             }\n             if (this.isSecondarySelect) {\n                 styleObj['background-color'] = this.settingsObject.selectedTheme.base2;\n             }\n             if (this.isPoint) {\n                 styleObj['background-color'] = this.settingsObject.selectedTheme.green;\n             }\n\n             // border stuff\n             if (this.isLeft) {\n                 if (this.isTop) {\n                     // top left\n                     styleObj['border-width'] = \"2px 1px 0 2px\"\n                 } else if (this.isBot) {\n                     // bottom left\n                     styleObj['border-width'] = \"1px 1px 2px 2px\"\n                 } else {\n                     // left edge\n                     styleObj['border-width'] = \"1px 1px 0 2px\"\n                 }\n             } else if (this.isRight) {\n                 if (this.isTop) {\n                     styleObj['border-width'] = \"2px 2px 0 0\"\n                 } else if (this.isBot) {\n                     styleObj['border-width'] = \"1px 2px 2px 0\"\n                 } else {\n                     styleObj['border-width'] = \"1px 2px 0 0\"\n                 }\n             } else if (this.isTop) {\n                 // normal top (not top left or top right)\n                 styleObj['border-width'] = \"2px 1px 0 0\"\n             } else if (this.isBot) {\n                 // normal bot (not bot left or bot right)\n                 styleObj['border-width'] = \"1px 1px 2px 0\"\n             } else if (!this.isRight && !this.isLeft && !this.isTop && !this.isBot) {\n                 // middle square\n                 styleObj['border-width'] = \"1px 1px 0 0\"\n             }\n             styleObj['border-style'] = \"solid\";\n             return styleObj;\n         }\n     },\n     \n     methods: {\n         keyHandler() {\n             if (event.key === event.key.toLowerCase()) {\n                 this.letter = event.key.toUpperCase()\n             } // maybe add if it's uppercase do penciling\n             //console.log(event.key)\n             //console.log('keyHandler')\n         },\n         \n         selectSquare() {\n             if (this.isBlock != true) {\n                 this.$emit('square-focus', {\n                     acrossNum: this.acrossNum,\n                     downNum: this.downNum,\n                     direction: this.currentDirection,\n                     x: this.x,\n                     y: this.y,\n                 });\n                 //console.log('selected');   \n             }\n         },\n\n         focusRebus() {\n             if (this.isRebusActive) {\n                 this.$nextTick(() => {\n                     this.$refs.rebus.focus();\n                 });\n             }\n         }\n     },\n }\n</script>\n\n<style scoped>\n .cluenum-square {\n     position: absolute;\n     /* float: left; */\n     font-size: 10px;\n     white-space: nowrap;\n     margin-left: 1px;\n     margin-top: -1px;\n     z-index: 2;\n     /* disable text selection */\n     -webkit-user-select: none; /* Safari */        \n     -moz-user-select: none; /* Firefox */\n     -ms-user-select: none; /* IE10+/Edge */\n     user-select: none; /* Standard */\n }\n .rebusContainer {\n     padding: 0;\n     margin: 0;\n     position: absolute;\n     z-index: 1;\n     width: 2.5em;\n     height: 2em;\n     /* borders or outline still appear... possibly inherited from square */\n     border: none;\n     outline: none;\n }\n .rebus-input {\n     padding-left: 2px;\n     padding-right: 2px;\n     padding-top: 5px;\n     padding-bottom: 5px;\n     margin: 0;\n     width: 100%;\n     border: none;\n     line-height: 140%;\n     outline: none;\n }\n span:focus {\n     outline: none\n }\n .square {\n     display: inline-block;\n     /* border: 1px solid; */\n     font-weight: normal;\n     cursor: default;\n     white-space: nowrap;\n     overflow: hidden;\n     /* text-align: center; */\n }\n .current-letter {\n     position: relative;\n     top: 0.3em;\n     white-space: no-wrap;\n     left: 0.4em;\n     /* font-size: 20px; */\n }\n .block {\n     /* border: 1px solid; */\n }\n .isPoint {\n     outline: none;\n }\n .svg {\n     width: 30px;\n     height: 30px;\n     position: absolute;\n     z-index: 0;\n }\n</style>\n","import { render } from \"./square.vue?vue&type=template&id=677a2061&scoped=true&bindings={\\\"x\\\":\\\"props\\\",\\\"y\\\":\\\"props\\\",\\\"correctLetter\\\":\\\"props\\\",\\\"isBlock\\\":\\\"props\\\",\\\"isCircled\\\":\\\"props\\\",\\\"isRebus\\\":\\\"props\\\",\\\"isWordStartAcross\\\":\\\"props\\\",\\\"isWordStartDown\\\":\\\"props\\\",\\\"acrossNum\\\":\\\"props\\\",\\\"downNum\\\":\\\"props\\\",\\\"isLeft\\\":\\\"props\\\",\\\"isRight\\\":\\\"props\\\",\\\"isTop\\\":\\\"props\\\",\\\"isBot\\\":\\\"props\\\",\\\"currentLetter\\\":\\\"props\\\",\\\"currentDirection\\\":\\\"props\\\",\\\"isSecondarySelect\\\":\\\"props\\\",\\\"isPrimarySelect\\\":\\\"props\\\",\\\"isPoint\\\":\\\"props\\\",\\\"isCorrect\\\":\\\"props\\\",\\\"isIncorrect\\\":\\\"props\\\",\\\"isRebusActive\\\":\\\"props\\\",\\\"settingsObject\\\":\\\"props\\\",\\\"computedFontSize\\\":\\\"props\\\",\\\"rebusInput\\\":\\\"data\\\",\\\"classObject\\\":\\\"options\\\",\\\"cluenum\\\":\\\"options\\\",\\\"cluenumStyle\\\":\\\"options\\\",\\\"currentLetterStyle\\\":\\\"options\\\",\\\"squareStyle\\\":\\\"options\\\",\\\"keyHandler\\\":\\\"options\\\",\\\"selectSquare\\\":\\\"options\\\",\\\"focusRebus\\\":\\\"options\\\"}\"\nimport script from \"./square.vue?vue&type=script&lang=js\"\nexport * from \"./square.vue?vue&type=script&lang=js\"\n\nimport \"./square.vue?vue&type=style&index=0&id=677a2061&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-677a2061\"\n\nexport default script","import { render } from \"./grid.vue?vue&type=template&id=7db67ed5&scoped=true&bindings={\\\"gridObject\\\":\\\"props\\\",\\\"cluesDown\\\":\\\"props\\\",\\\"cluesAcross\\\":\\\"props\\\",\\\"rebusObj\\\":\\\"props\\\",\\\"settingsObject\\\":\\\"props\\\",\\\"gridSizeObj\\\":\\\"props\\\",\\\"currentDirection\\\":\\\"data\\\",\\\"dynamicGrid\\\":\\\"data\\\",\\\"previousSelectAcross\\\":\\\"data\\\",\\\"previousSelectDown\\\":\\\"data\\\",\\\"previousPoint\\\":\\\"data\\\",\\\"currentPoint\\\":\\\"data\\\",\\\"currentSquaresFilled\\\":\\\"data\\\",\\\"computedFontSize\\\":\\\"options\\\",\\\"isGridFull\\\":\\\"options\\\",\\\"cssGridVars\\\":\\\"options\\\",\\\"cssRowVars\\\":\\\"options\\\",\\\"createRebusObj\\\":\\\"options\\\",\\\"staticGrid\\\":\\\"options\\\",\\\"squareCount\\\":\\\"options\\\",\\\"firstSquareCoor\\\":\\\"options\\\",\\\"createDynamicGrid\\\":\\\"options\\\",\\\"clearPrevious\\\":\\\"options\\\",\\\"activateRebus\\\":\\\"options\\\",\\\"rebusEnter\\\":\\\"options\\\",\\\"rebusBlur\\\":\\\"options\\\",\\\"focusEar\\\":\\\"options\\\",\\\"focusFromClueClick\\\":\\\"options\\\",\\\"movePointNaive\\\":\\\"options\\\",\\\"movePointSmart\\\":\\\"options\\\",\\\"switchDirection\\\":\\\"options\\\",\\\"switchDirectionAndFocus\\\":\\\"options\\\",\\\"clearSquareLetter\\\":\\\"options\\\",\\\"moveForwardCurrentDirection\\\":\\\"options\\\",\\\"moveBackwardCurrentDirection\\\":\\\"options\\\",\\\"getAcrossWordStart\\\":\\\"options\\\",\\\"getAcrossWordEnd\\\":\\\"options\\\",\\\"getNextAcrossNum\\\":\\\"options\\\",\\\"getNextAcrossWord\\\":\\\"options\\\",\\\"getPreviousAcrossNum\\\":\\\"options\\\",\\\"getPreviousAcrossWord\\\":\\\"options\\\",\\\"moveAcrossWord\\\":\\\"options\\\",\\\"getDownWordStart\\\":\\\"options\\\",\\\"getDownWordEnd\\\":\\\"options\\\",\\\"isDownWordEnd\\\":\\\"options\\\",\\\"getNextDownNum\\\":\\\"options\\\",\\\"getNextDownWord\\\":\\\"options\\\",\\\"getPreviousDownNum\\\":\\\"options\\\",\\\"getPreviousDownWord\\\":\\\"options\\\",\\\"moveDownWord\\\":\\\"options\\\",\\\"getNextEmptyAcross\\\":\\\"options\\\",\\\"getPreviousEmptyAcross\\\":\\\"options\\\",\\\"getNextEmptyDown\\\":\\\"options\\\",\\\"getPreviousEmptyDown\\\":\\\"options\\\",\\\"moveNextEmpty\\\":\\\"options\\\",\\\"moveAfterInsert\\\":\\\"options\\\",\\\"moveStartWord\\\":\\\"options\\\",\\\"moveEndWord\\\":\\\"options\\\",\\\"clearCheckSquare\\\":\\\"options\\\",\\\"checkSquare\\\":\\\"options\\\",\\\"checkWord\\\":\\\"options\\\",\\\"checkGrid\\\":\\\"options\\\",\\\"revealSquare\\\":\\\"options\\\",\\\"revealWord\\\":\\\"options\\\",\\\"revealGrid\\\":\\\"options\\\",\\\"clearWordLetters\\\":\\\"options\\\",\\\"clearGrid\\\":\\\"options\\\",\\\"clickHandler\\\":\\\"options\\\",\\\"keyHandler\\\":\\\"options\\\",\\\"gridFullCheck\\\":\\\"options\\\",\\\"addKeyEventListener\\\":\\\"options\\\",\\\"removeKeyEventListener\\\":\\\"options\\\"}\"\nimport script from \"./grid.vue?vue&type=script&lang=js\"\nexport * from \"./grid.vue?vue&type=script&lang=js\"\n\nimport \"./grid.vue?vue&type=style&index=0&id=7db67ed5&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-7db67ed5\"\n\nexport default script","<template>\n    <singleClue v-for=\"clue in clues\"\n                :key=\"clue.Num\"\n                :ref=\"clue.Num.toString()+direction\"\n                @primary-clue-focus=\"primaryClueFocusEar($event)\"\n                :clueObject=\"clue\"\n                :direction=\"direction\"\n                :clueFocus=\"clueFocus\"\n                :settingsObject=\"settingsObject\"\n                @clue-click=\"clueClickToAppEar($event)\"\n        ></singleClue>\n</template>\n\n<script>\n import singleClue from './singleClue.vue'\n \n export default {\n     name: 'clues',\n     emits: [\n         'primary-clue-focus-to-app',\n         'primaryClueFocusToApp',\n         'clue-click-to-app',\n         'clueClickToApp'\n     ],\n     components: {\n         singleClue,\n     },\n     \n     props: {\n         clues: Array,\n         direction: String,\n         clueFocus: Object,\n         settingsObject: Object,\n     },\n\n     methods: {\n         primaryClueFocusEar(clueEvent) {\n             this.$emit('primary-clue-focus-to-app', clueEvent)\n         },\n\n         clueClickToAppEar(event) {\n             this.$emit('clue-click-to-app', event)\n         }\n     },\n     \n     updated() {\n         // not all that elegant but ok\n         if (this.$refs[this.clueFocus.primary]) {\n             this.$refs[this.clueFocus.primary].$el.scrollIntoView();\n         } else if (this.$refs[this.clueFocus.secondary]) {\n             this.$refs[this.clueFocus.secondary].$el.scrollIntoView();\n         }\n     }\n }\n</script>\n\n","<template>\n    <p class=\"singleClue\" :style=\"whichFocus\" @click=\"clueClickEar\">\n        {{ clueKey + \": \" + clueObject.Clue }}\n    </p>\n</template>\n\n<script>\n export default {\n     name: 'singleClue',\n     emits: [\n         'primary-clue-focus',\n         'secondary-clue-focus',\n         'clue-click'\n     ],\n     props: {\n         clueObject: Object,\n         direction: String,  // either 'A' or 'D'\n         clueFocus: Object,\n         settingsObject: Object,\n     },\n     data() {\n         return {\n             clueNum: this.clueObject.Num,\n         }\n     },\n     computed: {\n         clueKey() {\n             return this.clueNum.toString() + this.direction;\n         },\n         whichFocus() {\n             //console.log('whichFocus called')\n             //console.log(this.clueFocus)\n             let primaryFocusDirection = this.clueFocus.primary.slice(-1);\n             let primaryFocusNum = Number(this.clueFocus.primary.slice(0, -1));\n             let secondaryFocusDirection = this.clueFocus.secondary.slice(-1);\n             let secondaryFocusNum = Number(this.clueFocus.secondary.slice(0, -1));\n\n             if (this.direction === primaryFocusDirection) {\n                 //console.log('first branch')\n                 if (this.clueNum === primaryFocusNum) {\n                     //console.log('returning primary')\n                     // this emit will be heard in the active clue component\n                     //this.$refs[scrollNum].scrollIntoView()\n                     this.$emit('primary-clue-focus',\n                                {composed: this.clueKey + \": \" + this.clueObject.Clue,\n                                 clueNum: this.clueNum});\n                     return {\n                         backgroundColor: this.settingsObject.selectedTheme.darkBlue,\n                         padding: \"0.3em\",\n                         borderRadius: \"5px\"\n                         //color: this.settingsObject.selectedTheme.fgAlt\n                     }\n                 } else {\n                     return null\n                 }\n             } else if (this.direction === secondaryFocusDirection) {\n                 if (this.clueNum === secondaryFocusNum) {\n                     this.$emit('secondary-clue-focus',\n                                {clueNum: this.clueNum});\n                     return {\n                         backgroundColor: this.settingsObject.selectedTheme.base2,\n                         padding: \"0.3em\",\n                         borderRadius: \"5px\"\n                         //color: this.settingsObject.selectedTheme.fgAlt\n                     }\n                 } else {\n                     return null\n                 }\n             } else {\n                 return null   \n             }\n         }\n     },\n\n     methods: {\n         clueClickEar() {\n             this.$emit('clue-click', {\n                 num: this.clueObject.Num,\n                 direction: this.direction\n             })\n         }\n     }\n }\n</script>\n","import { render } from \"./singleClue.vue?vue&type=template&id=3f154f8e&bindings={\\\"clueObject\\\":\\\"props\\\",\\\"direction\\\":\\\"props\\\",\\\"clueFocus\\\":\\\"props\\\",\\\"settingsObject\\\":\\\"props\\\",\\\"clueNum\\\":\\\"data\\\",\\\"clueKey\\\":\\\"options\\\",\\\"whichFocus\\\":\\\"options\\\",\\\"clueClickEar\\\":\\\"options\\\"}\"\nimport script from \"./singleClue.vue?vue&type=script&lang=js\"\nexport * from \"./singleClue.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./clueContainer.vue?vue&type=template&id=30713e13&bindings={\\\"clues\\\":\\\"props\\\",\\\"direction\\\":\\\"props\\\",\\\"clueFocus\\\":\\\"props\\\",\\\"settingsObject\\\":\\\"props\\\",\\\"primaryClueFocusEar\\\":\\\"options\\\",\\\"clueClickToAppEar\\\":\\\"options\\\"}\"\nimport script from \"./clueContainer.vue?vue&type=script&lang=js\"\nexport * from \"./clueContainer.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n    <div class=\"dropdown\"\n         @mouseover=\"checkMouse = true; checkActive = true\"\n         @mouseleave=\"checkMouse = false; checkActive = false\"\n    >\n        <button class=\"dropbtn\"\n                :style=\"styleToolbar('dropbtncheck')\">Check</button>\n        <div class=\"dropcontent\" :style=\"styleToolbar('dropcontent')\" v-if=\"checkActive\">\n            <div class=\"menuitem\"\n                 @mouseover=\"styleToolbar('menuitemhover')\"\n                 @mouseleave=\"styleToolbar('menuitemleave')\"\n                 @click=\"this.$emit('check-square')\">Square</div>\n            <div class=\"menuitem\" @click=\"this.$emit('check-word')\">Word</div>\n            <div class=\"menuitem\" @click=\"this.$emit('check-grid')\">Grid</div>\n        </div>\n    </div>\n    \n    <div class=\"dropdown\"\n         @mouseover=\"revealMouse = true; revealActive = true\"\n         @mouseleave=\"revealMouse = false; revealActive = false\"\n    >\n        <button class=\"dropbtn\"\n                :style=\"styleToolbar('dropbtnreveal')\">Reveal</button>\n        <div class=\"dropcontent\" :style=\"styleToolbar('dropcontent')\" v-if=\"revealActive\">\n            <div class=\"menuitem\" @click=\"this.$emit('reveal-square')\">Square</div>\n            <div class=\"menuitem\" @click=\"this.$emit('reveal-word')\">Word</div>\n            <div class=\"menuitem\" @click=\"this.$emit('reveal-grid')\">Grid</div>\n        </div>\n    </div>\n    \n    <div class=\"dropdown\"\n         @mouseover=\"clearMouse = true; clearActive = true\"\n         @mouseleave=\"clearMouse = false; clearActive = false\"\n    >\n        <button class=\"dropbtn\"\n                :style=\"styleToolbar('dropbtnclear')\">Clear</button>\n        <div class=\"dropcontent\" :style=\"styleToolbar('dropcontent')\" v-if=\"clearActive\">\n            <div class=\"menuitem\" @click=\"clearStopwatch\">Time</div>\n            <div class=\"menuitem\" @click=\"this.$emit('clear-grid')\">Grid</div>\n        </div>\n    </div>\n    \n    <button class=\"dropbtn\"\n            :style=\"styleToolbar('dropbtnrebus')\"\n            @mouseover=\"rebusMouse = true\"\n            @mouseleave=\"rebusMouse = false\"\n            @click=\"this.$emit('rebus')\">Rebus</button>\n    \n    <div class=\"dropdown\">\n        <button class=\"dropbtn\"\n                :style=\"styleToolbar('dropbtntime')\"\n                @mouseover=\"timeMouse = true\"\n                @mouseleave=\"timeMouse = false\">\n            <stopwatch\n                :isFinishedShow=\"isFinishedShow\"\n                ref=\"stopwatch\">\n            </stopwatch>\n        </button>\n    </div>\n    \n    <div class=\"dropdown settings-button\">\n        <button class=\"dropbtn\"\n                :style=\"styleToolbar('dropbtnsettings')\"\n                @click=\"showSettings\"\n                @mouseover=\"settingsMouse = true\"\n                @mouseleave=\"settingsMouse = false\">\n            Settings\n        </button>\n    </div>\n    \n    <div class=\"overlay-cont\">\n        <transition name=\"modal\">\n            <div v-show=\"isSettingsShow\">\n                <div class=\"overlay\" @click.self=\"hideSettings\">\n                    <div class=\"modal\" :style=\"modalStyle\">\n                        <settings ref=\"settings\"\n                                  @settings=\"this.$emit('settings-to-app', $event)\"\n                                  @puzzle-send=\"this.$emit('puzzle-send-to-app', $event)\"\n                        ></settings>\n                    </div>\n                </div>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<script>\n import stopwatch from './stopwatch.vue'\n import settings from './settings.vue'\n \n export default {\n     name: 'toolbar',\n     \n     components: {\n         stopwatch,\n         settings\n     },\n     \n     props: {\n         currentPoint: Object,\n         isFinishedShow: Boolean,\n         settingsObject: Object\n     },\n     \n     emits: ['check-square',\n             'check-word',\n             'check-grid',\n             'reveal-square',\n             'reveal-word',\n             'reveal-grid',\n             'clear-timer',\n             'clear-grid',\n             'rebus',\n             'settings-to-app',\n             'checkSquare',\n             'checkWord',\n             'checkGrid',\n             'revealSquare',\n             'revealWord',\n             'revealGrid',\n             'clearGrid',\n             'settingsToApp',\n             'puzzle-send-to-app',\n             'puzzleSendToApp',\n             'settings-shown',\n             'settings-hidden',\n             'settingsShown',\n             \"settingsHidden\"\n     ],\n\n     computed: {\n         modalStyle() {\n             return {\n                 backgroundColor: this.settingsObject.selectedTheme.bg\n             }\n         }\n     },\n\n     data() {\n         return {\n             checkActive: false,\n             checkMouse: false,\n             revealActive: false,\n             clearActive: false,\n             revealMouse: false,\n             clearMouse: false,\n             rebusMouse: false,\n             timeMouse: false,\n             settingsMouse: false,\n             isSettingsShow: false,\n         }\n     },\n\n     methods: {\n         // can't implement clickaway elegantly bc i didn't make the dropdowns\n         // a component, so compromise with mouseover/leave\n\n         showSettings() {\n             this.$emit('settings-shown');\n             this.$refs.stopwatch.stopStopwatch();\n             this.isSettingsShow = true;\n         },\n\n         hideSettings() {\n             this.$emit('settings-hidden')\n             this.isSettingsShow = false;\n             this.$refs.stopwatch.startStopwatch();\n         },\n\n         clearStopwatch() {\n             this.$refs.stopwatch.resetStopwatch();\n         },\n\n         styleToolbar(cl) {\n             switch(cl) {\n                 case \"dropbtncheck\":\n                     if (this.checkMouse) {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.base1,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     } else {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.bg,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     }\n                 case \"dropbtnreveal\":\n                     if (this.revealMouse) {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.base1,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     } else {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.bg,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     }\n                 case \"dropbtnclear\":\n                     if (this.clearMouse) {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.base1,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     } else {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.bg,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     }\n                 case \"dropbtnrebus\":\n                     if (this.rebusMouse) {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.base1,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     } else {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.bg,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     }\n                 case \"dropbtntime\":\n                     if (this.timeMouse) {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.base1,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     } else {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.bg,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     }\n                 case \"dropbtnsettings\":\n                     if (this.settingsMouse) {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.base1,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     } else {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.bg,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     }\n                 case \"dropcontent\":\n                     return {\n                         backgroundColor: this.settingsObject.selectedTheme.base1,\n                         color: this.settingsObject.selectedTheme.fg,\n                     }\n             }\n             return null;\n         }\n     },\n }\n</script>\n\n<style scoped>\n .dropbtn {\n     padding: 10px;\n     font-size: 16px;\n     border: none;\n     cursor: pointer;\n     border-radius: 10px;\n     outline: none;\n }\n\n /* Dropdown button on hover & focus */\n .dropbtn:hover {\n     outline: none;\n }\n\n /* The container <div> - needed to position the dropdown content */\n .dropdown {\n     position: relative;\n     display: inline-block;\n     padding-right: 5px;\n }\n\n /* Dropdown Content (Hidden by Default) */\n .dropcontent {\n     position: absolute;\n     width: 60px;\n     padding: 5px;\n     box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n     z-index: 1;\n     display: block;\n     border-radius: 10px;\n }\n\n .settings-button {\n     float: right;\n }\n\n .menuitem:hover {\n     border-radius: 5px;\n     padding-left: 1px;\n     cursor: pointer;\n }\n .modal {\n     width: 600px;\n     margin: 0px auto;\n     padding: 20px;\n     border-radius: 5px;\n     box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n     transition: all 0.2s ease-in;\n     /* font-family: Helvetica, Arial, sans-serif; */\n }\n .fadeIn-enter {\n     opacity: 0;\n }\n\n .fadeIn-leave-active {\n     opacity: 0;\n     transition: all 0.2s step-end;\n }\n\n .fadeIn-enter .modal,\n .fadeIn-leave-active.modal {\n     transform: scale(1.1);\n }\n \n .overlay-cont {\n     position: absolute;\n }\n\n .overlay {\n     position: absolute;\n     margin-top: -2.5em;\n     display: flex;\n     justify-content: center;\n     align-items: center;\n     border-radius: 5px;\n     max-width: 870px;\n     max-height: 600px;\n     background: #00000094;\n     z-index: 999;\n     transition: opacity 0.2s ease;\n }\n</style>\n","<template>\n    <span @click=\"toggleStopwatch\">{{ formattedTime }}</span>\n</template>\n\n<script>\n export default {\n     name: 'stopwatch',\n     props: {\n         isFinishedShow: Boolean,\n     },\n\n     data() {\n         return {\n             timerInterval: null,\n             isStopwatchActive: true,\n             countedTime: 0  // in seconds\n         }\n     },\n\n     computed: {\n         formattedTime() {\n             let minutes = Math.floor(this.countedTime / 60);\n             let seconds = this.countedTime % 60;\n             if (seconds < 10) {\n                 seconds = `0${seconds}`\n             }\n             return `${minutes}:${seconds}`\n         }\n     },\n     \n     methods: {\n         startTimer() {\n             this.timerInterval = setInterval(this.incrementTimer, 1000);\n         },\n\n         incrementTimer() {\n             if (this.isStopwatchActive) {\n                 this.countedTime += 1;\n             }\n         },\n\n         toggleStopwatch() {\n             this.isStopwatchActive = !this.isStopwatchActive;\n         },\n\n         stopStopwatch() {\n             this.isStopwatchActive = false;\n         },\n\n         startStopwatch() {\n             this.isStopwatchActive = true;\n         },\n\n         resetStopwatch() {\n             this.countedTime = 0;\n         },\n\n         getFormattedTime() {\n             return this.formattedTime;\n         }\n     },\n\n     mounted() {\n         this.startTimer();\n     }\n }\n</script>\n\n<style scoped>\n .span {\n     padding: 10px;\n     font-size: 16px;\n     border: none;\n     cursor: pointer;\n     text-align: center;\n }\n</style>\n","import { render } from \"./stopwatch.vue?vue&type=template&id=5362f1b9&scoped=true&bindings={\\\"isFinishedShow\\\":\\\"props\\\",\\\"timerInterval\\\":\\\"data\\\",\\\"isStopwatchActive\\\":\\\"data\\\",\\\"countedTime\\\":\\\"data\\\",\\\"formattedTime\\\":\\\"options\\\",\\\"startTimer\\\":\\\"options\\\",\\\"incrementTimer\\\":\\\"options\\\",\\\"toggleStopwatch\\\":\\\"options\\\",\\\"stopStopwatch\\\":\\\"options\\\",\\\"startStopwatch\\\":\\\"options\\\",\\\"resetStopwatch\\\":\\\"options\\\",\\\"getFormattedTime\\\":\\\"options\\\"}\"\nimport script from \"./stopwatch.vue?vue&type=script&lang=js\"\nexport * from \"./stopwatch.vue?vue&type=script&lang=js\"\n\nimport \"./stopwatch.vue?vue&type=style&index=0&id=5362f1b9&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-5362f1b9\"\n\nexport default script","<template>\n    <div class=\"settings-container\" :style=\"settingsContStyle\">\n        <div :style=\"headerStyle\">\n            <b>Option</b>\n        </div>\n        <div :style=\"headerStyle\">\n            <b>Current value</b>\n        </div>\n        <div :style=\"headerStyle\">\n            <b>Customize</b>\n        </div>\n        \n        <div>\n            Theme\n        </div>\n        <div>\n            {{ selectTheme }}\n        </div>\n        <div>\n            <select v-model=\"selectTheme\" :value=\"'doom_one_light'\">\n                <option value=\"doom_one_light\">doom_one_light</option>\n                <option value=\"doom_one\">doom_one</option>\n                <option value=\"doom_zenburn\">doom_zenburn</option>\n                <option value=\"doom_wilmersdorf\">doom_wilmersdorf</option>\n                <option value=\"doom_vibrant\">doom_vibrant</option>\n                <option value=\"doom_spacegrey\">doom_spacegrey</option>\n                <option value=\"doom_solarized\">doom_solarized</option>\n                <option value=\"doom_solarized_dark\">doom_solarized_dark</option>\n                <option value=\"doom_snazzy\">doom_snazzy</option>\n                <option value=\"doom_rouge\">doom_rouge</option>\n                <option value=\"doom_peacock\">doom_peacock</option>\n                <option value=\"doom_palenight\">doom_palenight</option>\n                <option value=\"doom_outrun_electric\">doom_outrun_electric</option>\n                <option value=\"doom_opera\">doom_opera</option>\n                <option value=\"doom_opera_light\">doom_opera_light</option>\n                <option value=\"doom_old_hope\">doom_old_hope</option>\n                <option value=\"doom_oceanic_next\">doom_oceanic_next</option>\n                <option value=\"doom_nord\">doom_nord</option>\n                <option value=\"doom_nord_light\">doom_nord_light</option>\n                <option value=\"doom_moonlight\">doom_moonlight</option>\n                <option value=\"doom_monokai_pro\">doom_monokai_pro</option>\n                <option value=\"doom_molokai\">doom_molokai</option>\n                <option value=\"doom_miramare\">doom_miramare</option>\n                <option value=\"doom_material\">doom_material</option>\n                <option value=\"doom_manegram\">doom_manegram</option>\n                <option value=\"doom_laserwave\">doom_laserwave</option>\n                <option value=\"doom_horizon\">doom_horizon</option>\n                <option value=\"doom_henna\">doom_henna</option>\n                <option value=\"doom_fairy_floss\">doom_fairy_floss</option>\n                <option value=\"doom_ephemeral\">doom_ephemeral</option>\n                <option value=\"doom_dracula\">doom_dracula</option>\n                <option value=\"doom_dark_plus\">doom_dark_plus</option>\n                <option value=\"doom_city_lights\">doom_city_lights</option>\n                <option value=\"doom_challenger_dark\">doom_challenger_dark</option>\n                <option value=\"doom_acario_light\">doom_acario_light</option>\n                <option value=\"doom_acario_dark\">doom_acario_dark</option>\n                <option value=\"doom_iosvkem\">doom_iosvkem</option>\n            </select>\n        </div>\n        \n        <div>\n            Move right by square\n        </div>\n        <div>\n            <div v-for=\"bind in moveRightSquare\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveRightSquare, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveRightSquare = moveRightSquare.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Move left by square\n        </div>\n        <div>\n            <div v-for=\"bind in moveLeftSquare\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveLeftSquare, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveLeftSquare = moveLeftSquare.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Move up by square\n        </div>\n        <div>\n            <div v-for=\"bind in moveUpSquare\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveUpSquare, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveUpSquare = moveUpSquare.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Move down by square\n        </div>\n        <div>\n            <div v-for=\"bind in moveDownSquare\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveDownSquare, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveDownSquare = moveDownSquare.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n\n        <div>\n            Delete square\n        </div>\n        <div>\n            <div v-for=\"bind in deleteSquare\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(deleteSquare, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"deleteSquare = deleteSquare.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Move right by word\n        </div>\n        <div>\n            <div v-for=\"bind in moveRightWord\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveRightWord, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveRightWord = moveRightWord.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Move left by word\n        </div>\n        <div>\n            <div v-for=\"bind in moveLeftWord\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveLeftWord, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveLeftWord = moveLeftWord.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        \n        <div>\n            Move to start of word\n        </div>\n        <div>\n            <div v-for=\"bind in moveStartWord\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveStartWord, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveStartWord = moveStartWord.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Move to end of word\n        </div>\n        <div>\n            <div v-for=\"bind in moveEndWord\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveEndWord, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveEndWord = moveEndWord.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Delete rest of word\n        </div>\n        <div>\n            <div v-for=\"bind in deleteWord\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(deleteWord, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"deleteWord = deleteWord.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Switch direction\n        </div>\n        <div>\n            <div v-for=\"bind in switchDirection\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(switchDirection, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"switchDirection = switchDirection.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div class=\"apply-settings\" @click=\"emitSettings\">\n            <button class=\"apply-settings\" :style=\"applyButtonStyle\">Apply</button>\n        </div>\n    </div>\n</template>\n\n<script>\n import settingsInput from './settingsInput.vue'\n \n import doom_zenburn from '../assets/doom_zenburn.json'\n import doom_wilmersdorf from '../assets/doom_wilmersdorf.json'\n import doom_vibrant from '../assets/doom_vibrant.json'\n import doom_spacegrey from '../assets/doom_spacegrey.json'\n import doom_solarized from '../assets/doom_solarized.json'\n import doom_solarized_dark from '../assets/doom_solarized_dark.json'\n import doom_snazzy from '../assets/doom_snazzy.json'\n import doom_rouge from '../assets/doom_rouge.json'\n import doom_peacock from '../assets/doom_peacock.json'\n import doom_palenight from '../assets/doom_palenight.json'\n import doom_outrun_electric from '../assets/doom_outrun_electric.json'\n import doom_opera from '../assets/doom_opera.json'\n import doom_opera_light from '../assets/doom_opera_light.json'\n import doom_one from '../assets/doom_one.json'\n import doom_one_light from '../assets/doom_one_light.json'\n import doom_old_hope from '../assets/doom_old_hope.json'\n import doom_oceanic_next from '../assets/doom_oceanic_next.json'\n import doom_nord from '../assets/doom_nord.json'\n import doom_nord_light from '../assets/doom_nord_light.json'\n import doom_moonlight from '../assets/doom_moonlight.json'\n import doom_monokai_pro from '../assets/doom_monokai_pro.json'\n import doom_molokai from '../assets/doom_molokai.json'\n import doom_miramare from '../assets/doom_miramare.json'\n import doom_material from '../assets/doom_material.json'\n import doom_manegram from '../assets/doom_manegram.json'\n import doom_laserwave from '../assets/doom_laserwave.json'\n import doom_horizon from '../assets/doom_horizon.json'\n import doom_henna from '../assets/doom_henna.json'\n import doom_fairy_floss from '../assets/doom_fairy_floss.json'\n import doom_ephemeral from '../assets/doom_ephemeral.json'\n import doom_dracula from '../assets/doom_dracula.json'\n import doom_dark_plus from '../assets/doom_dark_plus.json'\n import doom_city_lights from '../assets/doom_city_lights.json'\n import doom_challenger_dark from '../assets/doom_challenger_dark.json'\n import doom_acario_light from '../assets/doom_acario_light.json'\n import doom_acario_dark from '../assets/doom_acario_dark.json'\n import doom_iosvkem from '../assets/doom_iosvkem.json' \n \n export default {\n     name: 'settings',\n\n     components: {\n         settingsInput\n     },\n\n     emits: ['settings', 'puzzle-send'],\n\n     data() {\n         return {\n             selectTheme: \"doom_ephemeral\",\n             selectedTheme: {\n                 // this is here so that app doesn't throw an error. but\n                 // you just have to change \"selectTheme\" to change the\n                 // default theme\n                 \"bg\": \"#fafafa\",\n                 \"bgAlt\": \"#f0f0f0\",\n                 \"base0\": \"#f0f0f0\",\n                 \"base1\": \"#e7e7e7\",\n                 \"base2\": \"#dfdfdf\",\n                 \"base3\": \"#c6c7c7\",\n                 \"base4\": \"#9ca0a4\",\n                 \"base5\": \"#383a42\",\n                 \"base6\": \"#202328\",\n                 \"base7\": \"#1c1f24\",\n                 \"base8\": \"#1b2229\",\n                 \"fg\": \"#383a42\",\n                 \"fgAlt\": \"#c6c7c7\",\n                 \"red\": \"#e45649\",\n                 \"orange\": \"#da8548\",\n                 \"green\": \"#50a14f\",\n                 \"teal\": \"#4db5bd\",\n                 \"yellow\": \"#986801\",\n                 \"blue\": \"#4078f2\",\n                 \"darkBlue\": \"#a0bcf8\",\n                 \"magenta\": \"#a626a4\",\n                 \"violet\": \"#b751b6\",\n                 \"cyan\": \"#0184bc\",\n                 \"darkCyan\": \"#005478\"\n             },\n             uploadJson: null,\n             moveRightSquare: [\"ArrowRight\", \"Ctrl-f\"],\n             moveLeftSquare: [\"ArrowLeft\", \"Ctrl-b\"],\n             moveUpSquare: [\"ArrowUp\", \"Ctrl-p\"],\n             moveDownSquare: [\"ArrowDown\", \"Ctrl-n\"],\n             deleteSquare: [\"Backspace\", \"Ctrl-d\"],\n             moveRightWord: [\"Tab\", \"Enter\"],\n             moveLeftWord: [\"Shift-Tab\", \"Shift-Enter\"],\n             moveStartWord: [\"Ctrl-a\"],\n             moveEndWord: [\"Ctrl-e\"],\n             deleteWord: [\"Ctrl-k\"],\n             switchDirection: [\"Space\"],\n         }\n     },\n     \n     methods: {\n         parseBind(bindString) {\n             // parse bindString into a conditional statement that returns true if event corresponds to bindString\n             // if bindString represents one key, it must be one of legalSingles\n             // if bindString represents two keys, the first must be a modifier in legalMods and the second\n             // must either be a single letter or be in the legalSingles\n             let split = bindString.split('-');\n             let legalSingles = [\"Tab\", \"Space\", \"Backspace\", \"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\", \"Enter\"];\n             let legalMods = [\"Ctrl\", \"Shift\"]\n             if (split.length === 1) {\n                 // if there's no hyphen, and the bindString must be Tab, Space, Backspace, or an Arrow\n                 if (split[0] === \"Space\") {\n                     return \"event.key === ' ' && event.ctrlKey === false && event.shiftKey === false\";\n                 } else if (legalSingles.includes(split[0])) {\n                     // return a function that checks if event.key is the same as the bind\n                     return `event.key === \"${split[0]}\" && event.ctrlKey === false && event.shiftKey === false`\n                 } else {\n                     console.log(\"parseBind: invalid binding\");\n                     return;\n                 }\n             } else if (split.length === 2) {\n                 // if there's a modifier\n                 if (legalMods.includes(split[0]) && (legalSingles.includes(split[1]) || /^\\w$/.test(split[1]))) {\n                     // validation: the first element must be in legalMods; the second must\n                     // either be in legalSingles or be a single letter\n                     return `event.${split[0].toLowerCase()}Key === true && event.key === \"${split[1]}\"`;\n                 } else {\n                     console.log(\"parseBind: invalid binding\");\n                     return;\n                 }\n             } else {\n                 console.log(\"parseBind: invalid binding\");\n                 return;\n             }\n         },\n\n         parseBindList(bindList) {\n             // return a function that returns true if event corresponds to one\n             // of the bindStrings in bindList\n             let testString = \"\";\n             let thisString = \"\";\n             for (let i = 0; i < bindList.length-1; i++) {\n                 // add the parsed element of bindList to testString, except the last one\n                 thisString = this.parseBind(bindList[i]);\n                 testString += `(${thisString}) || `;\n             }\n             // do the last element (no || after)\n             thisString = this.parseBind(bindList[bindList.length-1]);\n             testString += `(${thisString})`;\n             return Function('event', `return ${testString}`);\n         },\n\n         createBindFunctionObject() {\n             // hardcoded for readability. return an object with keys equal to\n             // various grid operations and values equal to the function testing\n             // if this event is a key in that key's bindList\n             return {\n                 moveRightSquare: this.parseBindList(this.moveRightSquare),\n                 moveLeftSquare: this.parseBindList(this.moveLeftSquare),\n                 moveUpSquare: this.parseBindList(this.moveUpSquare),\n                 moveDownSquare: this.parseBindList(this.moveDownSquare),\n                 deleteSquare: this.parseBindList(this.deleteSquare),\n                 moveRightWord: this.parseBindList(this.moveRightWord),\n                 moveLeftWord: this.parseBindList(this.moveLeftWord),\n                 // moveUpWord: this.parseBindList(this.moveUpWord),\n                 // moveDownWord: this.parseBindList(this.moveDownWord),\n                 moveStartWord: this.parseBindList(this.moveStartWord),\n                 moveEndWord: this.parseBindList(this.moveEndWord),\n                 deleteWord: this.parseBindList(this.deleteWord),\n                 switchDirection: this.parseBindList(this.switchDirection),\n             }\n         },\n\n         getThemeObject(theme) {\n             switch(theme) {\n                 case \"doom_zenburn\":\n                     this.selectedTheme = doom_zenburn;\n                     break;\n                 case \"doom_wilmersdorf\":\n                     this.selectedTheme = doom_wilmersdorf;\n                     break;\n                 case \"doom_vibrant\":\n                     this.selectedTheme = doom_vibrant;\n                     break;\n                 case \"doom_spacegrey\":\n                     this.selectedTheme = doom_spacegrey;\n                     break;\n                 case \"doom_solarized\":\n                     this.selectedTheme = doom_solarized;\n                     break;\n                 case \"doom_solarized_dark\":\n                     this.selectedTheme = doom_solarized_dark;\n                     break;\n                 case \"doom_snazzy\":\n                     this.selectedTheme = doom_snazzy;\n                     break;\n                 case \"doom_rouge\":\n                     this.selectedTheme = doom_rouge;\n                     break;\n                 case \"doom_peacock\":\n                     this.selectedTheme = doom_peacock;\n                     break;\n                 case \"doom_palenight\":\n                     this.selectedTheme = doom_palenight;\n                     break;\n                 case \"doom_outrun_electric\":\n                     this.selectedTheme = doom_outrun_electric;\n                     break;\n                 case \"doom_opera\":\n                     this.selectedTheme = doom_opera;\n                     break;\n                 case \"doom_opera_light\":\n                     this.selectedTheme = doom_opera_light;\n                     break;\n                 case \"doom_one\":\n                     this.selectedTheme = doom_one;\n                     break;\n                 case \"doom_one_light\":\n                     this.selectedTheme = doom_one_light;\n                     break;\n                 case \"doom_old_hope\":\n                     this.selectedTheme = doom_old_hope;\n                     break;\n                 case \"doom_oceanic_next\":\n                     this.selectedTheme = doom_oceanic_next;\n                     break;\n                 case \"doom_nord\":\n                     this.selectedTheme = doom_nord;\n                     break;\n                 case \"doom_nord_light\":\n                     this.selectedTheme = doom_nord_light;\n                     break;\n                 case \"doom_moonlight\":\n                     this.selectedTheme = doom_moonlight;\n                     break;\n                 case \"doom_monokai_pro\":\n                     this.selectedTheme = doom_monokai_pro;\n                     break;\n                 case \"doom_molokai\":\n                     this.selectedTheme = doom_molokai;\n                     break;\n                 case \"doom_miramare\":\n                     this.selectedTheme = doom_miramare;\n                     break;\n                 case \"doom_material\":\n                     this.selectedTheme = doom_material;\n                     break;\n                 case \"doom_manegram\":\n                     this.selectedTheme = doom_manegram;\n                     break;\n                 case \"doom_laserwave\":\n                     this.selectedTheme = doom_laserwave;\n                     break;\n                 case \"doom_horizon\":\n                     this.selectedTheme = doom_horizon;\n                     break;\n                 case \"doom_henna\":\n                     this.selectedTheme = doom_henna;\n                     break;\n                 case \"doom_fairy_floss\":\n                     this.selectedTheme = doom_fairy_floss;\n                     break;\n                 case \"doom_ephemeral\":\n                     this.selectedTheme = doom_ephemeral;\n                     break;\n                 case \"doom_dracula\":\n                     this.selectedTheme = doom_dracula;\n                     break;\n                 case \"doom_dark_plus\":\n                     this.selectedTheme = doom_dark_plus;\n                     break;\n                 case \"doom_city_lights\":\n                     this.selectedTheme = doom_city_lights;\n                     break;\n                 case \"doom_challenger_dark\":\n                     this.selectedTheme = doom_challenger_dark;\n                     break;\n                 case \"doom_acario_light\":\n                     this.selectedTheme = doom_acario_light;\n                     break;\n                 case \"doom_acario_dark\":\n                     this.selectedTheme = doom_acario_dark;\n                     break;\n                 case \"doom_iosvkem\":\n                     this.selectedTheme = doom_iosvkem;\n                     break;\n             }\n             return;\n         },\n\n         createSettingsObject() {\n             this.getThemeObject(this.selectTheme);\n             return {\n                 selectedTheme: this.selectedTheme,\n                 upload: this.uploadJson,\n                 bindFunctionObject: this.createBindFunctionObject()\n             }\n         },\n\n         emitSettings() {\n             this.$emit('settings', this.createSettingsObject());\n         },\n\n         removeBind(bindArray, bindItem) {\n             let removeIndex = bindArray.indexOf(bindItem);\n             if (removeIndex > -1) {\n                 bindArray.splice(removeIndex, 1);\n             }\n             return bindArray;\n         }\n     },\n\n     computed: {\n         settingsContStyle() {\n             return {\n                 color: this.selectedTheme.fg,\n             }\n         },\n\n         headerStyle() {\n             return {\n                 color: this.selectedTheme.green,\n             }\n         },\n         \n         removeBindStyle() {\n             return {\n                 '--background-color-hover': this.selectedTheme.red,\n             }\n         },\n         \n         applyButtonStyle() {\n             return {\n                 backgroundColor: this.selectedTheme.base1,\n                 color: this.selectedTheme.fg\n             }\n         }\n     },\n\n     mounted() {\n         this.emitSettings()\n     }\n }\n</script>\n\n<style scoped>\n .settings-container {\n     display: grid;\n     grid-template-columns: 1.5fr 1.5fr 1fr;\n     grid-gap: 0.5em;\n }\n .apply-settings {\n     grid-column: 3;\n     justify-self: right;\n     padding-left: 10px;\n     padding-right: 10px;\n     padding-top: 5px;\n     padding-bottom: 5px;\n     font-size: 16px;\n     border: none;\n     cursor: pointer;\n     border-radius: 5px;\n     outline: none;\n }\n .bind-item {\n     cursor: pointer;\n     border-radius: 5px;\n }\n .bind-item:hover {\n     background-color: var(--background-color-hover);\n     text-decoration: line-through;\n }\n</style>\n","<template>\n    <input type=\"text\"\n           v-model=\"keyString\"\n           @keydown.enter=\"enterKeyString\"\n    />\n</template>\n\n<script>\n export default {\n     name: 'settingsInput',\n\n     emits: ['valid-keybind'],\n\n     data() {\n         return {\n             keyString: '',\n         }\n     },\n\n     methods: {\n         enterKeyString() {\n             let bindArray = this.validateKeyString(this.keyString)\n             if (bindArray !== null) {\n                 this.$emit('valid-keybind', bindArray);\n                 this.keyString = '';\n             } else {\n                 this.keyString=\"invalid binding!\"\n             }\n         },\n\n         isValidSingleKeyString(keyString) {\n             // return true if keyString (a _single_ binding) is a valid binding\n             let split = keyString.split('-');\n             let legalSingles = [\"Tab\", \"Space\", \"Backspace\", \"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\", \"Enter\"];\n             let legalMods = [\"Ctrl\", \"Shift\"];\n             if (split.length === 1) {\n                 return legalSingles.includes(split[0])\n             } else if (split.length === 2) {\n                 return (legalMods.includes(split[0]) && (legalSingles.includes(split[1]) || /^\\w$/.test(split[1])))\n             } else {\n                 return false\n             }\n         },\n\n         validateKeyString(multiKeyString) {\n             // return array of binds (string) if _all_ the bindings in the\n             // comma-seperated list multiKeyString are valid\n             let split = multiKeyString.split(',');\n             for (let i=0; i < split.length; i++) {\n                 if (!this.isValidSingleKeyString(split[i])) {\n                     return null\n                 }\n             }\n             return split\n         }\n     }\n }\n</script>\n","import { render } from \"./settingsInput.vue?vue&type=template&id=3585e9ba&bindings={\\\"keyString\\\":\\\"data\\\",\\\"enterKeyString\\\":\\\"options\\\",\\\"isValidSingleKeyString\\\":\\\"options\\\",\\\"validateKeyString\\\":\\\"options\\\"}\"\nimport script from \"./settingsInput.vue?vue&type=script&lang=js\"\nexport * from \"./settingsInput.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./settings.vue?vue&type=template&id=c68b5746&scoped=true&bindings={\\\"selectTheme\\\":\\\"data\\\",\\\"selectedTheme\\\":\\\"data\\\",\\\"uploadJson\\\":\\\"data\\\",\\\"moveRightSquare\\\":\\\"data\\\",\\\"moveLeftSquare\\\":\\\"data\\\",\\\"moveUpSquare\\\":\\\"data\\\",\\\"moveDownSquare\\\":\\\"data\\\",\\\"deleteSquare\\\":\\\"data\\\",\\\"moveRightWord\\\":\\\"data\\\",\\\"moveLeftWord\\\":\\\"data\\\",\\\"moveStartWord\\\":\\\"data\\\",\\\"moveEndWord\\\":\\\"data\\\",\\\"deleteWord\\\":\\\"data\\\",\\\"switchDirection\\\":\\\"data\\\",\\\"parseBind\\\":\\\"options\\\",\\\"parseBindList\\\":\\\"options\\\",\\\"createBindFunctionObject\\\":\\\"options\\\",\\\"getThemeObject\\\":\\\"options\\\",\\\"createSettingsObject\\\":\\\"options\\\",\\\"emitSettings\\\":\\\"options\\\",\\\"removeBind\\\":\\\"options\\\",\\\"settingsContStyle\\\":\\\"options\\\",\\\"headerStyle\\\":\\\"options\\\",\\\"removeBindStyle\\\":\\\"options\\\",\\\"applyButtonStyle\\\":\\\"options\\\"}\"\nimport script from \"./settings.vue?vue&type=script&lang=js\"\nexport * from \"./settings.vue?vue&type=script&lang=js\"\n\nimport \"./settings.vue?vue&type=style&index=0&id=c68b5746&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-c68b5746\"\n\nexport default script","import { render } from \"./toolbar.vue?vue&type=template&id=2cb1647c&scoped=true&bindings={\\\"currentPoint\\\":\\\"props\\\",\\\"isFinishedShow\\\":\\\"props\\\",\\\"settingsObject\\\":\\\"props\\\",\\\"modalStyle\\\":\\\"options\\\",\\\"checkActive\\\":\\\"data\\\",\\\"checkMouse\\\":\\\"data\\\",\\\"revealActive\\\":\\\"data\\\",\\\"clearActive\\\":\\\"data\\\",\\\"revealMouse\\\":\\\"data\\\",\\\"clearMouse\\\":\\\"data\\\",\\\"rebusMouse\\\":\\\"data\\\",\\\"timeMouse\\\":\\\"data\\\",\\\"settingsMouse\\\":\\\"data\\\",\\\"isSettingsShow\\\":\\\"data\\\",\\\"showSettings\\\":\\\"options\\\",\\\"hideSettings\\\":\\\"options\\\",\\\"clearStopwatch\\\":\\\"options\\\",\\\"styleToolbar\\\":\\\"options\\\"}\"\nimport script from \"./toolbar.vue?vue&type=script&lang=js\"\nexport * from \"./toolbar.vue?vue&type=script&lang=js\"\n\nimport \"./toolbar.vue?vue&type=style&index=0&id=2cb1647c&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-2cb1647c\"\n\nexport default script","import { render } from \"./greenpaint.vue?vue&type=template&id=6203eab1&bindings={\\\"puzzledata\\\":\\\"props\\\",\\\"puzzle\\\":\\\"data\\\",\\\"gridKey\\\":\\\"data\\\",\\\"acrossClueContKey\\\":\\\"data\\\",\\\"downClueContKey\\\":\\\"data\\\",\\\"clueFocus\\\":\\\"data\\\",\\\"activeClue\\\":\\\"data\\\",\\\"currentPoint\\\":\\\"data\\\",\\\"gridFullMessage\\\":\\\"data\\\",\\\"isFinishedShow\\\":\\\"data\\\",\\\"settingsObject\\\":\\\"data\\\",\\\"toolbarCSS\\\":\\\"options\\\",\\\"activeClueCSS\\\":\\\"options\\\",\\\"appStyle\\\":\\\"options\\\",\\\"clueContStyle\\\":\\\"options\\\",\\\"modalStyle\\\":\\\"options\\\",\\\"bylineStyle\\\":\\\"options\\\",\\\"squareFocusToAppEar\\\":\\\"options\\\",\\\"primaryClueFocusToAppEar\\\":\\\"options\\\",\\\"checkEar\\\":\\\"options\\\",\\\"gridFullEar\\\":\\\"options\\\",\\\"clueClickToAppEar\\\":\\\"options\\\"}\"\nimport script from \"./greenpaint.vue?vue&type=script&lang=js\"\nexport * from \"./greenpaint.vue?vue&type=script&lang=js\"\n\nimport \"./greenpaint.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=084a8afc&bindings={\\\"puzzleData\\\":\\\"data\\\",\\\"loaded\\\":\\\"data\\\",\\\"loading\\\":\\\"data\\\",\\\"uploadWait\\\":\\\"data\\\",\\\"getPuzzleData\\\":\\\"options\\\",\\\"processFile\\\":\\\"options\\\",\\\"processJson\\\":\\\"options\\\",\\\"processPuz\\\":\\\"options\\\"}\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./toolbar.vue?vue&type=style&index=0&id=2cb1647c&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./greenpaint.vue?vue&type=style&index=0&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./settings.vue?vue&type=style&index=0&id=c68b5746&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./stopwatch.vue?vue&type=style&index=0&id=5362f1b9&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./square.vue?vue&type=style&index=0&id=677a2061&scoped=true&lang=css\""],"sourceRoot":""}