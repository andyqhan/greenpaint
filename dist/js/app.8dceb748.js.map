{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/toolbar.vue?3e4f","webpack:///./src/components/settings.vue?03e0","webpack:///./src/components/stopwatch.vue?8a13","webpack:///./src/App.vue","webpack:///./src/components/grid.vue","webpack:///./src/components/square.vue","webpack:///./src/components/square.vue?21a4","webpack:///./src/components/grid.vue?e31f","webpack:///./src/components/clueContainer.vue","webpack:///./src/components/singleClue.vue","webpack:///./src/components/singleClue.vue?e99b","webpack:///./src/components/clueContainer.vue?40ea","webpack:///./src/components/toolbar.vue","webpack:///./src/components/stopwatch.vue","webpack:///./src/components/stopwatch.vue?3d4e","webpack:///./src/components/settings.vue","webpack:///./src/components/settingsInput.vue","webpack:///./src/components/settingsInput.vue?8afa","webpack:///./src/components/settings.vue?d81e","webpack:///./src/components/toolbar.vue?b6b1","webpack:///./src/App.vue?dfb6","webpack:///./src/main.js","webpack:///./src/App.vue?4fbd","webpack:///./src/components/grid.vue?1151","webpack:///./src/components/square.vue?f15f"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","style","appStyle","isFinishedShow","modalStyle","gridFullMessage","toolbarCSS","ref","currentPoint","checkEar","$refs","grid","revealSquare","revealWord","revealGrid","clearGrid","activateRebus","settingsObject","$event","setPuzzle","removeKeyEventListener","addKeyEventListener","activeClueCSS","activeClue","squareFocusToAppEar","gridFullEar","gridObject","puzzleGrid","cluesAcross","cluesDown","rebusObj","gridKey","clueContStyle","primaryClueFocusToAppEar","clueFocus","clues","direction","clueClickToAppEar","acrossClueContKey","downClueContKey","bylineStyle","puzzleTitle","puzzleAuthor","puzzleCopyright","currentSquaresFilled","squareCount","gridFullCheck","cssGridVars","staticGrid","row","row_index","cssRowVars","cell","cell_index","clickHandler","rebusEnter","rebusBlur","correctLetter","isBlock","isCircled","isRebus","isWordStartAcross","isWordStartDown","acrossNum","downNum","currentLetter","dynamicGrid","currentDirection","x","y","isPoint","isPrimarySelect","isSecondarySelect","isCorrect","isIncorrect","isRebusActive","isLeft","isRight","isTop","isBot","tabindex","classObject","squareStyle","selectSquare","keyHandler","cluenumStyle","cluenum","cx","cy","stroke","selectedTheme","fgAlt","stroke-width","stroke-opacity","fill-opacity","currentLetterStyle","rebusInput","$emit","type","props","Number","String","Boolean","emits","created","this","$watch","focusRebus","immediate","deep","computed","block","circled","rebus","primarySelect","secondarySelect","color","fg","blue","borderColor","red","styleObj","darkBlue","base2","green","methods","event","toLowerCase","letter","toUpperCase","$nextTick","focus","render","__scopeId","components","square","Array","previousSelectAcross","previousSelectDown","previousPoint","createDynamicGrid","createRebusObj","codeList","Codes","split","codeObj","codeIn","thisCode","outputGrid","currentWordNum","thisRowArray","char","thisCell","isNaN","toString","parseInt","count","iY","iX","firstSquareCoor","reCreateDynamicGrid","console","log","clearPrevious","ai","di","focusEar","eventX","eventY","primaryDirection","whileX","whileY","squareFocusEvent","focusFromClueClick","num","movePointNaive","targetY","targetX","movePointSmart","switchDirection","targetX2","moveAcrossWord","switchDirectionAndFocus","clearSquareLetter","moveForwardCurrentDirection","moveBackwardCurrentDirection","getAcrossWordStart","currentAcrossNum","getAcrossWordEnd","getNextAcrossNum","Num","clueIndex","getNextAcrossWord","getPreviousAcrossNum","getPreviousAcrossWord","nextWordStart","getDownWordStart","currentDownNum","getDownWordEnd","isDownWordEnd","getNextDownNum","getNextDownWord","currentDownStart","getPreviousDownNum","getPreviousDownWord","moveDownWord","targetWordStart","getNextEmptyAcross","getNextEmptyDown","nextDown","moveNextEmpty","nextEmpty","moveStartWord","target","moveEndWord","clearCheckSquare","checkSquare","checkWord","wordStart","wordEnd","checkGrid","clearWordLetters","preventDefault","bindFunctionObject","moveRightSquare","moveLeftSquare","moveUpSquare","moveDownSquare","deleteSquare","moveRightWord","moveLeftWord","deleteWord","test","addEventListener","removeEventListener","mounted","clue","primaryClueFocusEar","clueObject","whichFocus","clueClickEar","clueKey","Clue","clueNum","primaryFocusDirection","primary","primaryFocusNum","secondaryFocusDirection","secondary","secondaryFocusNum","composed","backgroundColor","padding","borderRadius","singleClue","clueEvent","updated","scrollClue","$el","scrollIntoView","behavior","checkMouse","checkActive","styleToolbar","revealMouse","revealActive","clearMouse","clearActive","clearStopwatch","rebusMouse","timeMouse","showSettings","settingsMouse","hideSettings","isSettingsShow","toggleStopwatch","formattedTime","timerInterval","isStopwatchActive","countedTime","minutes","Math","floor","seconds","startTimer","setInterval","incrementTimer","stopStopwatch","startStopwatch","resetStopwatch","settingsContStyle","headerStyle","selectTheme","removeBind","removeBindStyle","concat","emitSettings","applyButtonStyle","keyString","enterKeyString","bindArray","validateKeyString","isValidSingleKeyString","legalSingles","legalMods","includes","multiKeyString","settingsInput","uploadJson","parseBind","bindString","parseBindList","bindList","testString","thisString","Function","createBindFunctionObject","getThemeObject","theme","doom_zenburn","doom_wilmersdorf","doom_vibrant","doom_spacegrey","doom_solarized","doom_solarized_dark","doom_snazzy","doom_rouge","doom_peacock","doom_palenight","doom_outrun_electric","doom_opera","doom_opera_light","doom_one","doom_one_light","doom_old_hope","doom_oceanic_next","doom_nord","doom_nord_light","doom_moonlight","doom_monokai_pro","doom_molokai","doom_miramare","doom_material","doom_manegram","doom_laserwave","doom_horizon","doom_henna","doom_fairy_floss","doom_ephemeral","doom_dracula","doom_dark_plus","doom_city_lights","doom_challenger_dark","doom_acario_light","doom_acario_dark","doom_iosvkem","createSettingsObject","upload","bindItem","removeIndex","indexOf","base1","stopwatch","settings","bg","cl","clueContainer","toolbar","Title","Author","Copyright","Grid","IsRebus","Across","Down","gridColumn","bgAlt","scope","createApp","App","mount"],"mappings":"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","file":"js/app.8dceb748.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./toolbar.vue?vue&type=style&index=0&id=006c0dec&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./settings.vue?vue&type=style&index=0&id=72da786e&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./stopwatch.vue?vue&type=style&index=0&id=cfc16586&scoped=true&lang=css\"","<template>\n    <div class=\"app-container\" :style=\"appStyle\">\n        <div>\n            <transition name=\"modal\">\n                <div v-if=\"isFinishedShow\">\n                    <div class=\"overlay\" @click.self=\"isFinishedShow = false;\">\n                        <div class=\"modal\" :style=\"modalStyle\">\n                            <p> {{ gridFullMessage }} </p>\n                        </div>\n                    </div>\n                </div>\n            </transition>\n        </div>\n        <div class=\"toolbar\" :style=\"toolbarCSS\">\n            <toolbar ref=\"toolbar\"\n                     :currentPoint=\"currentPoint\"\n                     @check-square=\"checkEar('square')\"\n                     @check-word=\"checkEar('word')\"\n                     @check-grid=\"checkEar('grid')\"\n                     @reveal-square=\"this.$refs.grid.revealSquare()\"\n                     @reveal-word=\"this.$refs.grid.revealWord()\"\n                     @reveal-grid=\"this.$refs.grid.revealGrid()\"\n                     @clear-grid=\"this.$refs.grid.clearGrid()\"\n                     @rebus=\"this.$refs.grid.activateRebus()\"\n                     @settings-to-app=\"settingsObject = $event\"\n                     @puzzle-send-to-app=\"setPuzzle($event)\"\n                     @settings-shown=\"this.$refs.grid.removeKeyEventListener()\"\n                     @settings-hidden=\"this.$refs.grid.addKeyEventListener()\"\n                     :isFinishedShow=\"isFinishedShow\"\n                     :settingsObject=\"settingsObject\"\n            ></toolbar>\n        </div>\n        <div class=\"activeClue\" :style=\"activeClueCSS\">\n            <p>{{ activeClue }}</p>\n        </div>\n        <div class=\"mainGrid\">\n            <grid\n                @square-focus-to-app=\"squareFocusToAppEar($event)\"\n                @grid-full=\"gridFullEar($event)\"\n                :gridObject=\"puzzleGrid\"\n                :settingsObject=\"settingsObject\"\n                :cluesAcross=\"cluesAcross\"\n                :cluesDown=\"cluesDown\"\n                :rebusObj=\"rebusObj\"\n                ref=\"grid\"\n                :key=\"gridKey\"\n            ></grid>\n        </div>\n        <p class=\"direction-label\" :style=\"clueContStyle\">Across</p>\n        <div class=\"cluesAcross clue-container\" :style=\"clueContStyle\">\n            <clueContainer\n                @primary-clue-focus-to-app=\"primaryClueFocusToAppEar($event)\"\n                :clueFocus=\"clueFocus\"\n                :clues=\"cluesAcross\"\n                :direction=\"'A'\"\n                :settingsObject=\"settingsObject\"\n                @clue-click-to-app=\"clueClickToAppEar($event)\"\n                :key=\"acrossClueContKey\"\n            ></clueContainer>\n        </div>\n        <p class=\"direction-label\" :style=\"clueContStyle\">Down</p>\n        <div class=\"cluesDown clue-container\" :style=\"clueContStyle\">\n            <clueContainer\n                @primary-clue-focus-to-app=\"primaryClueFocusToAppEar($event)\"\n                :clueFocus=\"clueFocus\"\n                :clues=\"cluesDown\"\n                :direction=\"'D'\"\n                :settingsObject=\"settingsObject\"\n                @clue-click-to-app=\"clueClickToAppEar($event)\"\n                :key=\"downClueContKey\"\n            ></clueContainer>\n        </div>\n        <div class=\"bylineCont\" :style=\"bylineStyle\">\n            <span class=\"title\">\n                {{ puzzleTitle }}\n            </span>\n            <span class=\"author\">\n                {{ puzzleAuthor }}\n            </span>\n            <span class=\"copyright\">\n                {{ puzzleCopyright  }}\n            </span>\n        </div>\n    </div>\n</template>\n\n<script>\n import grid from './components/grid.vue'\n import clueContainer from './components/clueContainer.vue'\n import toolbar from './components/toolbar.vue'\n import puzzle from './examples/circleex.json'\n \n export default {\n     name: 'App',\n     components: {\n         grid,\n         clueContainer,\n         toolbar,\n     },\n     \n     //props: ['puzzle'],\n     \n     data() {\n         return {\n             puzzleTitle: puzzle.Title,\n             puzzleAuthor: puzzle.Author,\n             puzzleCopyright: puzzle.Copyright,\n             \n             puzzleGrid: puzzle.Grid,\n             rebusObj: puzzle.IsRebus,\n             cluesAcross: puzzle.Across,\n             cluesDown: puzzle.Down,\n             gridKey: 0,\n             acrossClueContKey: 47,\n             downClueContKey: 48,\n\n             clueFocus: {primary: '1A', secondary: '1D'},\n             activeClue: '',\n             currentPoint: {y: 0, x: 0},\n             gridFullMessage: '',\n             isFinishedShow: false,\n             settingsObject: {\n                 selectedTheme: {\n                     \"bg\": \"#fafafa\",\n                     \"bgAlt\": \"#f0f0f0\",\n                     \"base0\": \"#f0f0f0\",\n                     \"base1\": \"#e7e7e7\",\n                     \"base2\": \"#dfdfdf\",\n                     \"base3\": \"#c6c7c7\",\n                     \"base4\": \"#9ca0a4\",\n                     \"base5\": \"#383a42\",\n                     \"base6\": \"#202328\",\n                     \"base7\": \"#1c1f24\",\n                     \"base8\": \"#1b2229\",\n                     \"fg\": \"#383a42\",\n                     \"fgAlt\": \"#c6c7c7\",\n                     \"red\": \"#e45649\",\n                     \"orange\": \"#da8548\",\n                     \"green\": \"#50a14f\",\n                     \"teal\": \"#4db5bd\",\n                     \"yellow\": \"#986801\",\n                     \"blue\": \"#4078f2\",\n                     \"darkBlue\": \"#a0bcf8\",\n                     \"magenta\": \"#a626a4\",\n                     \"violet\": \"#b751b6\",\n                     \"cyan\": \"#0184bc\",\n                     \"darkCyan\": \"#005478\"\n                 }\n             }\n         };\n     },\n     computed: {\n         toolbarCSS() {\n             return {\n                 'grid-column-start': 1,\n                 'grid-column-end': 4,\n             }\n         },\n         \n         activeClueCSS() {\n             return {\n                 gridColumn: 1,\n                 backgroundColor: this.settingsObject.selectedTheme.green,\n                 color: this.settingsObject.selectedTheme.bgAlt,\n             }\n         },\n\n         appStyle() {\n             return {\n                 backgroundColor: this.settingsObject.selectedTheme.bg\n             }\n         },\n\n         clueContStyle() {\n             return {\n                 backgroundColor: this.settingsObject.selectedTheme.bgAlt,\n                 color: this.settingsObject.selectedTheme.fg,\n             }\n         },\n\n         modalStyle() {\n             return {\n                 backgroundColor: this.settingsObject.selectedTheme.bg\n             }\n         },\n\n         bylineStyle() {\n             return {\n                 color: this.settingsObject.selectedTheme.fg,\n             }\n         }\n     },\n     methods: {\n         // setPuzzle(event) {\n         //     //console.log(event);\n         //     this.puzzle = event;\n         //     this.puzzleGrid = event.Grid;\n         //     this.rebusObj = event.IsRebus;\n         //     this.cluesAcross = event.Across;\n         //     this.cluesDown = event.Down;\n         //     this.gridKey += 1;  // force update grid\n         //     this.acrossClueContKey += 2;\n         //     this.downClueContKey += 2;\n         //     //this.$forceUpdate();\n         // },\n         \n         squareFocusToAppEar(event) {\n             // console.log(event)\n             if (event.primaryDirection === 'across') {\n                 this.clueFocus = {\n                     primary: event.squareFocusEvent.acrossNum.toString() + 'A',\n                     secondary: event.squareFocusEvent.downNum.toString() + 'D'\n                 }\n             } else if (event.primaryDirection === 'down') {\n                 this.clueFocus = {\n                     primary: event.squareFocusEvent.downNum.toString() + 'D',\n                     secondary: event.squareFocusEvent.acrossNum.toString() + 'A',\n                 }\n             }\n             this.currentPoint = event.currentPoint;\n         },\n         \n         primaryClueFocusToAppEar(clueEvent) {\n             //console.log('primaryClueFocusToAppEar')\n             this.activeClue = clueEvent.composed\n         },\n         \n         checkEar(scope) {\n             // this is to try to avoid the warnings but they're still there\n             // idk if it's the right way to do it though lol\n             switch(scope) {\n                 case \"square\":\n                     this.$refs.grid.checkSquare();\n                     break;\n                 case \"word\":\n                     this.$refs.grid.checkWord();\n                     break;\n                 case \"grid\":\n                     this.$refs.grid.checkGrid();\n                     break;\n             }\n         },\n\n         gridFullEar(event) {\n             this.isFinishedShow = true;\n             this.$refs.toolbar.$refs.stopwatch.stopStopwatch();\n             if (event === \"correct\") {\n                 this.gridFullMessage = \"Congratulations! 🎉\"\n             } else if (event === \"incorrect\") {\n                 this.gridFullMessage = \"One or more letters are incorrect 😟\"\n             }\n         },\n\n         clueClickToAppEar(event) {\n             this.$refs.grid.focusFromClueClick(event);\n         }\n     },\n\n     mounted() {\n         // console.log(this.settingsObject)\n     }\n }\n</script>\n\n<style>\n #app {\n     font-family: sans-serif;\n     -webkit-font-smoothing: antialiased;\n     -moz-osx-font-smoothing: grayscale;\n     text-align: left;\n     /* color: #2c3e50; */\n }\n .app-container {\n     display: grid;\n     grid-template-columns: 2fr 0.5fr 0.5fr;\n     grid-template-rows: 1fr 1fr 10fr;\n     column-gap: 1em;\n     max-width: 870px;\n     max-height: 600px;\n     justify-items: start;\n     padding: 1em;\n     border-radius: 5px;\n     box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n }\n .grid {\n     border: 3pt solid;\n }\n .toolbar {\n     grid-row: 1;\n     align-self: center;\n     float: left;\n     width: 100%;\n }\n .activeClue {\n     grid-column: 1;\n     grid-row: 2;\n     align-self: center;\n     width: stretch;\n     padding-left: 1em;\n     padding-right: 1em;\n     border-radius: 5px;\n }\n .mainGrid {\n     grid-row: 3;\n     grid-column: 1;\n     min-width: 30em;\n     padding-top: 1em;\n }\n .cluesAcross {\n     grid-row: 3;\n     grid-column: 2;\n }\n .cluesDown {\n     grid-row: 3;\n     grid-column: 3;\n }\n .direction-label {\n     padding: 0.4em;\n     width: 10em;\n     border-radius: 5px;\n     grid-row: 2;\n }\n .clue-container {\n     padding: 0;\n     height: 99%;\n     padding-top: 0.4em;\n     padding-left: 0.4em;\n     padding-right: 0.4em;\n     border-radius: 5px;\n     overflow: scroll;\n     font-size: 14px;\n     cursor: pointer;\n     z-index: 2;\n }\n .modal {\n     width: 500px;\n     margin: 0px auto;\n     padding: 20px;\n     border-radius: 5px;\n     box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n     transition: all 0.2s ease-in;\n }\n .fadeIn-enter {\n     opacity: 0;\n }\n\n .fadeIn-leave-active {\n     opacity: 0;\n     transition: all 0.2s step-end;\n }\n\n .fadeIn-enter .modal,\n .fadeIn-leave-active.modal {\n     transform: scale(1.1);\n }\n .overlay {\n     position: fixed;\n     top: 0.5em;\n     left: 0.5em;\n     border-radius: 5px;\n     width: 870px;\n     height: 600px;\n     padding: 1em;\n     display: flex;\n     justify-content: center;\n     align-items: center;\n     background: #00000094;\n     z-index: 999;\n     transition: opacity 0.2s ease;\n }\n .bylineCont {\n     grid-column: 1 / 4;\n     display: inline-block;\n     width: 870px;\n }\n .bylineCont > span {\n     font-size: 12px;\n     padding-top: 0.15em;\n     padding-left: 0.1em;\n     padding-right: 0.1em;\n     display: inline-block;\n }\n .title {\n     float: left;\n     margin-right: 2em;\n }\n .author {\n     float: left;\n }\n .copyright {\n     float: right;\n }\n</style>\n","<template>\n    <div v-if=\"currentSquaresFilled === squareCount\">\n        {{ gridFullCheck() }}\n    </div>\n    <div class=\"gridContainer\" :style=\"cssGridVars\">\n        <div class=\"row\" v-for=\"(row, row_index) in staticGrid\" :key=\"row_index\" :style=\"cssRowVars\">\n            <square v-for=\"(cell, cell_index) in row\"\n                    @square-focus=\"clickHandler($event)\"\n                    @rebus-enter=\"rebusEnter($event)\"\n                    @rebus-blur=\"rebusBlur($event)\"\n                    :key=\"[row_index, cell_index]\"\n                    :correctLetter=\"cell.correctLetter\"\n                    :isBlock=\"cell.isBlock\"\n                    :isCircled=\"cell.isCircled\"\n                    :isRebus=\"cell.isRebus\"\n                    :isWordStartAcross=\"cell.isWordStartAcross\"\n                    :isWordStartDown=\"cell.isWordStartDown\"\n                    :acrossNum=\"cell.acrossNum\"\n                    :downNum=\"cell.downNum\"\n                    :currentLetter=\"dynamicGrid[row_index][cell_index].currentLetter\"\n                    :currentDirection=\"currentDirection\"\n                    :x=\"cell.x\"\n                    :y=\"cell.y\"\n                    :isPoint=\"dynamicGrid[row_index][cell_index].isPoint\"\n                    :isPrimarySelect=\"dynamicGrid[row_index][cell_index].isPrimarySelect\"\n                    :isSecondarySelect=\"dynamicGrid[row_index][cell_index].isSecondarySelect\"\n                    :isCorrect=\"dynamicGrid[row_index][cell_index].isCorrect\"\n                    :isIncorrect=\"dynamicGrid[row_index][cell_index].isIncorrect\"\n                    :isRebusActive=\"dynamicGrid[row_index][cell_index].isRebusActive\"\n                    :settingsObject=\"settingsObject\"\n                    :isLeft=\"cell.isLeft\"\n                    :isRight=\"cell.isRight\"\n                    :isTop=\"cell.isTop\"\n                    :isBot=\"cell.isBot\"\n                    ></square>\n        </div>\n    </div>\n</template>\n\n<script>\n import square from './square.vue'\n \n export default {\n     name: 'grid',\n     components: {\n         square\n     },\n     props: {\n         gridObject: Array,\n         cluesDown: Array,\n         cluesAcross: Array,\n         rebusObj: Object,\n         settingsObject: Object\n     },\n     emits: [\n         'square-focus-to-app',\n         'squareFocusToApp',\n         'gridFull'\n     ],\n     data() {\n         return {\n             currentDirection: \"across\",\n             dynamicGrid: [],\n             // these two are arrays of the indices of the previously selected words. the car\n             // is the row or column; the cdr is the columns or rows\n             previousSelectAcross: [],\n             previousSelectDown: [],\n             previousPoint: {},\n\n             currentPoint: {y: 0, x: 0},\n             currentSquaresFilled: 0,\n         }\n     },\n     created() {\n         // need to wait until methods load, which is why this is in created()\n         this.dynamicGrid = this.createDynamicGrid();\n     },\n     computed: {\n         cssGridVars() {\n             return {\n                 //'grid-template-columns': 'repeat(' + this.gridObject.length + ', 1fr)',\n                 \"height\": \"30em\",\n                 'grid-template-rows': 'repeat(' + this.gridObject[0].length + ', 1fr)',\n                 'grid-auto-rows': `${100 / this.gridObject.length}%`,\n             }\n         },\n         \n         cssRowVars() {\n             return {\n                 'display': \"grid\",\n                 'grid-template-columns': 'repeat(' + this.gridObject.length + ', 1fr)',\n             }\n         },\n\n         createRebusObj() {\n             let codeList = this.rebusObj.Codes.split(';');\n             let codeObj = {};\n             for (let codeIn = 0; codeIn < codeList.length; codeIn++) {\n                 let thisCode = codeList[codeIn].split(':');\n                 codeObj[thisCode[0]] = thisCode[1];\n             }\n             return codeObj;\n         },\n         \n         staticGrid() {\n             //console.log(\"staticGrid called\")\n             // gridObject is actually an array lol\n             // for each cell in the grid, create on object with keys:\n             // isBlock: it's a block / black square\n             // isCircled: it's circled\n             // isRebus: it's a rebus\n             // isWordStartAcross: it's the start of an across word\n             // isWordStartDown: it's the start of a down word\n             // acrossNum: the clue number of this cell's across word\n             // downNum: the clue number of this cell's down word\n             let gridObject = this.gridObject\n             var outputGrid = []\n             var currentWordNum = 0\n             for (let row in gridObject) {\n                 let thisRowArray = gridObject[row][\"Row\"].split('')\n                 outputGrid.push([])\n                 for (let char in thisRowArray) {\n                     var thisCell = {}\n                     if (thisRowArray[char] === '.') {\n                         thisCell['isBlock'] = thisRowArray[char] === '.'\n                     } else {\n                         // why the hell are char and row strings??\n                         thisCell['x'] = Number(char)\n                         thisCell['y'] = Number(row)\n\n                         if (isNaN(thisRowArray[char])) {\n                             // if it's not a number (that is, not a rebus)\n                             thisCell['correctLetter'] = thisRowArray[char];\n                         } else {\n                             // else, it's a rebus. ask createRebusObj for the rebus corresponding to\n                             // the (numerical) code in thisRowArray\n                             thisCell['correctLetter'] = this.createRebusObj[thisRowArray[char].toString()];\n                         }\n                         thisCell['isCircled'] = thisRowArray[char] === thisRowArray[char].toLowerCase()\n                         thisCell['isRebus'] = !isNaN(parseInt(thisRowArray[char]), 10)\n                         thisCell['isBlock'] = false\n                         \n                         // char === 0 is when we're on the left edge of the grid\n                         // the other condition is if the previous cell was a block\n                         thisCell['isWordStartAcross'] = char == 0 || thisRowArray[char-1] === '.'\n\n                         // row == 0 is when we're on the top edge of the grid\n                         // TODO figure out why it wants == instead of ===\n                         // the other condition is if the cell above was a block\n                         thisCell['isWordStartDown'] = row == 0 || outputGrid[row-1][char]['isBlock']\n                         \n                         if (thisCell['isWordStartAcross'] || thisCell['isWordStartDown']) {\n                             currentWordNum++\n                         }\n                         if (thisCell['isWordStartAcross']) {\n                             // if this is the start of an across word, then currentWordNum is correct\n                             thisCell['acrossNum'] = currentWordNum\n                         } else {\n                             // otherwise acrossNum is the same as the one before\n                             thisCell['acrossNum'] = outputGrid[row][char-1]['acrossNum']\n                         }\n                         \n                         if (thisCell['isWordStartDown']) {\n                             // if this is the start of a down word, then currentWordNum is correct\n                             thisCell['downNum'] = currentWordNum\n                         } else {\n                             // otherwise downNum is the same as the one above\n                             thisCell['downNum'] = outputGrid[row-1][char]['downNum']\n                         }\n\n                         // get position of this cell for border css\n                         if (char == 0) {\n                             thisCell['isLeft'] = true;\n                         } else if (char == thisRowArray.length-1) {\n                             thisCell['isRight'] = true;\n                         }\n                         if (row == 0) {\n                             thisCell['isTop'] = true;\n                         } else if (row == gridObject.length-1) {\n                             thisCell['isBot'] = true;\n                         }\n                     }\n                     outputGrid[row].push(thisCell);\n                 }\n             }\n             //console.log(outputGrid)\n             return outputGrid\n         },\n\n         squareCount() {\n             let count = 0;\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.staticGrid[iY][iX].isBlock === true) {\n                         continue;\n                     } else {\n                         count += 1;\n                     }\n                 }\n             }\n             return count\n         },\n\n         firstSquareCoor() {\n             // return the x-coord of the first non-block square on the first row\n             // i'm hardcoding in that the 0th row is the first non-block row, but i\n             // think this is a safe assumption\n             let iX = 0;\n             while (this.staticGrid[0][iX].isBlock === true) {\n                 iX++;\n             }\n             return {y: 0, x: iX}\n         }\n     },\n     methods: {\n         createDynamicGrid() {\n             //console.log('createDynamicGrid called')\n             // i wonder if it's a problem that this is reading static data (rather than a param)\n             var outputGrid = []\n             for (let row in this.staticGrid) {\n                 outputGrid.push([])\n                 for (let char in this.staticGrid[row]) {\n                     var thisCell = {}\n                     thisCell['isBlock'] = this.staticGrid[row][char]['isBlock'] === true\n                     if (thisCell['isBlock'] != true) {\n                         thisCell['x'] = this.staticGrid[row][char]['x']\n                         thisCell['y'] = this.staticGrid[row][char]['y']\n                         \n                         thisCell['isPrimarySelect'] = false;\n                         thisCell['isSecondarySelect'] = false;\n                         thisCell['isPoint'] = false;\n                         \n                         thisCell['currentLetter'] = '';\n                         thisCell['isCorrect'] = false;\n                         thisCell['isIncorrect'] = false;\n                         thisCell['isRebusActive'] = false;\n                     }\n                     outputGrid[row].push(thisCell)\n                 }\n             }\n             //console.log(outputGrid)\n             return outputGrid\n         },\n\n         reCreateDynamicGrid() {\n             this.dynamicGrid = this.createDynamicGrid();\n             console.log(this.cluesAcross);\n         },\n\n         clearPrevious() {\n             //console.log(\"clearPrevious called\")\n             // clear previous across\n             for (let ai = 1; ai < this.previousSelectAcross.length; ai++) {\n                 this.dynamicGrid[this.previousSelectAcross[0]][this.previousSelectAcross[ai]]['isPrimarySelect'] = false;\n                 this.dynamicGrid[this.previousSelectAcross[0]][this.previousSelectAcross[ai]]['isSecondarySelect'] = false;\n                 this.dynamicGrid[this.previousSelectAcross[0]][this.previousSelectAcross[ai]]['isRebusActive'] = false;\n             }\n             for (let di = 1; di < this.previousSelectDown.length; di++) {\n                 this.dynamicGrid[this.previousSelectDown[di]][this.previousSelectDown[0]]['isPrimarySelect'] = false;\n                 this.dynamicGrid[this.previousSelectDown[di]][this.previousSelectDown[0]]['isSecondarySelect'] = false;\n                 this.dynamicGrid[this.previousSelectDown[di]][this.previousSelectDown[0]]['isRebusActive'] = false;\n             }\n             // clear previous point\n             this.dynamicGrid[this.previousSelectAcross[0]][this.previousSelectDown[0]]['isPoint'] = false;\n             \n             // reset\n             this.previousSelectAcross = [];\n             this.previousSelectDown = [];\n         },\n\n         activateRebus() {\n             this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].currentLetter = ''\n             this.removeKeyEventListener();\n             this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].isRebusActive = !this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].isRebusActive;\n         },\n\n         rebusEnter(event) {\n             this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].currentLetter = event.toUpperCase();\n             this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].isRebusActive = false;\n             this.addKeyEventListener();\n         },\n\n         rebusBlur(event) {\n             this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].currentLetter = event.toUpperCase();\n             this.addKeyEventListener();\n         },\n         \n         focusEar(event) {\n             // set previous point (multiple lines to prevent variable shadowing)\n             this.previousPoint.x = this.currentPoint.x;\n             this.previousPoint.y = this.currentPoint.y;\n             if (this.previousSelectAcross.length != 0 && this.previousSelectDown.length != 0) {\n                 // clear the previous selection's css if there was a previous selection\n                 this.clearPrevious();\n             }\n\n             let eventX = event.x\n             let eventY = event.y\n             let primaryDirection = \"\"\n             if (!event.direction) {\n                 // the direction param is not passed if it's a mouse click\n                 if (this.currentDirection === \"across\") {\n                     primaryDirection = \"across\"\n                     //var secondaryDirection = \"down\"\n                 } else if (this.currentDirection === \"down\") {\n                     primaryDirection = \"down\"\n                     //var secondaryDirection = \"across\"\n                 }\n             } else {\n                 // the direction param is passed if it's a keyboard movement\n                 primaryDirection = event.direction\n             }\n\n             // initialize with the constant cars\n             // TODO make previousSelect objects, so the code is more readable\n             // and i'm not just refering to indices\n             this.previousSelectAcross.push(eventY)  \n             this.previousSelectDown.push(eventX)\n\n             var whileX = eventX;\n             // search backward for across\n             while (this.dynamicGrid[eventY][whileX] && this.dynamicGrid[eventY][whileX]['isBlock'] != true) {\n                 //console.log(whileX)\n                 if (primaryDirection === \"across\") {\n                     this.dynamicGrid[eventY][whileX]['isPrimarySelect'] = true\n                 } else {\n                     this.dynamicGrid[eventY][whileX]['isSecondarySelect'] = true\n                 }\n                 this.previousSelectAcross.push(whileX)\n                 whileX--\n             }\n             // plus one so we don't search the same block twice\n             whileX = eventX;\n             // search forward for across\n             while (this.dynamicGrid[eventY][whileX] && this.dynamicGrid[eventY][whileX]['isBlock'] != true) {\n                 if (primaryDirection === \"across\") {\n                     this.dynamicGrid[eventY][whileX]['isPrimarySelect'] = true\n                 } else {\n                     this.dynamicGrid[eventY][whileX]['isSecondarySelect'] = true\n                 }\n                 this.previousSelectAcross.push(whileX)\n                 whileX++\n             }\n             \n             var whileY = eventY;\n             // search backwards for down\n             while (this.dynamicGrid[whileY] && this.dynamicGrid[whileY][eventX]['isBlock'] != true) {\n                 if (primaryDirection === \"down\") {\n                     this.dynamicGrid[whileY][eventX]['isPrimarySelect'] = true\n                 } else {\n                     this.dynamicGrid[whileY][eventX]['isSecondarySelect'] = true\n                 }\n                 this.previousSelectDown.push(whileY)\n                 whileY--\n             }\n             whileY = eventY;\n             // search forward for down\n             while (this.dynamicGrid[whileY] && this.dynamicGrid[whileY][eventX]['isBlock'] != true) {\n                 if (primaryDirection === \"down\") {\n                     this.dynamicGrid[whileY][eventX]['isPrimarySelect'] = true\n                 } else {\n                     this.dynamicGrid[whileY][eventX]['isSecondarySelect'] = true\n                 }\n                 this.previousSelectDown.push(whileY)\n                 whileY++\n             }\n             \n             // set point\n             this.dynamicGrid[eventY][eventX]['isPoint'] = true;\n             this.currentPoint.y = eventY;\n             this.currentPoint.x = eventX;\n\n             // pass up to app.vue\n             this.$emit('square-focus-to-app', {\n                 squareFocusEvent: event,\n                 primaryDirection: primaryDirection,\n                 currentPoint: this.currentPoint,\n             })\n         },\n\n         focusFromClueClick(event) {\n             // event is in the form of an object:\n             // {num: (clue number), direction: (clue direction)}\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.staticGrid[iY][iX].isBlock === true) {\n                         continue\n                     } else {\n                         if (event.direction === \"A\") {\n                             if (this.staticGrid[iY][iX].isWordStartAcross === true && this.staticGrid[iY][iX].acrossNum === event.num) {\n                                 this.focusEar({\n                                     y: iY,\n                                     x: iX,\n                                     direction: \"across\",\n                                     acrossNum: this.staticGrid[iY][iX]['acrossNum'],\n                                     downNum: this.staticGrid[iY][iX]['downNum']\n                                 })\n                                 return\n                             }\n                         } else if (event.direction === \"D\") {\n                             if (this.staticGrid[iY][iX].isWordStartDown === true && this.staticGrid[iY][iX].downNum === event.num) {\n                                 this.focusEar({\n                                     y: iY,\n                                     x: iX,\n                                     direction: \"down\",\n                                     acrossNum: this.staticGrid[iY][iX]['acrossNum'],\n                                     downNum: this.staticGrid[iY][iX]['downNum']\n                                 })\n                                 return\n                             }\n                         }\n                     }\n                 }\n             }\n         },\n\n         movePointNaive(targetY, targetX) {\n             // try to avoid calling this function\n             this.focusEar({y: targetY, x: targetX});\n         },\n\n         movePointSmart(direction) {\n             // direction is a string \"up\", \"down\", \"left\", \"right\"\n             // TODO maybe rename direction to movementDirection lol\n             // passingDirection is the direction to pass to focusEar\n             // console.log(direction);\n             // console.log(this.currentDirection);\n             switch(direction.toLowerCase()) {\n                 case \"up\":\n                     if (this.currentDirection === \"across\") {\n                         this.switchDirection();\n                     }\n                     if (this.currentPoint.y === 0) {\n                         // do nothing at the top of the grid\n                         break;\n                     } else if (this.dynamicGrid[this.currentPoint.y-1][this.currentPoint.x]['isBlock'] === true) {\n                         // look for the closest block that's not a block\n                         let targetY = this.currentPoint.y-1;\n                         while (targetY !== -1 && this.dynamicGrid[targetY][this.currentPoint.x]['isBlock'] === true) {\n                             targetY--;\n                         }\n                         if (targetY !== -1) {\n                             // if target is -1, there's no non-block above point\n                             this.focusEar({\n                                 y: targetY,\n                                 x: this.currentPoint.x,\n                                 direction: this.currentDirection,\n                                 acrossNum: this.staticGrid[targetY][this.currentPoint.x]['acrossNum'],\n                                 downNum: this.staticGrid[targetY][this.currentPoint.x]['downNum']\n                             });\n                         }\n                     } else {\n                         this.focusEar({\n                             y: this.currentPoint.y-1,\n                             x: this.currentPoint.x,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[this.currentPoint.y-1][this.currentPoint.x]['acrossNum'],\n                             downNum: this.staticGrid[this.currentPoint.y-1][this.currentPoint.x]['downNum']\n                         });\n                     }\n                     break;\n                 case \"down\":\n                     if (this.currentDirection === \"across\") {\n                         this.switchDirection();\n                     }\n                     if (this.currentPoint.y === this.dynamicGrid.length) {\n                         // do nothing at the top of the grid\n                         break;\n                     } else if (this.dynamicGrid[this.currentPoint.y+1][this.currentPoint.x]['isBlock'] === true) {\n                         // look for the closest block that's not a block\n                         let targetY = this.currentPoint.y+1;\n                         while (targetY <= this.dynamicGrid.length-1 && this.dynamicGrid[targetY][this.currentPoint.x]['isBlock'] === true) {\n                             targetY++;\n                         }\n                         if (targetY <= this.dynamicGrid.length-1) {\n                             this.focusEar({\n                                 y: targetY,\n                                 x: this.currentPoint.x,\n                                 direction: this.currentDirection,\n                                 acrossNum: this.staticGrid[targetY][this.currentPoint.x]['acrossNum'],\n                                 downNum: this.staticGrid[targetY][this.currentPoint.x]['downNum']\n                             });\n                         }\n                     } else {\n                         this.focusEar({\n                             y: this.currentPoint.y+1,\n                             x: this.currentPoint.x,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[this.currentPoint.y+1][this.currentPoint.x]['acrossNum'],\n                             downNum: this.staticGrid[this.currentPoint.y+1][this.currentPoint.x]['downNum']\n                         });\n                     }\n                     break;\n                 case \"left\":\n                     if (this.currentDirection === \"down\") {\n                         this.switchDirection()\n                     }\n                     if (this.currentPoint.x === 0 && this.currentPoint.y === 0) {\n                         // do nothing at top left corner\n                         break;\n                     } else if (this.currentPoint.x === 0 && this.currentPoint.y !== 0) {\n                         // wrap around if we're at the left edge\n                         let targetX = this.dynamicGrid[0].length-1;\n                         while (this.dynamicGrid[this.currentPoint.y-1][targetX]['isBlock'] === true) {\n                             targetX--;\n                         }\n                         this.focusEar({\n                             y: this.currentPoint.y-1,\n                             x: targetX,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[this.currentPoint.y-1][targetX]['acrossNum'],\n                             downNum: this.staticGrid[this.currentPoint.y-1][targetX]['downNum']\n                         })\n                     } else if (this.dynamicGrid[this.currentPoint.y][this.currentPoint.x-1]['isBlock'] === true) {\n                         // look for the closest square that's not a block\n                         let targetX = this.currentPoint.x-1;\n                         while (targetX !== -1 && this.dynamicGrid[this.currentPoint.y][targetX]['isBlock'] === true) {\n                             targetX--;\n                         }\n                         if (targetX === -1) {\n                             // case when the left edge is a block\n                             // TODO this is a dirty hack refactor this code to be more efficient\n                             // can't simply use moveAcrossWord('left') because then it skips to the beginning of the word\n                             let targetX2 = this.dynamicGrid[0].length-1;\n                             while (this.dynamicGrid[this.currentPoint.y-1][targetX2]['isBlock'] === true) {\n                                 targetX2--;\n                             }\n                             this.focusEar({\n                                 y: this.currentPoint.y-1,\n                                 x: targetX2,\n                                 direction: this.currentDirection,\n                                 acrossNum: this.staticGrid[this.currentPoint.y-1][targetX2]['acrossNum'],\n                                 downNum: this.staticGrid[this.currentPoint.y-1][targetX2]['downNum']\n                             })\n                         } else if (targetX !== -1) {\n                             this.focusEar({\n                                 y: this.currentPoint.y,\n                                 x: targetX,\n                                 direction: this.currentDirection,\n                                 acrossNum: this.staticGrid[this.currentPoint.y][targetX]['acrossNum'],\n                                 downNum: this.staticGrid[this.currentPoint.y][targetX]['downNum'],\n                             });\n                         }\n                     } else {\n                         this.focusEar({\n                             y: this.currentPoint.y,\n                             x: this.currentPoint.x-1,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x-1]['acrossNum'],\n                             downNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x-1]['downNum'],\n                         });\n                     }\n                     break;\n                 case \"right\":\n                     if (this.currentDirection === \"down\") {\n                         this.switchDirection()\n                     }\n                     if (this.currentPoint.x === this.dynamicGrid[0].length-1 && this.currentPoint.y === this.dynamicGrid.length-1) {\n                         // do nothing at the bottom right corner\n                         break;\n                     } else if (this.currentPoint.x === this.dynamicGrid[0].length-1 || this.staticGrid[this.currentPoint.y][this.currentPoint.x+1]['isBlock'] === true) {\n                         this.moveAcrossWord(\"right\");\n                     } else {\n                         this.focusEar({\n                             y: this.currentPoint.y,\n                             x: this.currentPoint.x+1,\n                             direction: this.currentDirection,\n                             acrossNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x+1]['acrossNum'],\n                             downNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x+1]['downNum'],\n                         });\n                     }\n                     break;\n             }\n         },\n\n         switchDirection() {\n             if (this.currentDirection === \"across\") {\n                 this.currentDirection = \"down\"\n             } else if (this.currentDirection === \"down\") {\n                 this.currentDirection = \"across\"\n             }\n         },\n\n         switchDirectionAndFocus() {\n             this.switchDirection();\n             this.focusEar({\n                 y: this.currentPoint.y,\n                 x: this.currentPoint.x,\n                 direction: this.currentDirection,\n                 acrossNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x]['acrossNum'],\n                 downNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x]['downNum']\n             })\n         },\n\n         clearSquareLetter(y, x) {\n             this.dynamicGrid[y][x]['currentLetter'] = \"\";\n         },\n\n         moveForwardCurrentDirection() {\n             // TODO gotta skip any squares that are already filled\n             if (this.currentDirection === \"across\") {\n                     this.movePointSmart(\"right\");\n                 } else if (this.currentDirection === \"down\") {\n                     this.movePointSmart(\"down\");\n                 }\n         },\n\n         moveBackwardCurrentDirection() {\n             if (this.currentDirection === \"across\") {\n                 this.movePointSmart(\"left\");\n             } else if (this.currentDirection === \"down\") {\n                 this.movePointSmart(\"up\");\n             }\n         },\n\n         // TODO maybe wrap around to the start of the grid\n         // TODO also i think i've hardcoded in that the [0,0] square is not a block... oops\n         getAcrossWordStart(y, x) {\n             let currentAcrossNum = this.staticGrid[y][x]['acrossNum'];\n             let targetX = x;\n             while (targetX > 0 && this.staticGrid[y][targetX]['acrossNum'] === currentAcrossNum) {\n                 // iterate till we get the start of across word\n                 targetX--;\n             }\n             //console.log(targetX)\n             if (this.staticGrid[y][targetX]['isBlock'] === true) {\n                 return {y: y, x: targetX+1}\n             } else {\n                 return {y: y, x: targetX}\n             }\n         },\n         \n         getAcrossWordEnd(y, x) {\n             let currentAcrossNum = this.staticGrid[y][x]['acrossNum'];\n             let targetX = x;\n             console.log(\"current across num: \" + currentAcrossNum.toString())\n             while (targetX < this.staticGrid[y].length && this.staticGrid[y][targetX]['acrossNum'] === currentAcrossNum) {\n                 targetX++;\n             }\n             console.log(\"targetX: \" + targetX.toString())\n             if (targetX >= this.staticGrid[y].length || this.staticGrid[y][targetX]['isBlock'] === true) {\n                 console.log('was a block')\n                 return {y: y, x: targetX-1}\n             } else {\n                 console.log('was not a block')\n                 return {y: y, x: targetX}\n             }\n         },\n\n         getNextAcrossNum() {\n             let currentAcrossNum = this.staticGrid[this.currentPoint.y][this.currentPoint.x]['acrossNum'];\n             if (currentAcrossNum === this.cluesAcross[this.cluesAcross.length-1].Num) {\n                 return null\n             }\n             // TODO binary search to make this faster?\n             for (let clueIndex = 0; clueIndex < this.cluesAcross.length; clueIndex++) {\n                 if (this.cluesAcross[clueIndex].Num === currentAcrossNum) {\n                     return this.cluesAcross[clueIndex+1].Num;\n                 }\n             }\n         },\n\n         getNextAcrossWord() {\n             let x = this.currentPoint.x;\n             for (let y = this.currentPoint.y; y < this.staticGrid.length; y++) {\n                 for (x; x < this.staticGrid[y].length; x++) {\n                     if (this.staticGrid[y][x]['acrossNum'] === this.getNextAcrossNum()) {\n                         return this.getAcrossWordStart(y, x);\n                     }\n                 }\n                 x = 0;\n             }\n             return null\n         },\n\n         getPreviousAcrossNum() {\n             let currentAcrossNum = this.staticGrid[this.currentPoint.y][this.currentPoint.x]['acrossNum'];\n             if (currentAcrossNum === 1) {\n                 // exit when we're at first\n                 return null\n             }\n             for (let clueIndex = 0; clueIndex < this.cluesAcross.length; clueIndex++) {\n                 if (this.cluesAcross[clueIndex].Num === currentAcrossNum) {\n                     return this.cluesAcross[clueIndex-1].Num;\n                 }\n             }\n         },\n\n         getPreviousAcrossWord() {\n             let x = this.currentPoint.x;\n             for (let y = this.currentPoint.y; y >= 0; y--) {\n                 for (x; x >= 0; x--) {\n                     if (this.staticGrid[y][x]['acrossNum'] === this.getPreviousAcrossNum()) {\n                         return this.getAcrossWordStart(y, x)\n                     }\n                 }\n                 x = this.staticGrid[y].length-1;\n             }\n             return null\n         },\n\n         moveAcrossWord(direction) {\n             let nextWordStart;\n             if (direction === \"right\") {\n                 nextWordStart = this.getNextAcrossWord();\n             } else if (direction === \"left\") {\n                 nextWordStart = this.getPreviousAcrossWord();\n             }\n             if (!nextWordStart) {\n                 return\n             }\n             this.focusEar({\n                 y: nextWordStart.y,\n                 x: nextWordStart.x,\n                 direction: this.currentDirection,\n                 acrossNum: this.staticGrid[nextWordStart.y][nextWordStart.x]['acrossNum'],\n                 downNum: this.staticGrid[nextWordStart.y][nextWordStart.x]['downNum']\n             })\n         },\n\n         getDownWordStart(y, x) {\n             //console.log('computing getDownWordStart')\n             let currentDownNum = this.staticGrid[y][x]['downNum'];\n             let targetY = y;\n             while (targetY > 0 && this.staticGrid[targetY][x]['downNum'] === currentDownNum) {\n                 // iterate till we get the next down word\n                 targetY--;\n             }\n             if (this.staticGrid[targetY][x]['isBlock'] === true) {\n                 //console.log('getDownWordStart returning plus one since block ' + (targetY+1).toString() + \", \" + x.toString())\n                 return {y: targetY+1, x: x}\n             } else {\n                 //console.log('getDownWordStart returning ' + targetY.toString() + \", \" + x.toString())\n                 return {y: targetY, x: x}                 \n             }\n         },\n\n         getDownWordEnd(y, x) {\n             let currentDownNum = this.staticGrid[y][x]['downNum'];\n             let targetY = y;\n             while (targetY < this.staticGrid.length && this.staticGrid[targetY][x]['downNum'] === currentDownNum) {\n                 // iterate till we get the next down word\n                 targetY++;\n             }\n             if (targetY >= this.staticGrid.length || this.staticGrid[targetY][x]['isBlock'] === true) {\n                 return {y: targetY-1, x: x}\n             } else {\n                 return {y: targetY, x: x}                 \n             }\n         },\n\n         isDownWordEnd(y, x) {\n             // utility function that returns a boolean saying if the square at y, x is an end\n             // of a down word\n             return (y === this.getDownWordEnd(y, x).y) && (x === this.getDownWordEnd(y, x).x);\n         },\n\n         getNextDownNum(y=this.currentPoint.y, x=this.currentPoint.y) {\n             // returns the next down word's clue number\n             let currentDownNum = this.staticGrid[y][x]['downNum'];\n             if (currentDownNum === this.cluesDown[this.cluesDown.length-1].Num) {\n                 // exit when we're at the last\n                 return null\n             }\n             for (let clueIndex = 0; clueIndex < this.cluesDown.length; clueIndex++) {\n                 if (this.cluesDown[clueIndex].Num === currentDownNum) {\n                     //console.log(\"nextDownNum: \" + this.cluesDown[clueIndex+1].Num.toString())\n                     return this.cluesDown[clueIndex+1].Num;\n                 }\n             }\n         },\n\n         getNextDownWord(y=this.currentPoint.y, x=this.currentPoint.x) {\n             // return coordinates of the next down word, wrapping around to the first\n             let currentDownStart = this.getDownWordStart(y, x);\n             let cx = currentDownStart.x;\n             let cy = currentDownStart.y;\n             for (cy; cy < this.staticGrid.length; cy++) {\n                 for (cx; cx < this.staticGrid[cy].length; cx++) {\n                     //console.log(\"iterating downNum: \" + this.staticGrid[y][x]['downNum'].toString());\n                     if (this.staticGrid[cy][cx]['downNum'] === this.getNextDownNum(y, x)) {\n                         //console.log('returning getDownWordStart')\n                         return this.getDownWordStart(cy, cx);\n                     }\n                 }\n                 cx = 0;\n             }\n             // if we're at the last word, then return the first square's coordinates\n             // i could probably do an early-exit by checking the current down num\n             // with the last down num\n             return this.firstSquareCoor\n         },\n\n         getPreviousDownNum() {\n             let currentDownNum = this.staticGrid[this.currentPoint.y][this.currentPoint.x]['downNum'];\n             if (currentDownNum === 1) {\n                 // exit when we're at the first\n                 return null\n             }\n             for (let clueIndex = 0; clueIndex < this.cluesDown.length; clueIndex++) {\n                 if (this.cluesDown[clueIndex].Num === currentDownNum) {\n                     return this.cluesDown[clueIndex-1].Num;\n                 }\n             }\n         },\n\n         getPreviousDownWord() {\n             let x = this.currentPoint.x;\n             for (let y = this.currentPoint.y; y >= 0; y--) {\n                 for (x; x >= 0; x--) {\n                     if (this.staticGrid[y][x]['downNum'] === this.getPreviousDownNum()) {\n                         return this.getDownWordStart(y, x)\n                     }\n                 }\n                 x = this.staticGrid[y].length-1;\n             }\n             return null\n         },\n\n         moveDownWord(direction) {\n             let targetWordStart;\n             if (direction === \"right\") {\n                 targetWordStart = this.getNextDownWord();\n             } else if (direction === \"left\") {\n                 targetWordStart = this.getPreviousDownWord();\n             }\n             if (!targetWordStart) {\n                 console.log(\"moveDownWord: no target word\");\n                 return;\n             }\n             this.focusEar({\n                 y: targetWordStart.y,\n                 x: targetWordStart.x,\n                 direction: this.currentDirection,\n                 acrossNum: this.staticGrid[targetWordStart.y][targetWordStart.x]['acrossNum'],\n                 downNum: this.staticGrid[targetWordStart.y][targetWordStart.x]['downNum']\n             })\n         },\n\n         getNextEmptyAcross(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let iX = x;\n             for (let iY = y; iY < this.staticGrid.length; iY++) {\n                 for (iX; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.dynamicGrid[iY][iX].isBlock !== true && this.dynamicGrid[iY][iX].currentLetter === \"\") {\n                         return {y: iY, x: iX}\n                     }\n                 }\n                 iX = 0;\n             }\n             // if there's no empty square starting from point, look for it before point\n             // the reason we're not doing a recursive call is because i'm afraid of infinite loop\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.dynamicGrid[iY][iX].isBlock !== true && this.dynamicGrid[iY][iX].currentLetter === \"\") {\n                         return {y: iY, x: iX}\n                     }\n                 }\n             }\n             // if we can't find one still\n             console.log(\"getNextEmptyAcross: can't find empty square\");\n             return null\n         },\n\n         getNextEmptyDown() {\n             let iX = this.currentPoint.x;\n             let iY = this.currentPoint.y;\n             //let alreadySearchedFull = false;\n             if (this.currentSquaresFilled === this.squareCount) {\n                 console.log(\"getNextEmptyDown: grid full!\")\n                 return;\n             }\n             while (this.dynamicGrid[iY][iX].isBlock === true || this.dynamicGrid[iY][iX].currentLetter !== \"\") {\n                 if (this.isDownWordEnd(iY, iX)) {\n                     // if this is the end of the word, start over from the beginning of the next word\n                     let nextDown = this.getNextDownWord(iY, iX);\n                     if (nextDown) {\n                         iX = nextDown.x;\n                         iY = nextDown.y;\n                     }\n                 } else if (!this.isDownWordEnd(iY, iX)) {\n                     iY += 1;\n                 }\n             }\n             return {y: iY, x: iX}\n         },\n\n         moveNextEmpty() {\n             let nextEmpty;\n             if (this.currentDirection === \"across\") {\n                 nextEmpty = this.getNextEmptyAcross();\n             } else if (this.currentDirection === \"down\") {\n                 nextEmpty = this.getNextEmptyDown();\n                 console.log(nextEmpty);\n             }\n             this.focusEar({\n                 y: nextEmpty.y,\n                 x: nextEmpty.x,\n                 direction: this.currentDirection,\n                 acrossNum: this.staticGrid[nextEmpty.y][nextEmpty.x]['acrossNum'],\n                 downNum: this.staticGrid[nextEmpty.y][nextEmpty.x]['downNum']\n             });\n         },\n\n         moveStartWord(direction) {\n             // move to the start of this word\n             // direction is either \"across\" or \"down\"\n             let target;\n             if (direction === \"across\") {\n                 target = this.getAcrossWordStart(this.currentPoint.y, this.currentPoint.x);\n             } else if (direction === \"down\") {\n                 target = this.getDownWordStart(this.currentPoint.y, this.currentPoint.x);\n             }\n\n             if (target.x === this.currentPoint.x && target.y === this.currentPoint.y) {\n                 // we're already at the end of the word; simulate backtab behavior\n                 if (this.currentDirection === \"across\") {\n                     this.moveAcrossWord(\"left\");\n                     return\n                 } else if (this.currentDirection === \"down\") {\n                     this.moveDownWord(\"left\");\n                     return\n                 }\n             }\n             \n             this.focusEar({\n                 y: target.y,\n                 x: target.x,\n                 direction: this.currentDirection,\n                 acrossNum: this.staticGrid[target.y][target.x]['acrossNum'],\n                 downNum: this.staticGrid[target.y][target.x]['downNum']\n             });\n         },\n\n         moveEndWord(direction) {\n             // move to the end of this word\n             // direction is either \"across\" or \"down\"\n             let target;\n             if (direction === \"across\") {\n                 target = this.getAcrossWordEnd(this.currentPoint.y, this.currentPoint.x);\n             } else if (direction === \"down\") {\n                 target = this.getDownWordEnd(this.currentPoint.y, this.currentPoint.x);\n             }\n             \n             if (target.x === this.currentPoint.x && target.y === this.currentPoint.y) {\n                 // we're already at the end of the word; simulate tab behavior\n                 if (this.currentDirection === \"across\") {\n                     this.moveAcrossWord(\"right\");\n                     return\n                 } else if (this.currentDirection === \"down\") {\n                     this.moveDownWord(\"right\");\n                     return\n                 }\n             }\n             \n             this.focusEar({\n                 y: target.y,\n                 x: target.x,\n                 direction: this.currentDirection,\n                 acrossNum: this.staticGrid[target.y][target.x]['acrossNum'],\n                 downNum: this.staticGrid[target.y][target.x]['downNum']\n             })\n         },\n\n         clearCheckSquare(y, x) {\n             this.dynamicGrid[y][x]['isIncorrect'] = false;\n             this.dynamicGrid[y][x]['isCorrect'] = false;\n         },\n         \n         checkSquare(y=this.currentPoint.y, x=this.currentPoint.x) {\n             if (this.dynamicGrid[y][x]['currentLetter'] === this.staticGrid[y][x]['correctLetter']) {\n                 this.dynamicGrid[y][x]['isIncorrect'] = false;\n                 this.dynamicGrid[y][x]['isCorrect'] = true;\n             } else {\n                 this.dynamicGrid[y][x]['isIncorrect'] = true;\n                 this.dynamicGrid[y][x]['isCorrect'] = false;\n             }\n         },\n\n         checkWord(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let wordStart;\n             let wordEnd;\n             if (this.currentDirection === \"across\") {\n                 wordStart = this.getAcrossWordStart(y, x).x;\n                 wordEnd = this.getAcrossWordEnd(y, x).x;\n                 //console.log(\"across start: \" + wordStart.toString());\n                 //console.log(\"across end: \" + wordEnd.toString())\n                 for (let iX = wordStart; iX <= wordEnd; iX++) {\n                     this.checkSquare(y, iX);\n                 }\n             } else if (this.currentDirection === \"down\") {\n                 wordStart = this.getDownWordStart(y, x).y;\n                 wordEnd = this.getDownWordEnd(y, x).y;\n                 for (let iY = wordStart; iY <= wordEnd; iY++) {\n                     this.checkSquare(iY, x);\n                 }\n             }\n         },\n\n         checkGrid() {\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.staticGrid[iY][iX].isBlock === true) {\n                         continue;\n                     } else {\n                         this.checkSquare(iY, iX);\n                     }\n                 }\n             }\n         },\n\n         revealSquare(y=this.currentPoint.y, x=this.currentPoint.x) {\n             this.dynamicGrid[y][x]['currentLetter'] = this.staticGrid[y][x]['correctLetter'];\n             this.dynamicGrid[y][x]['isIncorrect'] = false;\n             this.dynamicGrid[y][x]['isCorrect'] = true;\n         },\n\n         revealWord(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let wordStart;\n             let wordEnd;\n             if (this.currentDirection === \"across\") {\n                 wordStart = this.getAcrossWordStart(y, x).x;\n                 wordEnd = this.getAcrossWordEnd(y, x).x;\n                 for (let iX = wordStart; iX <= wordEnd; iX++) {\n                     this.revealSquare(y, iX);\n                 }\n             } else if (this.currentDirection === \"down\") {\n                 wordStart = this.getDownWordStart(y, x).y;\n                 wordEnd = this.getDownWordEnd(y, x).y;\n                 for (let iY = wordStart; iY <= wordEnd; iY++) {\n                     this.revealSquare(iY, x);\n                 }\n             }\n         },\n\n         revealGrid() {\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.staticGrid[iY][iX].isBlock === true) {\n                         continue;\n                     } else {\n                         this.revealSquare(iY, iX);\n                     }\n                 }\n             }\n         },\n\n         clearWordLetters(y=this.currentPoint.y, x=this.currentPoint.x) {\n             let wordEnd;\n             if (this.currentDirection === \"across\") {\n                 wordEnd = this.getAcrossWordEnd(y, x).x;\n                 for (let iX = x; iX <= wordEnd; iX++) {\n                     this.clearSquareLetter(y, iX);\n                 }\n             } else if (this.currentDirection === \"down\") {\n                 wordEnd = this.getDownWordEnd(y, x).y;\n                 for (let iY = y; iY <= wordEnd; iY++) {\n                     this.clearSquareLetter(iY, x);\n                 }\n             }\n         },\n\n         clearGrid() {\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     this.clearCheckSquare(iY, iX);\n                     this.clearSquareLetter(iY, iX);\n                 }\n             }\n         },\n\n         clickHandler(event) {\n             if (event.x === this.currentPoint.x && event.y === this.currentPoint.y) {\n                 // if user clicks on the the point\n                 if (this.dynamicGrid[event.y][event.x].isRebusActive) {\n                     // if it's a rebus, do nothing\n                     return;\n                 } else {\n                     // else, switch direction\n                     this.switchDirectionAndFocus()\n                 }\n             } else {\n                 this.focusEar(event)\n             }\n         },\n\n         keyHandler(event) {\n             // TODO possibly don't prevent default if the event is meta\n             // to preserve cmd-r and cmd-f\n             event.preventDefault()\n             if (this.settingsObject.bindFunctionObject.moveRightSquare(event)) {\n                 // console.log(\"moveRightSquare\")\n                 if (this.currentDirection === \"down\") {\n                     this.switchDirectionAndFocus();\n                 } else {\n                     this.movePointSmart(\"right\");\n                 }\n             } else if (this.settingsObject.bindFunctionObject.moveLeftSquare(event)) {\n                 // console.log(\"moveLeftSquare\")\n                 if (this.currentDirection === \"down\") {\n                     this.switchDirectionAndFocus();\n                 } else {\n                     this.movePointSmart(\"left\");\n                 }\n             } else if (this.settingsObject.bindFunctionObject.moveUpSquare(event)) {\n                 // console.log(\"moveUpSquare\")\n                 if (this.currentDirection === \"across\") {\n                     this.switchDirectionAndFocus();\n                 } else {\n                     this.movePointSmart(\"up\");\n                 }\n             } else if (this.settingsObject.bindFunctionObject.moveDownSquare(event)) {\n                 // console.log(\"moveDownSquare\")\n                 if (this.currentDirection === \"across\") {\n                     this.switchDirectionAndFocus();\n                 } else {\n                     this.movePointSmart(\"down\");\n                 }\n             } else if (this.settingsObject.bindFunctionObject.deleteSquare(event)) {\n                 // console.log(\"deleteSquare\")\n                 if (this.dynamicGrid[this.currentPoint.y][this.currentPoint.x]['isCorrect']) {\n                     // don't delete the letter if we know it's correct\n                 } else {\n                     this.currentSquaresFilled -= 1;\n                     this.clearSquareLetter(this.currentPoint.y, this.currentPoint.x);\n                     this.clearCheckSquare(this.currentPoint.y, this.currentPoint.x);\n                 }\n                 this.moveBackwardCurrentDirection();\n             } else if (this.settingsObject.bindFunctionObject.moveRightWord(event)) {\n                 // console.log(\"moveRightWord\")\n                 if (this.currentDirection === \"across\") {\n                     this.moveAcrossWord(\"right\");\n                 } else if (this.currentDirection === \"down\") {\n                     this.moveDownWord(\"right\");\n                 }\n             } else if (this.settingsObject.bindFunctionObject.moveLeftWord(event)) {\n                 // console.log(\"moveLeftWord\")\n                 if (this.currentDirection === \"across\") {\n                     this.moveAcrossWord(\"left\");\n                 } else if (this.currentDirection === \"down\") {\n                     this.moveDownWord(\"left\");\n                 }\n             } else if (this.settingsObject.bindFunctionObject.moveStartWord(event)) {\n                 // console.log(\"moveStartWord\")\n                 this.moveStartWord(this.currentDirection);\n             } else if (this.settingsObject.bindFunctionObject.moveEndWord(event)) {\n                 // console.log(\"moveEndWord\")\n                 this.moveEndWord(this.currentDirection);\n             } else if (this.settingsObject.bindFunctionObject.deleteWord(event)) {\n                 // console.log(\"deleteWord\")\n                 this.clearWordLetters(this.currentPoint.y, this.currentPoint.x);\n             } else if (this.settingsObject.bindFunctionObject.switchDirection(event)) {\n                 // console.log(\"switchDirection\")\n                 this.switchDirectionAndFocus()\n             } else if (/^\\w/.test(event.key) && event.key.length === 1) {\n                 // it's a letter to insert into grid\n                 // console.log(\"inserting letter\")\n                 this.clearCheckSquare(this.currentPoint.y, this.currentPoint.x);\n                 if (!this.dynamicGrid[this.currentPoint.y][this.currentPoint.x].isRebusActive) {\n                     if (this.dynamicGrid[this.currentPoint.y][this.currentPoint.x]['currentLetter'] === \"\") {\n                         this.currentSquaresFilled += 1;\n                     }\n                     this.dynamicGrid[this.currentPoint.y][this.currentPoint.x]['currentLetter'] = event.key.toUpperCase();\n                     this.moveNextEmpty();\n                 }\n             }\n         },\n\n         gridFullCheck() {\n             for (let iY = 0; iY < this.staticGrid.length; iY++) {\n                 for (let iX = 0; iX < this.staticGrid[iY].length; iX++) {\n                     if (this.dynamicGrid[iY][iX]['currentLetter'] !== this.staticGrid[iY][iX]['correctLetter']) {\n                         this.$emit('grid-full', \"incorrect\"); \n                         return;\n                     }\n                 }\n             }\n             this.$emit('grid-full', \"correct\");\n             return \n         },\n\n         addKeyEventListener() {\n             //console.log(\"added keyEventListener\")\n             window.addEventListener('keydown', this.keyHandler);\n         },\n\n         removeKeyEventListener() {\n             //console.log('removed keyEventListener')\n             window.removeEventListener('keydown', this.keyHandler);\n         },\n     },\n     mounted() {\n         // console.log(this.staticGrid)\n         window.addEventListener('keydown', this.keyHandler);\n\n         this.focusEar({\n             y: 0,\n             x: 0,\n             direction: this.currentDirection,\n             acrossNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x]['acrossNum'],\n             downNum: this.staticGrid[this.currentPoint.y][this.currentPoint.x]['downNum'],\n         })\n     }\n }\n</script>\n\n<style scoped>\n .gridContainer {\n     display: grid;\n }\n</style>\n","<template>\n    <span :tabindex=\"isBlock ? null : -1\" \n          class=\"square\" :class=\"classObject\"\n          :style=\"squareStyle\"\n          @click=\"selectSquare\" \n          @keydown=\"keyHandler\"\n          ref=\"square\"\n    >\n        <span class=\"cluenum-square\"\n              :style=\"cluenumStyle\"\n        >{{ cluenum }}</span>\n        <svg class=\"svg\">\n            <circle v-if=\"isCircled && !isWordStartAcross && !isWordStartDown\"\n                    cx=\"0.95em\"\n                    cy=\"0.95em\"\n                    r=\"13px\"\n                    :stroke=\"settingsObject.selectedTheme.fgAlt\"\n                    stroke-width=\"1px\"\n                    stroke-opacity=\"0.9\"\n                    fill-opacity=\"0\"/>\n            <g v-if=\"isCircled && (isWordStartAcross || isWordStartDown)\"\n               :stroke=\"settingsObject.selectedTheme.fgAlt\"\n               stroke-width=\"1px\"\n               stroke-opacity=\"0.9\"\n               fill-opacity=\"0\">\n                <path d=\"\n                         M 14 2.5\n                         A 13 13 0 1 1 2 15\"/>\n            </g>\n        </svg>\n        <span class=\"current-letter\"\n              :style=\"currentLetterStyle\"\n        > {{ currentLetter }} </span>\n        <span v-show=\"isRebusActive\" class=\"square rebusContainer\" ref=\"rebusCont\">\n            <input v-model=\"rebusInput\"\n                   class=\"rebus-input\"\n                   style=\"text-transform: uppercase;\"\n                   :style=\"squareStyle\"\n                   @keydown.enter=\"this.$emit('rebus-enter', rebusInput)\"\n                   @focusout=\"this.$emit('rebus-blur', rebusInput)\"\n                   type=\"text\"\n                   ref=\"rebus\"\n            />\n        </span>\n    </span>\n</template>\n\n<script>\n export default {\n     name: 'square',\n     props: {\n         // static\n         x: Number,\n         y: Number,\n         correctLetter: String,\n         isBlock: Boolean,\n         isCircled: Boolean,\n         isRebus: Boolean,\n         isWordStartAcross: Boolean,\n         isWordStartDown: Boolean,\n         acrossNum: Number,\n         downNum: Number,\n         isLeft: Boolean,\n         isRight: Boolean,\n         isTop: Boolean,\n         isBot: Boolean,\n\n         // dynamic\n         currentLetter: String,\n         currentDirection: String,\n         isSecondarySelect: Boolean,\n         isPrimarySelect: Boolean,\n         isPoint: Boolean,\n         isCorrect: Boolean,\n         isIncorrect: Boolean,\n         isRebusActive: Boolean,\n\n         settingsObject: Object,\n     },\n     \n     emits: ['square-focus', 'rebus-enter', 'rebus-blur'],\n     \n     data() {\n         return {\n             rebusInput: '',\n         };\n     },\n\n     created() {\n         this.$watch('isRebusActive', this.focusRebus, {\n             immediate: true,\n             deep: true\n         })\n     },\n     \n     computed: {\n         \n         classObject() {\n             return {\n                 block: this.isBlock,\n                 circled: this.isCircled,\n                 rebus: this.isRebus,\n                 \n                 primarySelect: this.isPrimarySelect,\n                 secondarySelect: this.isSecondarySelect,\n                 isPoint: this.isPoint,\n                 isCorrect: this.isCorrect,\n                 isIncorrect: this.isIncorrect,\n                 isRebus: this.isRebusActive,\n             }\n         },\n         \n         cluenum() {\n             if (this.isWordStartAcross === true) {\n                 return this.acrossNum;\n             } else if (this.isWordStartDown === true) {\n                 return this.downNum;\n             } else {\n                 return null;\n             }\n         },\n\n         cluenumStyle() {\n             return {\n                 color: this.settingsObject.selectedTheme.fg\n             }\n         },\n\n         currentLetterStyle() {\n             if (this.isCorrect) {\n                 return {\n                     color: this.settingsObject.selectedTheme.blue,\n                     borderColor: this.settingsObject.selectedTheme.fg,\n                 }\n             }\n             if (this.isIncorrect) {\n                 return {\n                     color: this.settingsObject.selectedTheme.red,\n                     borderColor: this.settingsObject.selectedTheme.fg,\n                 }\n             } else {\n                 return {\n                     color: this.settingsObject.selectedTheme.fg\n                 }\n             }\n         },\n\n         squareStyle() {\n             let styleObj = {}\n             styleObj['color'] = this.settingsObject.selectedTheme.fg;\n             \n             if (this.isBlock) {\n                 styleObj['background-color'] = this.settingsObject.selectedTheme.fg;\n             }\n             if (this.isPrimarySelect) {\n                 styleObj['background-color'] = this.settingsObject.selectedTheme.darkBlue;\n             }\n             if (this.isSecondarySelect) {\n                 styleObj['background-color'] = this.settingsObject.selectedTheme.base2;\n             }\n             if (this.isPoint) {\n                 styleObj['background-color'] = this.settingsObject.selectedTheme.green;\n             }\n\n             // border stuff\n             if (this.isLeft) {\n                 if (this.isTop) {\n                     // top left\n                     styleObj['border-width'] = \"2px 1px 0 2px\"\n                 } else if (this.isBot) {\n                     // bottom left\n                     styleObj['border-width'] = \"1px 1px 2px 2px\"\n                 } else {\n                     // left edge\n                     styleObj['border-width'] = \"1px 1px 0 2px\"\n                 }\n             } else if (this.isRight) {\n                 if (this.isTop) {\n                     styleObj['border-width'] = \"2px 2px 0 0\"\n                 } else if (this.isBot) {\n                     styleObj['border-width'] = \"1px 2px 2px 0\"\n                 } else {\n                     styleObj['border-width'] = \"1px 2px 0 0\"\n                 }\n             } else if (this.isTop) {\n                 // normal top (not top left or top right)\n                 styleObj['border-width'] = \"2px 1px 0 0\"\n             } else if (this.isBot) {\n                 // normal bot (not bot left or bot right)\n                 styleObj['border-width'] = \"1px 1px 2px 0\"\n             } else if (!this.isRight && !this.isLeft && !this.isTop && !this.isBot) {\n                 // middle square\n                 styleObj['border-width'] = \"1px 1px 0 0\"\n             }\n             styleObj['border-style'] = \"solid\";\n             return styleObj;\n         }\n     },\n     \n     methods: {\n         keyHandler() {\n             if (event.key === event.key.toLowerCase()) {\n                 this.letter = event.key.toUpperCase()\n             } // maybe add if it's uppercase do penciling\n             //console.log(event.key)\n             //console.log('keyHandler')\n         },\n         \n         selectSquare() {\n             if (this.isBlock != true) {\n                 this.$emit('square-focus', {\n                     acrossNum: this.acrossNum,\n                     downNum: this.downNum,\n                     direction: this.currentDirection,\n                     x: this.x,\n                     y: this.y,\n                 });\n                 //console.log('selected');   \n             }\n         },\n\n         focusRebus() {\n             if (this.isRebusActive) {\n                 this.$nextTick(() => {\n                     this.$refs.rebus.focus();\n                 });\n             }\n         }\n     },\n }\n</script>\n\n<style scoped>\n .cluenum-square {\n     position: absolute;\n     float: left;\n     font-size: 10px;\n     white-space: nowrap;\n     margin-left: 1px;\n     margin-top: -1px;\n     z-index: 2;\n     /* disable text selection */\n     -webkit-user-select: none; /* Safari */        \n     -moz-user-select: none; /* Firefox */\n     -ms-user-select: none; /* IE10+/Edge */\n     user-select: none; /* Standard */\n }\n .rebusContainer {\n     padding: 0;\n     margin: 0;\n     position: absolute;\n     z-index: 1;\n     width: 2.5em;\n     height: 2em;\n     /* borders or outline still appear... possibly inherited from square */\n     border: none;\n     outline: none;\n }\n .rebus-input {\n     padding-left: 2px;\n     padding-right: 2px;\n     padding-top: 5px;\n     padding-bottom: 5px;\n     margin: 0;\n     width: 100%;\n     border: none;\n     line-height: 140%;\n     outline: none;\n }\n span:focus {\n     outline: none\n }\n .square {\n     display: inline-block;\n     /* border: 1px solid; */\n     font-weight: normal;\n     cursor: default;\n     white-space: nowrap;\n     overflow: hidden;\n }\n .current-letter {\n     position: relative;\n     top: 0.3em;\n     left: 0.4em;\n     font-size: 20px;\n }\n .block {\n     /* border: 1px solid; */\n }\n .isPoint {\n     outline: none;\n }\n .svg {\n     position: absolute;\n     z-index: 0;\n }\n</style>\n","import { render } from \"./square.vue?vue&type=template&id=e52d2334&scoped=true&bindings={\\\"x\\\":\\\"props\\\",\\\"y\\\":\\\"props\\\",\\\"correctLetter\\\":\\\"props\\\",\\\"isBlock\\\":\\\"props\\\",\\\"isCircled\\\":\\\"props\\\",\\\"isRebus\\\":\\\"props\\\",\\\"isWordStartAcross\\\":\\\"props\\\",\\\"isWordStartDown\\\":\\\"props\\\",\\\"acrossNum\\\":\\\"props\\\",\\\"downNum\\\":\\\"props\\\",\\\"isLeft\\\":\\\"props\\\",\\\"isRight\\\":\\\"props\\\",\\\"isTop\\\":\\\"props\\\",\\\"isBot\\\":\\\"props\\\",\\\"currentLetter\\\":\\\"props\\\",\\\"currentDirection\\\":\\\"props\\\",\\\"isSecondarySelect\\\":\\\"props\\\",\\\"isPrimarySelect\\\":\\\"props\\\",\\\"isPoint\\\":\\\"props\\\",\\\"isCorrect\\\":\\\"props\\\",\\\"isIncorrect\\\":\\\"props\\\",\\\"isRebusActive\\\":\\\"props\\\",\\\"settingsObject\\\":\\\"props\\\",\\\"rebusInput\\\":\\\"data\\\",\\\"classObject\\\":\\\"options\\\",\\\"cluenum\\\":\\\"options\\\",\\\"cluenumStyle\\\":\\\"options\\\",\\\"currentLetterStyle\\\":\\\"options\\\",\\\"squareStyle\\\":\\\"options\\\",\\\"keyHandler\\\":\\\"options\\\",\\\"selectSquare\\\":\\\"options\\\",\\\"focusRebus\\\":\\\"options\\\"}\"\nimport script from \"./square.vue?vue&type=script&lang=js\"\nexport * from \"./square.vue?vue&type=script&lang=js\"\n\nimport \"./square.vue?vue&type=style&index=0&id=e52d2334&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-e52d2334\"\n\nexport default script","import { render } from \"./grid.vue?vue&type=template&id=6170f946&scoped=true&bindings={\\\"gridObject\\\":\\\"props\\\",\\\"cluesDown\\\":\\\"props\\\",\\\"cluesAcross\\\":\\\"props\\\",\\\"rebusObj\\\":\\\"props\\\",\\\"settingsObject\\\":\\\"props\\\",\\\"currentDirection\\\":\\\"data\\\",\\\"dynamicGrid\\\":\\\"data\\\",\\\"previousSelectAcross\\\":\\\"data\\\",\\\"previousSelectDown\\\":\\\"data\\\",\\\"previousPoint\\\":\\\"data\\\",\\\"currentPoint\\\":\\\"data\\\",\\\"currentSquaresFilled\\\":\\\"data\\\",\\\"cssGridVars\\\":\\\"options\\\",\\\"cssRowVars\\\":\\\"options\\\",\\\"createRebusObj\\\":\\\"options\\\",\\\"staticGrid\\\":\\\"options\\\",\\\"squareCount\\\":\\\"options\\\",\\\"firstSquareCoor\\\":\\\"options\\\",\\\"createDynamicGrid\\\":\\\"options\\\",\\\"reCreateDynamicGrid\\\":\\\"options\\\",\\\"clearPrevious\\\":\\\"options\\\",\\\"activateRebus\\\":\\\"options\\\",\\\"rebusEnter\\\":\\\"options\\\",\\\"rebusBlur\\\":\\\"options\\\",\\\"focusEar\\\":\\\"options\\\",\\\"focusFromClueClick\\\":\\\"options\\\",\\\"movePointNaive\\\":\\\"options\\\",\\\"movePointSmart\\\":\\\"options\\\",\\\"switchDirection\\\":\\\"options\\\",\\\"switchDirectionAndFocus\\\":\\\"options\\\",\\\"clearSquareLetter\\\":\\\"options\\\",\\\"moveForwardCurrentDirection\\\":\\\"options\\\",\\\"moveBackwardCurrentDirection\\\":\\\"options\\\",\\\"getAcrossWordStart\\\":\\\"options\\\",\\\"getAcrossWordEnd\\\":\\\"options\\\",\\\"getNextAcrossNum\\\":\\\"options\\\",\\\"getNextAcrossWord\\\":\\\"options\\\",\\\"getPreviousAcrossNum\\\":\\\"options\\\",\\\"getPreviousAcrossWord\\\":\\\"options\\\",\\\"moveAcrossWord\\\":\\\"options\\\",\\\"getDownWordStart\\\":\\\"options\\\",\\\"getDownWordEnd\\\":\\\"options\\\",\\\"isDownWordEnd\\\":\\\"options\\\",\\\"getNextDownNum\\\":\\\"options\\\",\\\"getNextDownWord\\\":\\\"options\\\",\\\"getPreviousDownNum\\\":\\\"options\\\",\\\"getPreviousDownWord\\\":\\\"options\\\",\\\"moveDownWord\\\":\\\"options\\\",\\\"getNextEmptyAcross\\\":\\\"options\\\",\\\"getNextEmptyDown\\\":\\\"options\\\",\\\"moveNextEmpty\\\":\\\"options\\\",\\\"moveStartWord\\\":\\\"options\\\",\\\"moveEndWord\\\":\\\"options\\\",\\\"clearCheckSquare\\\":\\\"options\\\",\\\"checkSquare\\\":\\\"options\\\",\\\"checkWord\\\":\\\"options\\\",\\\"checkGrid\\\":\\\"options\\\",\\\"revealSquare\\\":\\\"options\\\",\\\"revealWord\\\":\\\"options\\\",\\\"revealGrid\\\":\\\"options\\\",\\\"clearWordLetters\\\":\\\"options\\\",\\\"clearGrid\\\":\\\"options\\\",\\\"clickHandler\\\":\\\"options\\\",\\\"keyHandler\\\":\\\"options\\\",\\\"gridFullCheck\\\":\\\"options\\\",\\\"addKeyEventListener\\\":\\\"options\\\",\\\"removeKeyEventListener\\\":\\\"options\\\"}\"\nimport script from \"./grid.vue?vue&type=script&lang=js\"\nexport * from \"./grid.vue?vue&type=script&lang=js\"\n\nimport \"./grid.vue?vue&type=style&index=0&id=6170f946&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-6170f946\"\n\nexport default script","<template>\n    <singleClue v-for=\"clue in clues\"\n                :key=\"clue.Num\"\n                :ref=\"clue.Num.toString()+direction\"\n                @primary-clue-focus=\"primaryClueFocusEar($event)\"\n                :clueObject=\"clue\"\n                :direction=\"direction\"\n                :clueFocus=\"clueFocus\"\n                :settingsObject=\"settingsObject\"\n                @clue-click=\"clueClickToAppEar($event)\"\n        ></singleClue>\n</template>\n\n<script>\n import singleClue from './singleClue.vue'\n \n export default {\n     name: 'clues',\n     emits: [\n         'primary-clue-focus-to-app',\n         'primaryClueFocusToApp',\n         'clue-click-to-app',\n         'clueClickToApp'\n     ],\n     components: {\n         singleClue,\n     },\n     \n     props: {\n         clues: Array,\n         direction: String,\n         clueFocus: Object,\n         settingsObject: Object,\n     },\n\n     methods: {\n         primaryClueFocusEar(clueEvent) {\n             this.$emit('primary-clue-focus-to-app', clueEvent)\n         },\n\n         clueClickToAppEar(event) {\n             this.$emit('clue-click-to-app', event)\n         }\n     },\n     \n     updated() {\n         // not all that elegant but ok\n         let scrollClue;\n         if (this.clueFocus.primary[this.clueFocus.primary.length-1] === this.direction) {\n             // if the primary focus's direction is the same as current direction\n             scrollClue = this.clueFocus.primary;\n         } else if (this.clueFocus.secondary[this.clueFocus.secondary.length-1] === this.direction) {\n             scrollClue = this.clueFocus.secondary;\n         }\n         this.$refs[scrollClue].$el.scrollIntoView({\n             behavior: \"smooth\"\n         });\n     }\n }\n</script>\n\n","<template>\n    <p class=\"singleClue\" :style=\"whichFocus\" @click=\"clueClickEar\">\n        {{ clueKey + \": \" + clueObject.Clue }}\n    </p>\n</template>\n\n<script>\n export default {\n     name: 'singleClue',\n     emits: [\n         'primary-clue-focus',\n         'secondary-clue-focus',\n         'clue-click'\n     ],\n     props: {\n         clueObject: Object,\n         direction: String,  // either 'A' or 'D'\n         clueFocus: Object,\n         settingsObject: Object,\n     },\n     data() {\n         return {\n             clueNum: this.clueObject.Num,\n         }\n     },\n     computed: {\n         clueKey() {\n             return this.clueNum.toString() + this.direction;\n         },\n         whichFocus() {\n             //console.log('whichFocus called')\n             //console.log(this.clueFocus)\n             let primaryFocusDirection = this.clueFocus.primary.slice(-1);\n             let primaryFocusNum = Number(this.clueFocus.primary.slice(0, -1));\n             let secondaryFocusDirection = this.clueFocus.secondary.slice(-1);\n             let secondaryFocusNum = Number(this.clueFocus.secondary.slice(0, -1));\n\n             if (this.direction === primaryFocusDirection) {\n                 //console.log('first branch')\n                 if (this.clueNum === primaryFocusNum) {\n                     //console.log('returning primary')\n                     // this emit will be heard in the active clue component\n                     //this.$refs[scrollNum].scrollIntoView()\n                     this.$emit('primary-clue-focus',\n                                {composed: this.clueKey + \": \" + this.clueObject.Clue,\n                                 clueNum: this.clueNum});\n                     return {\n                         backgroundColor: this.settingsObject.selectedTheme.darkBlue,\n                         padding: \"0.3em\",\n                         borderRadius: \"5px\"\n                         //color: this.settingsObject.selectedTheme.fgAlt\n                     }\n                 } else {\n                     return null\n                 }\n             } else if (this.direction === secondaryFocusDirection) {\n                 if (this.clueNum === secondaryFocusNum) {\n                     this.$emit('secondary-clue-focus',\n                                {clueNum: this.clueNum});\n                     return {\n                         backgroundColor: this.settingsObject.selectedTheme.base2,\n                         padding: \"0.3em\",\n                         borderRadius: \"5px\"\n                         //color: this.settingsObject.selectedTheme.fgAlt\n                     }\n                 } else {\n                     return null\n                 }\n             } else {\n                 return null   \n             }\n         }\n     },\n\n     methods: {\n         clueClickEar() {\n             this.$emit('clue-click', {\n                 num: this.clueObject.Num,\n                 direction: this.direction\n             })\n         }\n     }\n }\n</script>\n","import { render } from \"./singleClue.vue?vue&type=template&id=3f154f8e&bindings={\\\"clueObject\\\":\\\"props\\\",\\\"direction\\\":\\\"props\\\",\\\"clueFocus\\\":\\\"props\\\",\\\"settingsObject\\\":\\\"props\\\",\\\"clueNum\\\":\\\"data\\\",\\\"clueKey\\\":\\\"options\\\",\\\"whichFocus\\\":\\\"options\\\",\\\"clueClickEar\\\":\\\"options\\\"}\"\nimport script from \"./singleClue.vue?vue&type=script&lang=js\"\nexport * from \"./singleClue.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./clueContainer.vue?vue&type=template&id=a42924e4&bindings={\\\"clues\\\":\\\"props\\\",\\\"direction\\\":\\\"props\\\",\\\"clueFocus\\\":\\\"props\\\",\\\"settingsObject\\\":\\\"props\\\",\\\"primaryClueFocusEar\\\":\\\"options\\\",\\\"clueClickToAppEar\\\":\\\"options\\\"}\"\nimport script from \"./clueContainer.vue?vue&type=script&lang=js\"\nexport * from \"./clueContainer.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n    <div class=\"dropdown\"\n         @mouseover=\"checkMouse = true; checkActive = true\"\n         @mouseleave=\"checkMouse = false; checkActive = false\"\n    >\n        <button class=\"dropbtn\"\n                :style=\"styleToolbar('dropbtncheck')\">Check</button>\n        <div class=\"dropcontent\" :style=\"styleToolbar('dropcontent')\" v-if=\"checkActive\">\n            <div class=\"menuitem\"\n                 @mouseover=\"styleToolbar('menuitemhover')\"\n                 @mouseleave=\"styleToolbar('menuitemleave')\"\n                 @click=\"this.$emit('check-square')\">Square</div>\n            <div class=\"menuitem\" @click=\"this.$emit('check-word')\">Word</div>\n            <div class=\"menuitem\" @click=\"this.$emit('check-grid')\">Grid</div>\n        </div>\n    </div>\n    \n    <div class=\"dropdown\"\n         @mouseover=\"revealMouse = true; revealActive = true\"\n         @mouseleave=\"revealMouse = false; revealActive = false\"\n    >\n        <button class=\"dropbtn\"\n                :style=\"styleToolbar('dropbtnreveal')\">Reveal</button>\n        <div class=\"dropcontent\" :style=\"styleToolbar('dropcontent')\" v-if=\"revealActive\">\n            <div class=\"menuitem\" @click=\"this.$emit('reveal-square')\">Square</div>\n            <div class=\"menuitem\" @click=\"this.$emit('reveal-word')\">Word</div>\n            <div class=\"menuitem\" @click=\"this.$emit('reveal-grid')\">Grid</div>\n        </div>\n    </div>\n    \n    <div class=\"dropdown\"\n         @mouseover=\"clearMouse = true; clearActive = true\"\n         @mouseleave=\"clearMouse = false; clearActive = false\"\n    >\n        <button class=\"dropbtn\"\n                :style=\"styleToolbar('dropbtnclear')\">Clear</button>\n        <div class=\"dropcontent\" :style=\"styleToolbar('dropcontent')\" v-if=\"clearActive\">\n            <div class=\"menuitem\" @click=\"clearStopwatch\">Time</div>\n            <div class=\"menuitem\" @click=\"this.$emit('clear-grid')\">Grid</div>\n        </div>\n    </div>\n    \n    <button class=\"dropbtn\"\n            :style=\"styleToolbar('dropbtnrebus')\"\n            @mouseover=\"rebusMouse = true\"\n            @mouseleave=\"rebusMouse = false\"\n            @click=\"this.$emit('rebus')\">Rebus</button>\n    \n    <div class=\"dropdown\">\n        <button class=\"dropbtn\"\n                :style=\"styleToolbar('dropbtntime')\"\n                @mouseover=\"timeMouse = true\"\n                @mouseleave=\"timeMouse = false\">\n            <stopwatch\n                :isFinishedShow=\"isFinishedShow\"\n                ref=\"stopwatch\">\n            </stopwatch>\n        </button>\n    </div>\n    \n    <div class=\"dropdown settings-button\">\n        <button class=\"dropbtn\"\n                :style=\"styleToolbar('dropbtnsettings')\"\n                @click=\"showSettings\"\n                @mouseover=\"settingsMouse = true\"\n                @mouseleave=\"settingsMouse = false\">\n            Settings\n        </button>\n    </div>\n    \n    <div>\n        <transition name=\"modal\">\n            <div v-show=\"isSettingsShow\">\n                <div class=\"overlay\" @click.self=\"hideSettings\">\n                    <div class=\"modal\" :style=\"modalStyle\">\n                        <settings ref=\"settings\"\n                                  @settings=\"this.$emit('settings-to-app', $event)\"\n                                  @puzzle-send=\"this.$emit('puzzle-send-to-app', $event)\"\n                        ></settings>\n                    </div>\n                </div>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<script>\n import stopwatch from './stopwatch.vue'\n import settings from './settings.vue'\n \n export default {\n     name: 'toolbar',\n     \n     components: {\n         stopwatch,\n         settings\n     },\n     \n     props: {\n         currentPoint: Object,\n         isFinishedShow: Boolean,\n         settingsObject: Object\n     },\n     \n     emits: ['check-square',\n             'check-word',\n             'check-grid',\n             'reveal-square',\n             'reveal-word',\n             'reveal-grid',\n             'clear-timer',\n             'clear-grid',\n             'rebus',\n             'settings-to-app',\n             'checkSquare',\n             'checkWord',\n             'checkGrid',\n             'revealSquare',\n             'revealWord',\n             'revealGrid',\n             'clearGrid',\n             'settingsToApp',\n             'puzzle-send-to-app',\n             'puzzleSendToApp',\n             'settings-shown',\n             'settings-hidden',\n             'settingsShown',\n             \"settingsHidden\"\n     ],\n\n     computed: {\n         modalStyle() {\n             return {\n                 backgroundColor: this.settingsObject.selectedTheme.bg\n             }\n         }\n     },\n\n     data() {\n         return {\n             checkActive: false,\n             checkMouse: false,\n             revealActive: false,\n             clearActive: false,\n             revealMouse: false,\n             clearMouse: false,\n             rebusMouse: false,\n             timeMouse: false,\n             settingsMouse: false,\n             isSettingsShow: false,\n         }\n     },\n\n     methods: {\n         // can't implement clickaway elegantly bc i didn't make the dropdowns\n         // a component, so compromise with mouseover/leave\n\n         showSettings() {\n             this.$emit('settings-shown');\n             this.$refs.stopwatch.stopStopwatch();\n             this.isSettingsShow = true;\n         },\n\n         hideSettings() {\n             this.$emit('settings-hidden')\n             this.isSettingsShow = false;\n             this.$refs.stopwatch.startStopwatch();\n         },\n\n         clearStopwatch() {\n             this.$refs.stopwatch.resetStopwatch();\n         },\n\n         styleToolbar(cl) {\n             switch(cl) {\n                 case \"dropbtncheck\":\n                     if (this.checkMouse) {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.base1,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     } else {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.bg,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     }\n                 case \"dropbtnreveal\":\n                     if (this.revealMouse) {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.base1,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     } else {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.bg,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     }\n                 case \"dropbtnclear\":\n                     if (this.clearMouse) {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.base1,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     } else {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.bg,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     }\n                 case \"dropbtnrebus\":\n                     if (this.rebusMouse) {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.base1,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     } else {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.bg,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     }\n                 case \"dropbtntime\":\n                     if (this.timeMouse) {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.base1,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     } else {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.bg,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     }\n                 case \"dropbtnsettings\":\n                     if (this.settingsMouse) {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.base1,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     } else {\n                         return {\n                             backgroundColor: this.settingsObject.selectedTheme.bg,\n                             color: this.settingsObject.selectedTheme.fg,\n                         }\n                     }\n                 case \"dropcontent\":\n                     return {\n                         backgroundColor: this.settingsObject.selectedTheme.base1,\n                         color: this.settingsObject.selectedTheme.fg,\n                     }\n             }\n             return null;\n         }\n     },\n }\n</script>\n\n<style scoped>\n .dropbtn {\n     padding: 10px;\n     font-size: 16px;\n     border: none;\n     cursor: pointer;\n     border-radius: 10px;\n     outline: none;\n }\n\n /* Dropdown button on hover & focus */\n .dropbtn:hover {\n     outline: none;\n }\n\n /* The container <div> - needed to position the dropdown content */\n .dropdown {\n     position: relative;\n     display: inline-block;\n     padding-right: 5px;\n }\n\n /* Dropdown Content (Hidden by Default) */\n .dropcontent {\n     position: absolute;\n     width: 60px;\n     padding: 5px;\n     box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n     z-index: 1;\n     display: block;\n     border-radius: 10px;\n }\n\n .settings-button {\n     float: right;\n }\n\n .menuitem:hover {\n     border-radius: 5px;\n     padding-left: 1px;\n     cursor: pointer;\n }\n .modal {\n     width: 500px;\n     margin: 0px auto;\n     padding: 20px;\n     border-radius: 5px;\n     box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n     transition: all 0.2s ease-in;\n     /* font-family: Helvetica, Arial, sans-serif; */\n }\n .fadeIn-enter {\n     opacity: 0;\n }\n\n .fadeIn-leave-active {\n     opacity: 0;\n     transition: all 0.2s step-end;\n }\n\n .fadeIn-enter .modal,\n .fadeIn-leave-active.modal {\n     transform: scale(1.1);\n }\n\n .overlay {\n     position: fixed;\n     top: 0;\n     left: 0;\n     display: flex;\n     justify-content: center;\n     align-items: center;\n     left: 0.5em;\n     top: 0.5em;\n     padding: 1em;\n     border-radius: 5px;\n     max-width: 870px;\n     max-height: 600px;\n     background: #00000094;\n     z-index: 999;\n     transition: opacity 0.2s ease;\n }\n</style>\n","<template>\n    <span @click=\"toggleStopwatch\">{{ formattedTime }}</span>\n</template>\n\n<script>\n export default {\n     name: 'stopwatch',\n     props: {\n         isFinishedShow: Boolean,\n     },\n\n     data() {\n         return {\n             timerInterval: null,\n             isStopwatchActive: true,\n             countedTime: 0  // in seconds\n         }\n     },\n\n     computed: {\n         formattedTime() {\n             let minutes = Math.floor(this.countedTime / 60);\n             let seconds = this.countedTime % 60;\n             if (seconds < 10) {\n                 seconds = `0${seconds}`\n             }\n             return `${minutes}:${seconds}`\n         }\n     },\n     \n     methods: {\n         startTimer() {\n             this.timerInterval = setInterval(this.incrementTimer, 1000);\n         },\n\n         incrementTimer() {\n             if (this.isStopwatchActive) {\n                 this.countedTime += 1;\n             }\n         },\n\n         toggleStopwatch() {\n             this.isStopwatchActive = !this.isStopwatchActive;\n         },\n\n         stopStopwatch() {\n             this.isStopwatchActive = false;\n         },\n\n         startStopwatch() {\n             this.isStopwatchActive = true;\n         },\n\n         resetStopwatch() {\n             this.countedTime = 0;\n         }\n     },\n\n     mounted() {\n         this.startTimer();\n     }\n }\n</script>\n\n<style scoped>\n .span {\n     padding: 10px;\n     font-size: 16px;\n     border: none;\n     cursor: pointer;\n     text-align: center;\n }\n</style>\n","import { render } from \"./stopwatch.vue?vue&type=template&id=cfc16586&scoped=true&bindings={\\\"isFinishedShow\\\":\\\"props\\\",\\\"timerInterval\\\":\\\"data\\\",\\\"isStopwatchActive\\\":\\\"data\\\",\\\"countedTime\\\":\\\"data\\\",\\\"formattedTime\\\":\\\"options\\\",\\\"startTimer\\\":\\\"options\\\",\\\"incrementTimer\\\":\\\"options\\\",\\\"toggleStopwatch\\\":\\\"options\\\",\\\"stopStopwatch\\\":\\\"options\\\",\\\"startStopwatch\\\":\\\"options\\\",\\\"resetStopwatch\\\":\\\"options\\\"}\"\nimport script from \"./stopwatch.vue?vue&type=script&lang=js\"\nexport * from \"./stopwatch.vue?vue&type=script&lang=js\"\n\nimport \"./stopwatch.vue?vue&type=style&index=0&id=cfc16586&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-cfc16586\"\n\nexport default script","<template>\n    <div class=\"settings-container\" :style=\"settingsContStyle\">\n        <div :style=\"headerStyle\">\n            <b>Option</b>\n        </div>\n        <div :style=\"headerStyle\">\n            <b>Current value</b>\n        </div>\n        <div :style=\"headerStyle\">\n            <b>Customize</b>\n        </div>\n        \n        <div>\n            Theme\n        </div>\n        <div>\n            {{ selectTheme }}\n        </div>\n        <div>\n            <select v-model=\"selectTheme\" :value=\"'doom_one_light'\">\n                <option value=\"doom_one_light\">doom_one_light</option>\n                <option value=\"doom_one\">doom_one</option>\n                <option value=\"doom_zenburn\">doom_zenburn</option>\n                <option value=\"doom_wilmersdorf\">doom_wilmersdorf</option>\n                <option value=\"doom_vibrant\">doom_vibrant</option>\n                <option value=\"doom_spacegrey\">doom_spacegrey</option>\n                <option value=\"doom_solarized\">doom_solarized</option>\n                <option value=\"doom_solarized_dark\">doom_solarized_dark</option>\n                <option value=\"doom_snazzy\">doom_snazzy</option>\n                <option value=\"doom_rouge\">doom_rouge</option>\n                <option value=\"doom_peacock\">doom_peacock</option>\n                <option value=\"doom_palenight\">doom_palenight</option>\n                <option value=\"doom_outrun_electric\">doom_outrun_electric</option>\n                <option value=\"doom_opera\">doom_opera</option>\n                <option value=\"doom_opera_light\">doom_opera_light</option>\n                <option value=\"doom_old_hope\">doom_old_hope</option>\n                <option value=\"doom_oceanic_next\">doom_oceanic_next</option>\n                <option value=\"doom_nord\">doom_nord</option>\n                <option value=\"doom_nord_light\">doom_nord_light</option>\n                <option value=\"doom_moonlight\">doom_moonlight</option>\n                <option value=\"doom_monokai_pro\">doom_monokai_pro</option>\n                <option value=\"doom_molokai\">doom_molokai</option>\n                <option value=\"doom_miramare\">doom_miramare</option>\n                <option value=\"doom_material\">doom_material</option>\n                <option value=\"doom_manegram\">doom_manegram</option>\n                <option value=\"doom_laserwave\">doom_laserwave</option>\n                <option value=\"doom_horizon\">doom_horizon</option>\n                <option value=\"doom_henna\">doom_henna</option>\n                <option value=\"doom_fairy_floss\">doom_fairy_floss</option>\n                <option value=\"doom_ephemeral\">doom_ephemeral</option>\n                <option value=\"doom_dracula\">doom_dracula</option>\n                <option value=\"doom_dark_plus\">doom_dark_plus</option>\n                <option value=\"doom_city_lights\">doom_city_lights</option>\n                <option value=\"doom_challenger_dark\">doom_challenger_dark</option>\n                <option value=\"doom_acario_light\">doom_acario_dark</option>\n                <option value=\"doom_iosvkem\">doom_iosvkem</option>\n            </select>\n        </div>\n        \n        <!-- <div>\n             Upload json\n             </div>\n             <div>\n             {{ // uploadJson }}\n             </div>\n             <div>\n             <input type=\"file\" id=\"uploaded\">\n             </div> -->\n        \n        <div>\n            Move right by square\n        </div>\n        <div>\n            <div v-for=\"bind in moveRightSquare\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveRightSquare, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveRightSquare = moveRightSquare.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Move left by square\n        </div>\n        <div>\n            <div v-for=\"bind in moveLeftSquare\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveLeftSquare, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveLeftSquare = moveLeftSquare.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Move up by square\n        </div>\n        <div>\n            <div v-for=\"bind in moveUpSquare\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveUpSquare, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveUpSquare = moveUpSquare.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Move down by square\n        </div>\n        <div>\n            <div v-for=\"bind in moveDownSquare\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveDownSquare, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveDownSquare = moveDownSquare.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n\n        <div>\n            Delete square\n        </div>\n        <div>\n            <div v-for=\"bind in deleteSquare\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(deleteSquare, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"deleteSquare = deleteSquare.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Move right by word\n        </div>\n        <div>\n            <div v-for=\"bind in moveRightWord\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveRightWord, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveRightWord = moveRightWord.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Move left by word\n        </div>\n        <div>\n            <div v-for=\"bind in moveLeftWord\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveLeftWord, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveLeftWord = moveLeftWord.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        \n        <div>\n            Move to start of word\n        </div>\n        <div>\n            <div v-for=\"bind in moveStartWord\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveStartWord, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveStartWord = moveStartWord.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Move to end of word\n        </div>\n        <div>\n            <div v-for=\"bind in moveEndWord\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(moveEndWord, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"moveEndWord = moveEndWord.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Delete rest of word\n        </div>\n        <div>\n            <div v-for=\"bind in deleteWord\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(deleteWord, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"deleteWord = deleteWord.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div>\n            Switch direction\n        </div>\n        <div>\n            <div v-for=\"bind in switchDirection\"\n                 :key=\"bind\"\n                 class=\"bind-item\"\n                 @click=\"removeBind(switchDirection, bind)\"\n                 :style=\"removeBindStyle\"\n            >\n                {{ bind.toString() }}\n            </div>\n        </div>\n        <div>\n            <settingsInput\n                @valid-keybind=\"switchDirection = switchDirection.concat($event)\"\n            >\n            </settingsInput>\n        </div>\n        \n        <div class=\"apply-settings\" @click=\"emitSettings\">\n            <button class=\"apply-settings\" :style=\"applyButtonStyle\">Apply</button>\n        </div>\n    </div>\n</template>\n\n<script>\n import settingsInput from './settingsInput.vue'\n \n import doom_zenburn from '../assets/doom_zenburn.json'\n import doom_wilmersdorf from '../assets/doom_wilmersdorf.json'\n import doom_vibrant from '../assets/doom_vibrant.json'\n import doom_spacegrey from '../assets/doom_spacegrey.json'\n import doom_solarized from '../assets/doom_solarized.json'\n import doom_solarized_dark from '../assets/doom_solarized_dark.json'\n import doom_snazzy from '../assets/doom_snazzy.json'\n import doom_rouge from '../assets/doom_rouge.json'\n import doom_peacock from '../assets/doom_peacock.json'\n import doom_palenight from '../assets/doom_palenight.json'\n import doom_outrun_electric from '../assets/doom_outrun_electric.json'\n import doom_opera from '../assets/doom_opera.json'\n import doom_opera_light from '../assets/doom_opera_light.json'\n import doom_one from '../assets/doom_one.json'\n import doom_one_light from '../assets/doom_one_light.json'\n import doom_old_hope from '../assets/doom_old_hope.json'\n import doom_oceanic_next from '../assets/doom_oceanic_next.json'\n import doom_nord from '../assets/doom_nord.json'\n import doom_nord_light from '../assets/doom_nord_light.json'\n import doom_moonlight from '../assets/doom_moonlight.json'\n import doom_monokai_pro from '../assets/doom_monokai_pro.json'\n import doom_molokai from '../assets/doom_molokai.json'\n import doom_miramare from '../assets/doom_miramare.json'\n import doom_material from '../assets/doom_material.json'\n import doom_manegram from '../assets/doom_manegram.json'\n import doom_laserwave from '../assets/doom_laserwave.json'\n import doom_horizon from '../assets/doom_horizon.json'\n import doom_henna from '../assets/doom_henna.json'\n import doom_fairy_floss from '../assets/doom_fairy_floss.json'\n import doom_ephemeral from '../assets/doom_ephemeral.json'\n import doom_dracula from '../assets/doom_dracula.json'\n import doom_dark_plus from '../assets/doom_dark_plus.json'\n import doom_city_lights from '../assets/doom_city_lights.json'\n import doom_challenger_dark from '../assets/doom_challenger_dark.json'\n import doom_acario_light from '../assets/doom_acario_light.json'\n import doom_acario_dark from '../assets/doom_acario_dark.json'\n import doom_iosvkem from '../assets/doom_iosvkem.json' \n \n export default {\n     name: 'settings',\n\n     components: {\n         settingsInput\n     },\n\n     emits: ['settings', 'puzzle-send'],\n\n     data() {\n         return {\n             selectTheme: \"doom_fairy_floss\",\n             selectedTheme: {\n                 // this is here so that app doesn't throw an error. but\n                 // you just have to change \"selectTheme\" to change the\n                 // default theme\n                 \"bg\": \"#fafafa\",\n                 \"bgAlt\": \"#f0f0f0\",\n                 \"base0\": \"#f0f0f0\",\n                 \"base1\": \"#e7e7e7\",\n                 \"base2\": \"#dfdfdf\",\n                 \"base3\": \"#c6c7c7\",\n                 \"base4\": \"#9ca0a4\",\n                 \"base5\": \"#383a42\",\n                 \"base6\": \"#202328\",\n                 \"base7\": \"#1c1f24\",\n                 \"base8\": \"#1b2229\",\n                 \"fg\": \"#383a42\",\n                 \"fgAlt\": \"#c6c7c7\",\n                 \"red\": \"#e45649\",\n                 \"orange\": \"#da8548\",\n                 \"green\": \"#50a14f\",\n                 \"teal\": \"#4db5bd\",\n                 \"yellow\": \"#986801\",\n                 \"blue\": \"#4078f2\",\n                 \"darkBlue\": \"#a0bcf8\",\n                 \"magenta\": \"#a626a4\",\n                 \"violet\": \"#b751b6\",\n                 \"cyan\": \"#0184bc\",\n                 \"darkCyan\": \"#005478\"\n             },\n             uploadJson: null,\n             moveRightSquare: [\"ArrowRight\", \"Ctrl-f\"],\n             moveLeftSquare: [\"ArrowLeft\", \"Ctrl-b\"],\n             moveUpSquare: [\"ArrowUp\", \"Ctrl-p\"],\n             moveDownSquare: [\"ArrowDown\", \"Ctrl-n\"],\n             deleteSquare: [\"Backspace\", \"Ctrl-d\"],\n             moveRightWord: [\"Tab\", \"Enter\"],\n             moveLeftWord: [\"Shift-Tab\", \"Shift-Enter\"],\n             moveStartWord: [\"Ctrl-a\"],\n             moveEndWord: [\"Ctrl-e\"],\n             deleteWord: [\"Ctrl-k\"],\n             switchDirection: [\"Space\"],\n         }\n     },\n     \n     methods: {\n         parseBind(bindString) {\n             // parse bindString into a conditional statement that returns true if event corresponds to bindString\n             // if bindString represents one key, it must be one of legalSingles\n             // if bindString represents two keys, the first must be a modifier in legalMods and the second\n             // must either be a single letter or be in the legalSingles\n             let split = bindString.split('-');\n             let legalSingles = [\"Tab\", \"Space\", \"Backspace\", \"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\", \"Enter\"];\n             let legalMods = [\"Ctrl\", \"Shift\"]\n             if (split.length === 1) {\n                 // if there's no hyphen, and the bindString must be Tab, Space, Backspace, or an Arrow\n                 if (split[0] === \"Space\") {\n                     return \"event.key === ' ' && event.ctrlKey === false && event.shiftKey === false\";\n                 } else if (legalSingles.includes(split[0])) {\n                     // return a function that checks if event.key is the same as the bind\n                     return `event.key === \"${split[0]}\" && event.ctrlKey === false && event.shiftKey === false`\n                 } else {\n                     console.log(\"parseBind: invalid binding\");\n                     return;\n                 }\n             } else if (split.length === 2) {\n                 // if there's a modifier\n                 if (legalMods.includes(split[0]) && (legalSingles.includes(split[1]) || /^\\w$/.test(split[1]))) {\n                     // validation: the first element must be in legalMods; the second must\n                     // either be in legalSingles or be a single letter\n                     return `event.${split[0].toLowerCase()}Key === true && event.key === \"${split[1]}\"`;\n                 } else {\n                     console.log(\"parseBind: invalid binding\");\n                     return;\n                 }\n             } else {\n                 console.log(\"parseBind: invalid binding\");\n                 return;\n             }\n         },\n\n         parseBindList(bindList) {\n             // return a function that returns true if event corresponds to one\n             // of the bindStrings in bindList\n             let testString = \"\";\n             let thisString = \"\";\n             for (let i = 0; i < bindList.length-1; i++) {\n                 // add the parsed element of bindList to testString, except the last one\n                 thisString = this.parseBind(bindList[i]);\n                 testString += `(${thisString}) || `;\n             }\n             // do the last element (no || after)\n             thisString = this.parseBind(bindList[bindList.length-1]);\n             testString += `(${thisString})`;\n             return Function('event', `return ${testString}`);\n         },\n\n         createBindFunctionObject() {\n             // hardcoded for readability. return an object with keys equal to\n             // various grid operations and values equal to the function testing\n             // if this event is a key in that key's bindList\n             return {\n                 moveRightSquare: this.parseBindList(this.moveRightSquare),\n                 moveLeftSquare: this.parseBindList(this.moveLeftSquare),\n                 moveUpSquare: this.parseBindList(this.moveUpSquare),\n                 moveDownSquare: this.parseBindList(this.moveDownSquare),\n                 deleteSquare: this.parseBindList(this.deleteSquare),\n                 moveRightWord: this.parseBindList(this.moveRightWord),\n                 moveLeftWord: this.parseBindList(this.moveLeftWord),\n                 // moveUpWord: this.parseBindList(this.moveUpWord),\n                 // moveDownWord: this.parseBindList(this.moveDownWord),\n                 moveStartWord: this.parseBindList(this.moveStartWord),\n                 moveEndWord: this.parseBindList(this.moveEndWord),\n                 deleteWord: this.parseBindList(this.deleteWord),\n                 switchDirection: this.parseBindList(this.switchDirection),\n             }\n         },\n\n         getThemeObject(theme) {\n             switch(theme) {\n                 case \"doom_zenburn\":\n                     this.selectedTheme = doom_zenburn;\n                     break;\n                 case \"doom_wilmersdorf\":\n                     this.selectedTheme = doom_wilmersdorf;\n                     break;\n                 case \"doom_vibrant\":\n                     this.selectedTheme = doom_vibrant;\n                     break;\n                 case \"doom_spacegrey\":\n                     this.selectedTheme = doom_spacegrey;\n                     break;\n                 case \"doom_solarized\":\n                     this.selectedTheme = doom_solarized;\n                     break;\n                 case \"doom_solarized_dark\":\n                     this.selectedTheme = doom_solarized_dark;\n                     break;\n                 case \"doom_snazzy\":\n                     this.selectedTheme = doom_snazzy;\n                     break;\n                 case \"doom_rouge\":\n                     this.selectedTheme = doom_rouge;\n                     break;\n                 case \"doom_peacock\":\n                     this.selectedTheme = doom_peacock;\n                     break;\n                 case \"doom_palenight\":\n                     this.selectedTheme = doom_palenight;\n                     break;\n                 case \"doom_outrun_electric\":\n                     this.selectedTheme = doom_outrun_electric;\n                     break;\n                 case \"doom_opera\":\n                     this.selectedTheme = doom_opera;\n                     break;\n                 case \"doom_opera_light\":\n                     this.selectedTheme = doom_opera_light;\n                     break;\n                 case \"doom_one\":\n                     this.selectedTheme = doom_one;\n                     break;\n                 case \"doom_one_light\":\n                     this.selectedTheme = doom_one_light;\n                     break;\n                 case \"doom_old_hope\":\n                     this.selectedTheme = doom_old_hope;\n                     break;\n                 case \"doom_oceanic_next\":\n                     this.selectedTheme = doom_oceanic_next;\n                     break;\n                 case \"doom_nord\":\n                     this.selectedTheme = doom_nord;\n                     break;\n                 case \"doom_nord_light\":\n                     this.selectedTheme = doom_nord_light;\n                     break;\n                 case \"doom_moonlight\":\n                     this.selectedTheme = doom_moonlight;\n                     break;\n                 case \"doom_monokai_pro\":\n                     this.selectedTheme = doom_monokai_pro;\n                     break;\n                 case \"doom_molokai\":\n                     this.selectedTheme = doom_molokai;\n                     break;\n                 case \"doom_miramare\":\n                     this.selectedTheme = doom_miramare;\n                     break;\n                 case \"doom_material\":\n                     this.selectedTheme = doom_material;\n                     break;\n                 case \"doom_manegram\":\n                     this.selectedTheme = doom_manegram;\n                     break;\n                 case \"doom_laserwave\":\n                     this.selectedTheme = doom_laserwave;\n                     break;\n                 case \"doom_horizon\":\n                     this.selectedTheme = doom_horizon;\n                     break;\n                 case \"doom_henna\":\n                     this.selectedTheme = doom_henna;\n                     break;\n                 case \"doom_fairy_floss\":\n                     this.selectedTheme = doom_fairy_floss;\n                     break;\n                 case \"doom_ephemeral\":\n                     this.selectedTheme = doom_ephemeral;\n                     break;\n                 case \"doom_dracula\":\n                     this.selectedTheme = doom_dracula;\n                     break;\n                 case \"doom_dark_plus\":\n                     this.selectedTheme = doom_dark_plus;\n                     break;\n                 case \"doom_city_lights\":\n                     this.selectedTheme = doom_city_lights;\n                     break;\n                 case \"doom_challenger_dark\":\n                     this.selectedTheme = doom_challenger_dark;\n                     break;\n                 case \"doom_acario_light\":\n                     this.selectedTheme = doom_acario_light;\n                     break;\n                 case \"doom_acario_dark\":\n                     this.selectedTheme = doom_acario_dark;\n                     break;\n                 case \"doom_iosvkem\":\n                     this.selectedTheme = doom_iosvkem;\n                     break;\n             }\n             return;\n         },\n\n         // processFile() {\n         //     let input = document.getElementById('uploaded');\n         //     if (!input.files[0]) {\n         //         // case when there's no file selected. maybe default to my own cw\n         //         console.log(\"no file selected\")\n         //         return;\n         //     } else {\n         //         let fileReader = new FileReader();\n         //         let puzzleObj;\n         //         let parent = this;\n         //         fileReader.readAsText(input.files[0]);\n         //         fileReader.onload = function(e) {\n         //             puzzleObj = JSON.parse(e.target.result);\n         //             parent.$emit('puzzle-send', puzzleObj);\n         //         }\n         //     }\n         // },\n\n         createSettingsObject() {\n             // this.processFile();\n             this.getThemeObject(this.selectTheme);\n             return {\n                 selectedTheme: this.selectedTheme,\n                 upload: this.uploadJson,\n                 bindFunctionObject: this.createBindFunctionObject()\n             }\n         },\n\n         emitSettings() {\n             this.$emit('settings', this.createSettingsObject());\n         },\n\n         removeBind(bindArray, bindItem) {\n             let removeIndex = bindArray.indexOf(bindItem);\n             if (removeIndex > -1) {\n                 bindArray.splice(removeIndex, 1);\n             }\n             return bindArray;\n         }\n     },\n\n     computed: {\n         settingsContStyle() {\n             return {\n                 color: this.selectedTheme.fg,\n             }\n         },\n\n         headerStyle() {\n             return {\n                 color: this.selectedTheme.green,\n             }\n         },\n         \n         removeBindStyle() {\n             return {\n                 '--background-color-hover': this.selectedTheme.red,\n             }\n         },\n         \n         applyButtonStyle() {\n             return {\n                 backgroundColor: this.selectedTheme.base1,\n                 color: this.selectedTheme.fg\n             }\n         }\n     },\n\n     mounted() {\n         this.emitSettings()\n     }\n }\n</script>\n\n<style scoped>\n .settings-container {\n     display: grid;\n     grid-template-columns: 1.5fr 1.5fr 1fr;\n     grid-gap: 0.5em;\n }\n .apply-settings {\n     grid-column: 3;\n     justify-self: right;\n     padding-left: 10px;\n     padding-right: 10px;\n     padding-top: 5px;\n     padding-bottom: 5px;\n     font-size: 16px;\n     border: none;\n     cursor: pointer;\n     border-radius: 5px;\n     outline: none;\n }\n .bind-item {\n     cursor: pointer;\n     border-radius: 5px;\n }\n .bind-item:hover {\n     background-color: var(--background-color-hover);\n     text-decoration: line-through;\n }\n</style>\n","<template>\n    <input type=\"text\"\n           v-model=\"keyString\"\n           @keydown.enter=\"enterKeyString\"\n    />\n</template>\n\n<script>\n export default {\n     name: 'settingsInput',\n\n     emits: ['valid-keybind'],\n\n     data() {\n         return {\n             keyString: '',\n         }\n     },\n\n     methods: {\n         enterKeyString() {\n             let bindArray = this.validateKeyString(this.keyString)\n             if (bindArray !== null) {\n                 this.$emit('valid-keybind', bindArray);\n                 this.keyString = '';\n             } else {\n                 this.keyString=\"invalid binding!\"\n             }\n         },\n\n         isValidSingleKeyString(keyString) {\n             // return true if keyString (a _single_ binding) is a valid binding\n             let split = keyString.split('-');\n             let legalSingles = [\"Tab\", \"Space\", \"Backspace\", \"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\", \"Enter\"];\n             let legalMods = [\"Ctrl\", \"Shift\"];\n             if (split.length === 1) {\n                 return legalSingles.includes(split[0])\n             } else if (split.length === 2) {\n                 return (legalMods.includes(split[0]) && (legalSingles.includes(split[1]) || /^\\w$/.test(split[1])))\n             } else {\n                 return false\n             }\n         },\n\n         validateKeyString(multiKeyString) {\n             // return array of binds (string) if _all_ the bindings in the\n             // comma-seperated list multiKeyString are valid\n             let split = multiKeyString.split(',');\n             for (let i=0; i < split.length; i++) {\n                 if (!this.isValidSingleKeyString(split[i])) {\n                     return null\n                 }\n             }\n             return split\n         }\n     }\n }\n</script>\n","import { render } from \"./settingsInput.vue?vue&type=template&id=3585e9ba&bindings={\\\"keyString\\\":\\\"data\\\",\\\"enterKeyString\\\":\\\"options\\\",\\\"isValidSingleKeyString\\\":\\\"options\\\",\\\"validateKeyString\\\":\\\"options\\\"}\"\nimport script from \"./settingsInput.vue?vue&type=script&lang=js\"\nexport * from \"./settingsInput.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./settings.vue?vue&type=template&id=72da786e&scoped=true&bindings={\\\"selectTheme\\\":\\\"data\\\",\\\"selectedTheme\\\":\\\"data\\\",\\\"uploadJson\\\":\\\"data\\\",\\\"moveRightSquare\\\":\\\"data\\\",\\\"moveLeftSquare\\\":\\\"data\\\",\\\"moveUpSquare\\\":\\\"data\\\",\\\"moveDownSquare\\\":\\\"data\\\",\\\"deleteSquare\\\":\\\"data\\\",\\\"moveRightWord\\\":\\\"data\\\",\\\"moveLeftWord\\\":\\\"data\\\",\\\"moveStartWord\\\":\\\"data\\\",\\\"moveEndWord\\\":\\\"data\\\",\\\"deleteWord\\\":\\\"data\\\",\\\"switchDirection\\\":\\\"data\\\",\\\"parseBind\\\":\\\"options\\\",\\\"parseBindList\\\":\\\"options\\\",\\\"createBindFunctionObject\\\":\\\"options\\\",\\\"getThemeObject\\\":\\\"options\\\",\\\"createSettingsObject\\\":\\\"options\\\",\\\"emitSettings\\\":\\\"options\\\",\\\"removeBind\\\":\\\"options\\\",\\\"settingsContStyle\\\":\\\"options\\\",\\\"headerStyle\\\":\\\"options\\\",\\\"removeBindStyle\\\":\\\"options\\\",\\\"applyButtonStyle\\\":\\\"options\\\"}\"\nimport script from \"./settings.vue?vue&type=script&lang=js\"\nexport * from \"./settings.vue?vue&type=script&lang=js\"\n\nimport \"./settings.vue?vue&type=style&index=0&id=72da786e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-72da786e\"\n\nexport default script","import { render } from \"./toolbar.vue?vue&type=template&id=006c0dec&scoped=true&bindings={\\\"currentPoint\\\":\\\"props\\\",\\\"isFinishedShow\\\":\\\"props\\\",\\\"settingsObject\\\":\\\"props\\\",\\\"modalStyle\\\":\\\"options\\\",\\\"checkActive\\\":\\\"data\\\",\\\"checkMouse\\\":\\\"data\\\",\\\"revealActive\\\":\\\"data\\\",\\\"clearActive\\\":\\\"data\\\",\\\"revealMouse\\\":\\\"data\\\",\\\"clearMouse\\\":\\\"data\\\",\\\"rebusMouse\\\":\\\"data\\\",\\\"timeMouse\\\":\\\"data\\\",\\\"settingsMouse\\\":\\\"data\\\",\\\"isSettingsShow\\\":\\\"data\\\",\\\"showSettings\\\":\\\"options\\\",\\\"hideSettings\\\":\\\"options\\\",\\\"clearStopwatch\\\":\\\"options\\\",\\\"styleToolbar\\\":\\\"options\\\"}\"\nimport script from \"./toolbar.vue?vue&type=script&lang=js\"\nexport * from \"./toolbar.vue?vue&type=script&lang=js\"\n\nimport \"./toolbar.vue?vue&type=style&index=0&id=006c0dec&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-006c0dec\"\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=85c308ce&bindings={\\\"puzzleTitle\\\":\\\"data\\\",\\\"puzzleAuthor\\\":\\\"data\\\",\\\"puzzleCopyright\\\":\\\"data\\\",\\\"puzzleGrid\\\":\\\"data\\\",\\\"rebusObj\\\":\\\"data\\\",\\\"cluesAcross\\\":\\\"data\\\",\\\"cluesDown\\\":\\\"data\\\",\\\"gridKey\\\":\\\"data\\\",\\\"acrossClueContKey\\\":\\\"data\\\",\\\"downClueContKey\\\":\\\"data\\\",\\\"clueFocus\\\":\\\"data\\\",\\\"activeClue\\\":\\\"data\\\",\\\"currentPoint\\\":\\\"data\\\",\\\"gridFullMessage\\\":\\\"data\\\",\\\"isFinishedShow\\\":\\\"data\\\",\\\"settingsObject\\\":\\\"data\\\",\\\"toolbarCSS\\\":\\\"options\\\",\\\"activeClueCSS\\\":\\\"options\\\",\\\"appStyle\\\":\\\"options\\\",\\\"clueContStyle\\\":\\\"options\\\",\\\"modalStyle\\\":\\\"options\\\",\\\"bylineStyle\\\":\\\"options\\\",\\\"squareFocusToAppEar\\\":\\\"options\\\",\\\"primaryClueFocusToAppEar\\\":\\\"options\\\",\\\"checkEar\\\":\\\"options\\\",\\\"gridFullEar\\\":\\\"options\\\",\\\"clueClickToAppEar\\\":\\\"options\\\"}\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&lang=css\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./grid.vue?vue&type=style&index=0&id=6170f946&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./square.vue?vue&type=style&index=0&id=e52d2334&scoped=true&lang=css\""],"sourceRoot":""}